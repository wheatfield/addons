<?xml version="1.0" encoding="UTF-8"?>
<includes> 
	<include file="defaults.xml" />
	<include file="IncludesAnimations.xml" />
	<include file="IncludesBackgrounds.xml" />
	<include file="IncludesHome.xml" />
	<include file="IncludesViews.xml" />
	<include file="IncludesWalls.xml" />
	<include file="IncludesGenres.xml" />
	<include file="IncludesFlags.xml" />
	<include file="IncludesMenus.xml" />
	<include file="IncludesNextAiredInfo.xml" />
	<include file="IncludesNotifications.xml" />
	<include file="IncludesHomeWidgets.xml" />
	<include file="IncludesStaticContent.xml" />
	<include file="IncludesWeather.xml" />
	<include file="IncludesPVR.xml" />
	<include file="script-skinshortcuts-includes.xml" />
	<include file="IncludesDialogs.xml" />
	<include file="IncludesWidgetContainer.xml" />
	<include file="IncludesWidgetContainer_Vertical.xml" />

	<constant name="FanartCrossfadeTime">250</constant>
	<constant name="IconCrossfadeTime">250</constant>
	<constant name="ButtonsLabelsFade">50</constant>
	<constant name="ButtonsLabelsZoom">95</constant>

	<variable name="LibraryInfoLabel">
		<value condition="StringCompare(Container(20).ListItem.Property(defaultID),movies)">$INFO[Window(Home).Property(Movies.Count),$LOCALIZE[20161]: ]</value>
		<value condition="StringCompare(Container(20).ListItem.Property(defaultID),tvshows)">$INFO[Window(Home).Property(TVShows.Count),$LOCALIZE[20161]: ]</value>
		<value condition="StringCompare(Container(20).ListItem.Property(defaultID),music)">$INFO[Window(Home).Property(Music.AlbumsCount),$LOCALIZE[132]: ]</value>
	</variable>
	<variable name="LibraryInfoLabel2">
		<value condition="StringCompare(Container(20).ListItem.Property(defaultID),movies)">$INFO[Window(Home).Property(Movies.UnWatched),$LOCALIZE[31263]: ]</value>
		<value condition="StringCompare(Container(20).ListItem.Property(defaultID),tvshows)">$INFO[Window(Home).Property(Episodes.UnWatched),$LOCALIZE[31265]: ]</value>
		<value condition="StringCompare(Container(20).ListItem.Property(defaultID),music)">$INFO[Window(Home).Property(Music.SongsCount),$LOCALIZE[134]: ]</value>
	</variable>
	<variable name="LibraryInfoLabel3">
		<value condition="StringCompare(Container(20).ListItem.Property(defaultID),movies)">$INFO[Window(Home).Property(Movies.Watched),$LOCALIZE[31126]: ]</value>
		<value condition="StringCompare(Container(20).ListItem.Property(defaultID),tvshows)">$INFO[Window(Home).Property(Episodes.Watched),$LOCALIZE[31123]: ]</value>
		<value condition="StringCompare(Container(20).ListItem.Property(defaultID),music)">$INFO[Window(Home).Property(Music.ArtistsCount),$LOCALIZE[133]: ]</value>
	</variable>

	<include name="BackgroundItems">
		<include>BackgroundContent</include>
		<include>GlobalFanart</include>
		<include>BackgroundVignette</include>
	</include>

	<include name="BackgroundItemsPVR">
		<include>BackgroundContent</include>
		<include>BackgroundVignette</include>
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">windows/pvr/bg_overlay.png</texture>
			<colordiffuse>D9FFFFFF</colordiffuse>
			<include>FanartFade</include>
		</control>
	</include>

	<include name="CommonItems">
		<include>CommonDialogsFadeOutBG</include>
		<include>CommonScrollingLetters</include>
		<include>CommonNowPlaying</include>
		<include>CommonPageCount</include>
	</include>

	<include name="FullscreenDimensions">
		<left>0</left>
		<top>0</top>
		<width>1280</width>
		<height>720</height>
		<aspectratio>stretch</aspectratio>
	</include>

	<include name="CommonDialogsFadeOutBG">
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">windows/bg/bg_diffuse.png</texture>
			<animation effect="fade" time="300" start="0" end="100" tween="sine" easing="out">WindowOpen</animation>
			<animation effect="fade" time="300" start="100" end="0" tween="sine" easing="in">WindowClose</animation>
			<animation effect="fade" time="300" start="0" end="100" tween="sine" easing="out">Visible</animation>
			<animation effect="fade" time="300" start="100" end="0" tween="sine" easing="in">Hidden</animation>
			<colordiffuse>ddFFFFFF</colordiffuse>
			<visible>!Window.IsVisible(home) + !Window.IsVisible(Favourites) + !Window.IsVisible(playercontrols)</visible>
			<visible>Window.IsActive(progressdialog) | Window.IsActive(okdialog) | Window.IsActive(DialogNumeric.xml) | Window.IsActive(DialogTextViewer.xml) | Window.IsActive(yesnodialog) | Window.IsActive(contextmenu) | Window.IsActive(virtualkeyboard)</visible>	
		</control>
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">views/other/menus_overlay.png</texture>
			<animation effect="fade" time="300" start="0" end="100" tween="sine" easing="out">WindowOpen</animation>
			<animation effect="fade" time="300" start="100" end="0" tween="sine" easing="in">WindowClose</animation>
			<animation effect="fade" time="300" start="0" end="100" tween="sine" easing="out">Visible</animation>
			<animation effect="fade" time="300" start="100" end="0" tween="sine" easing="in">Hidden</animation>
			<visible>
				[Window.IsActive(script-ExtendedInfo Script-VideoList.xml) + [Window.IsActive(Shutdownmenu) 
				| ControlGroup(9000).HasFocus] + !Window.IsActive(script-ExtendedInfo Script-T9Search.xml) + !Window.IsActive(virtualkeyboard)] 
				| ControlGroup(9111).HasFocus 
				| Window.IsActive(FileStackingDialog) 
				| [Window.IsActive(contextmenu) + ![Window.IsActive(home) | Window.IsActive(locksettings) | Window.IsActive(musicplaylisteditor) | Window.IsActive(filemanager) | Window.IsVisible(pvrchannelmanager)]] 
			</visible>
		</control>
	</include>

	<include name="TopZoomedSmallLabel">
		<height>65</height>
		<width min="10" max="1280">auto</width>
		<font>FontSize_20</font>
		<textcolor>99white</textcolor>
		<shadowcolor>77000000</shadowcolor>
		<align>left</align>
		<aligny>center</aligny>
		<scroll>false</scroll>
	</include>
	<include name="TopSmallLabel">
		<height>65</height>
		<width min="10" max="1280">auto</width>
		<font>FontSize_22</font>
		<textcolor>white</textcolor>
		<shadowcolor>77000000</shadowcolor>
		<align>left</align>
		<aligny>center</aligny>
		<scroll>false</scroll>
	</include>
	<include name="TopSmallIcon">
		<height>61</height>
		<width>22</width>
		<align>center</align>
		<aligny>center</aligny>		
		<aspectratio aligny="center" align="center">keep</aspectratio>
	</include>
	<include name="TopBigLabel">
		<height>50</height>
		<width min="10" max="1280">auto</width>
		<font>FontSize_40</font>
		<textcolor>white</textcolor>
		<shadowcolor>77000000</shadowcolor>
		<align>left</align>
		<aligny>center</aligny>
		<scroll>false</scroll>
	</include>
	<!-- *NOT USED*
	<include name="TopOptionsBigLabel">
			<height>43</height>
			<width min="10" max="1280">auto</width>
			<font>FontSize_36</font>
			<textcolor>white</textcolor>
			<shadowcolor>77000000</shadowcolor>
			<scroll>false</scroll>
	</include>
-->
<include name="TopButton">
	<font>-</font>
	<texturefocus>-</texturefocus>
	<texturenofocus>-</texturenofocus>
	<textureradioonfocus>-</textureradioonfocus>
	<textureradioonnofocus>-</textureradioonnofocus>
	<textureradioofffocus>-</textureradioofffocus>
	<textureradiooffnofocus>-</textureradiooffnofocus>
	<textureup>-</textureup>
	<texturedown>-</texturedown>
	<textureupfocus>-</textureupfocus>
	<texturedownfocus>-</texturedownfocus>
</include>

<include name="SettingsMenu">
	<control type="group">
		<left>45</left>
		<top>25</top>
		<include>SettingsSlideAnimations</include>
		<visible allowhiddenfocus="true">!ControlGroup(9222).HasFocus + !Window.IsActive(favourites) + !Window.IsActive(ShutdownMenu) + ![Window.IsActive(ContextMenu) + ![Window.IsActive(locksettings) | Window.IsVisible(pvrchannelmanager)]]</visible>
		<animation type="Visible">
			<effect type="fade" start="0" end="100" time="300" tween="sine" easing="in"  />
			<effect type="slide" start="0,35" end="0,0" time="350" tween="cubic" easing="out" />
		</animation>
		<animation type="Hidden">
			<effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
			<effect type="slide" start="0,0" end="0,35" time="350" tween="sine" easing="out" />
		</animation>
		<!-- ============================== -->
		<!-- == SettingsCategory Buttons == -->
		<!-- ============================== -->
		<control type="grouplist" id="9000">
			<left>0</left>
			<top>0</top>
			<height>2</height>
			<width>2</width>
			<onleft>9000</onleft>
			<onright>9000</onright>
			<onup condition="Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(SkinSettings)">9222</onup>
			<ondown condition="Window.IsVisible(AppearanceSettings) | Window.IsVisible(VideosSettings) | Window.IsVisible(PVRSettings) | Window.IsVisible(MusicSettings) | Window.IsVisible(PicturesSettings) | Window.IsVisible(WeatherSettings) | Window.IsVisible(NetworkSettings) | Window.IsVisible(SystemSettings) | Window.IsVisible(Profiles)  | Window.IsVisible(SystemInfo) | Window.IsVisible(ProgramsSettings)">9001</ondown>
			<ondown condition="Window.IsVisible(SkinSettings)">8000</ondown>
			<orientation>horizontal</orientation>
			<scrolltime>0</scrolltime>
			<control type="button" id="101">
				<description>Appearance</description>
				<include>TopButton</include>
				<label>31401</label>
				<onclick>ReplaceWindow(AppearanceSettings)</onclick>	
			</control>
			<control type="button" id="102">
				<description>Videos</description>
				<include>TopButton</include>
				<label>31402</label>
				<onclick>ReplaceWindow(VideosSettings)</onclick>
			</control>
			<control type="button" id="103">
				<description>Live TV</description>
				<include>TopButton</include>
				<label>31403</label>
				<onclick>ReplaceWindow(PVRSettings)</onclick>
			</control>
			<control type="button" id="104">	
				<description>Music</description>
				<include>TopButton</include>
				<label>31404</label>
				<onclick>ReplaceWindow(MusicSettings)</onclick>	
			</control>
			<control type="button" id="105">
				<description>Pictures</description>
				<include>TopButton</include>
				<label>31405</label>
				<onclick>ReplaceWindow(PicturesSettings)</onclick>	
			</control>
			<control type="button" id="106">
				<description>Weather</description>
				<include>TopButton</include>
				<label>31406</label>
				<onclick>ReplaceWindow(WeatherSettings)</onclick>	
			</control>
			<control type="button" id="107">
				<description>Add-Ons</description>
				<include>TopButton</include>
				<onclick>ReplaceWindow(AddonBrowser)</onclick>	
			</control>
			<control type="button" id="108">
				<description>Services</description>
				<include>TopButton</include>
				<label>31407</label>
				<onclick>ReplaceWindow(NetworkSettings)</onclick>	
			</control>
			<control type="button" id="109">
				<description>System</description>
				<include>TopButton</include>
				<label>31408</label>
				<onclick>ReplaceWindow(SystemSettings)</onclick>	
			</control>
			<control type="button." id="110">
				<description>Profiles</description>
				<include>TopButton</include>
				<onclick>ReplaceWindow(Profiles)</onclick>	
			</control>
		</control>
		<!-- ============================= -->
		<!-- == SettingsCategory Labels == -->
		<!-- ============================= -->
		<control type="groupList">
			<animation type="Conditional" condition="true">
				<effect type="fade" start="0" end="100" tween="sine" easing="in" time="250" />
				<effect type="zoom" start="100,0,1700,1" end="100,150,1700,60" tween="cubic" easing="out" time="300" />
			</animation>
			<left>0</left>
			<top>0</top>
			<width>1700</width>
			<height>60</height>
			<itemgap>5</itemgap>
			<orientation>horizontal</orientation>
			<include>SettingsSlideAnimations</include>
			<control type="label">
				<include>TopBigLabel</include>
				<label>$LOCALIZE[5]</label>
			</control>
			<control type="label">
				<description>Appearance</description>
				<include>TopSmallLabel</include>
				<label>$LOCALIZE[480]</label>
				<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!Control.HasFocus(101)" reversible="true">Conditional</animation>
				<animation effect="zoom" start="100" end="90" time="200" tween="cubic" easing="inout" center="auto" condition="!Control.HasFocus(101)" reversible="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Videos</description>
				<include>TopSmallLabel</include>
				<label>$LOCALIZE[157]</label>
				<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!Control.HasFocus(102)" reversible="true">Conditional</animation>
				<animation effect="zoom" start="100" end="90" time="200" tween="cubic" easing="inout" center="auto" condition="!Control.HasFocus(102)" reversible="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Live TV</description>
				<include>TopSmallLabel</include>
				<label>$LOCALIZE[31000]</label>
				<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!Control.HasFocus(103)" reversible="true">Conditional</animation>
				<animation effect="zoom" start="100" end="90" time="200" tween="cubic" easing="inout" center="auto" condition="!Control.HasFocus(103)" reversible="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Music</description>
				<include>TopSmallLabel</include>
				<label>$LOCALIZE[2]</label>
				<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!Control.HasFocus(104)" reversible="true">Conditional</animation>
				<animation effect="zoom" start="100" end="90" time="200" tween="cubic" easing="inout" center="auto" condition="!Control.HasFocus(104)" reversible="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Pictures</description>
				<include>TopSmallLabel</include>
				<label>$LOCALIZE[1]</label>
				<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!Control.HasFocus(105)" reversible="true">Conditional</animation>
				<animation effect="zoom" start="100" end="90" time="200" tween="cubic" easing="inout" center="auto" condition="!Control.HasFocus(105)" reversible="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Weather</description>
				<include>TopSmallLabel</include>
				<label>$LOCALIZE[8]</label>
				<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!Control.HasFocus(106)" reversible="true">Conditional</animation>
				<animation effect="zoom" start="100" end="90" time="200" tween="cubic" easing="inout" center="auto" condition="!Control.HasFocus(106)" reversible="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Add-Ons</description>
				<include>TopSmallLabel</include>
				<label>$LOCALIZE[24001]</label>
				<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!Control.HasFocus(107)" reversible="true">Conditional</animation>
				<animation effect="zoom" start="100" end="90" time="200" tween="cubic" easing="inout" center="auto" condition="!Control.HasFocus(107)" reversible="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Services</description>
				<include>TopSmallLabel</include>
				<label>$LOCALIZE[14036]</label>
				<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!Control.HasFocus(108)" reversible="true">Conditional</animation>
				<animation effect="zoom" start="100" end="90" time="200" tween="cubic" easing="inout" center="auto" condition="!Control.HasFocus(108)" reversible="true">Conditional</animation>
			</control>
			<control type="label">
				<description>System</description>
				<include>TopSmallLabel</include>
				<label>$LOCALIZE[13000]</label>
				<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!Control.HasFocus(109)" reversible="true">Conditional</animation>
				<animation effect="zoom" start="100" end="90" time="200" tween="cubic" easing="inout" center="auto" condition="!Control.HasFocus(109)" reversible="true">Conditional</animation>
			</control>
			<control type="label.">
				<description>Profiles</description>
				<include>TopSmallLabel</include>
				<label>$LOCALIZE[13200]</label>
				<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!Control.HasFocus(110)" reversible="true">Conditional</animation>
				<animation effect="zoom" start="100" end="90" time="200" tween="cubic" easing="inout" center="auto" condition="!Control.HasFocus(110)" reversible="true">Conditional</animation>
			</control>
		</control>
		<control type="label">
			<description>Setting Level Info</description>
			<left>1</left>
			<top>45</top>
			<width>300</width>
			<height>20</height>
			<font>FontSize_18</font>
			<textcolor>blue</textcolor>
			<scroll>false</scroll>
			<align>left</align>
			<aligny>center</aligny>
			<label>$INFO[Control.GetLabel(20)]</label>
		</control>		 
	</control>

	<control type="group">
		<left>45</left>
		<top>25</top>
		<include>CommonSlideAnimations</include>
		<include>ShutdownMenuAnimation</include>
		<!-- =========================== -->
		<!-- == SettingsLevel Buttons == -->
		<!-- =========================== -->
		<control type="grouplist" id="9222">
			<left>0</left>
			<top>0</top>
			<width>1190</width>
			<height>70</height>
			<itemgap>0</itemgap>
			<align>left</align>
			<orientation>horizontal</orientation>
			<onleft>9222</onleft>
			<onright>9222</onright>
			<onup>noop</onup>
			<ondown>9000</ondown>
			<onback>9000</onback>
			<control type="button" id="91">
				<description>Settings Level</description>
				<label>$INFO[Control.GetLabel(20),$LOCALIZE[31167] ]</label>
				<onclick>SettingsLevelChange</onclick>
				<include>TopButton</include>
				<visible>Window.IsVisible(SettingsCategory.xml)</visible>
			</control>
			<control type="button" id="92">
				<description>Reset Level</description>
				<label>$LOCALIZE[31168]</label>
				<onclick>SetFocus(9001)</onclick>
				<onclick>SettingsReset</onclick>
				<include>TopButton</include>
				<visible>Window.IsVisible(SettingsCategory.xml)</visible>
			</control>
			<control type="button" id="93">
				<description>Reset Skin</description>
				<label>$LOCALIZE[31169]</label>
				<onclick>SetFocus(9001)</onclick>
				<onclick>ActivateWindow(1117)</onclick>
				<include>TopButton</include>
				<visible>Window.IsVisible(SkinSettings)</visible>
			</control>
		</control>
		<!-- ========================== -->
		<!-- == SettingsLevel Labels == -->
		<!-- ========================== -->
		<control type="grouplist">
			<visible allowhiddenfocus="true">ControlGroup(9222).HasFocus</visible>
			<animation type="Visible"  reversible="false">
				<effect type="fade" start="0" end="100" time="300" tween="sine" easing="in"  />
				<effect type="slide" start="0,-55" end="0,0" time="350" tween="cubic" easing="out" />
			</animation>
			<animation type="Hidden" reversible="false">
				<effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
				<effect type="slide" start="0,0" end="0,-55" time="350" tween="sine" easing="out" />
			</animation>
			<left>0</left>
			<top>0</top>
			<width>1190</width>
			<height>70</height>
			<itemgap>10</itemgap>
			<align>left</align>
			<orientation>horizontal</orientation>
			<control type="label">
				<include>TopBigLabel</include>
				<label>$LOCALIZE[33063]:</label>
			</control>
			<control type="label">
				<description>Settings Level</description>
				<include>TopSmallLabel</include>
				<label>$INFO[Control.GetLabel(91)]</label>
				<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!ControlGroup(9222).HasFocus(91)" reversible="true">Conditional</animation>
				<animation effect="zoom"  start="100" end="90" time="200" tween="cubic" easing="inout" center="auto" condition="!ControlGroup(9222).HasFocus(91)" reversible="true">Conditional</animation>
				<visible>Window.IsVisible(SettingsCategory.xml)</visible>
			</control>
			<control type="label">
				<description>Reset Level</description>
				<include>TopSmallLabel</include>
				<label>$INFO[Control.GetLabel(92)]</label>
				<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!ControlGroup(9222).HasFocus(92)" reversible="true">Conditional</animation>
				<animation effect="zoom"  start="100" end="90" time="200" tween="cubic" easing="inout" center="auto" condition="!ControlGroup(9222).HasFocus(92)" reversible="true">Conditional</animation>
				<visible>Window.IsVisible(SettingsCategory.xml)</visible>
			</control>
			<control type="label">
				<description>Reset Skin</description>
				<include>TopSmallLabel</include>
				<label>$INFO[Control.GetLabel(93)]</label>
				<animation effect="fade" start="100" end="70" time="200" tween="cubic" easing="inout" condition="!ControlGroup(9222).HasFocus(93)" reversible="true">Conditional</animation>
				<animation effect="zoom"  start="100" end="90" time="200" tween="cubic" easing="inout" center="auto" condition="!ControlGroup(9222).HasFocus(93)" reversible="true">Conditional</animation>
				<visible>Window.IsVisible(SkinSettings)</visible>
			</control>
		</control>
	</control>
</include>

<include name="SettingsLabel">
	<description>Default Button</description>
	<width>782</width>
	<height>50</height>
	<font>FontSize_30B</font>
	<textcolor>white</textcolor>
	<shadowcolor>99000000</shadowcolor>
	<align>left</align>
	<aligny>top</aligny>
	<textoffsetx>15</textoffsetx>
	<textoffsety>12</textoffsety>
	<pulseonselect>false</pulseonselect>
</include>
<include name="SettingsButton">
	<description>Default Button</description>
	<width>782</width>
	<height>50</height>
	<font>FontSize_20</font>
	<textcolor>77white</textcolor>
	<focusedcolor>white</focusedcolor>
	<disabledcolor>33white</disabledcolor>
	<shadowcolor>99000000</shadowcolor>
	<texturefocus>buttons/focus.png</texturefocus>
	<texturenofocus>-</texturenofocus>
	<align>left</align>
	<aligny>top</aligny>
	<textoffsetx>15</textoffsetx>
	<textoffsety>12</textoffsety>
	<pulseonselect>false</pulseonselect>
</include>
<include name="SettingsSeperator">
	<description>Default Button</description>
	<width>782</width>
	<height>1</height>
	<colordiffuse>77white</colordiffuse>
	<texture>info/seperator.png</texture>
</include>
<include name="SettingsRadioButton">
	<description>Default RadioButton</description>
	<width>782</width>
	<height>50</height>
	<radiowidth>57</radiowidth>
	<radioheight>41</radioheight>
	<font>FontSize_20</font>
	<textcolor>77white</textcolor>
	<focusedcolor>white</focusedcolor>
	<disabledcolor>33white</disabledcolor>
	<shadowcolor>99000000</shadowcolor>
	<texturefocus>buttons/focus.png</texturefocus>
	<texturenofocus>-</texturenofocus>
	<textureradioonfocus>buttons/radio_button_on.png</textureradioonfocus>
	<textureradioonnofocus>buttons/radio_button_on.png</textureradioonnofocus>
	<textureradioofffocus>buttons/radio_button_off.png</textureradioofffocus>
	<textureradiooffnofocus>buttons/radio_button_off.png</textureradiooffnofocus>
	<align>left</align>
	<aligny>top</aligny>
	<radioposx>715</radioposx>
	<textoffsetx>15</textoffsetx>
	<textoffsety>12</textoffsety>
	<pulseonselect>false</pulseonselect>
</include>
<include name="SettingsSpincontrolex">
	<description>Default SpinControlex</description>
	<width>782</width>
	<height>50</height>
	<font>FontSize_20</font>
	<textcolor>77white</textcolor>
	<focusedcolor>white</focusedcolor>
	<disabledcolor>33white</disabledcolor>
	<shadowcolor>99000000</shadowcolor>
	<texturefocus>buttons/focus.png</texturefocus>
	<texturenofocus>-</texturenofocus>
	<textureup>buttons/arrow_up_nf.png</textureup>
	<texturedown>buttons/arrow_down_nf.png</texturedown>
	<textureupfocus>buttons/arrow_up_fo.png</textureupfocus>
	<texturedownfocus>buttons/arrow_down_fo.png</texturedownfocus>
	<align>left</align>
	<aligny>top</aligny>
	<spinwidth>30</spinwidth>
	<spinheight>44</spinheight>
	<spinposx>10</spinposx>
	<textoffsetx>15</textoffsetx>
	<textoffsety>12</textoffsety>
	<pulseonselect>false</pulseonselect>
	<reverse>yes</reverse>
</include>
<include name="SettingsSliderex">
	<description>Default Slider</description>
	<height>50</height>
	<font>FontSize_20</font>
	<textcolor>77white</textcolor>
	<focusedcolor>white</focusedcolor>
	<disabledcolor>33white</disabledcolor>
	<shadowcolor>99000000</shadowcolor>
	<texturefocus>buttons/focus.png</texturefocus>
	<texturenofocus>-</texturenofocus>
	<texturesliderbar>osd/osd_slider_bg.png</texturesliderbar>
	<textureslidernib>osd/osd_slider_nib_nf.png</textureslidernib>
	<textureslidernibfocus>osd/osd_slider_nib_fo.png</textureslidernibfocus>
	<sliderwidth>200</sliderwidth>
	<sliderheight>25</sliderheight>
	<align>left</align>
	<aligny>center</aligny>
	<pulseonselect>false</pulseonselect>
	<textoffsetx>15</textoffsetx>
	<textoffsety>0</textoffsety>
</include>

<include name="DialogsButtonLabels">
	<height>62</height>
	<width min="10" max="552">auto</width>
	<font>FontSize_20</font>
	<textcolor>white</textcolor>
	<shadowcolor>99000000</shadowcolor>
	<align>left</align>
	<aligny>center</aligny>
	<scroll>false</scroll>
</include>

<include name="TopLeftMenusButton">
	<width>425</width>
	<height>37</height>
	<font>FontSize_22</font>
	<textcolor>77white</textcolor>
	<focusedcolor>white</focusedcolor>
	<disabledcolor>44white</disabledcolor>
	<shadowcolor>99000000</shadowcolor>
	<align>left</align>
	<aligny>top</aligny>
	<textwidth>390</textwidth>
	<textoffsetx>25</textoffsetx>
	<textoffsety>4</textoffsety>
	<texturefocus>buttons/contextmenu_fo.png</texturefocus>
	<texturenofocus>buttons/contextmenu_nf.png</texturenofocus>
	<alttexturefocus>buttons/contextmenu_fo.png</alttexturefocus>
	<alttexturenofocus>buttons/contextmenu_nf.png</alttexturenofocus>
	<textureradioonfocus>-</textureradioonfocus>
	<textureradioonnofocus>-</textureradioonnofocus>
	<textureradioofffocus>-</textureradioofffocus>
	<textureradiooffnofocus>-</textureradiooffnofocus>
	<pulseonselect>false</pulseonselect>
</include>

<include name="TopLeftMenusButtonNonListPoint">
	<width>425</width>
	<height>37</height>
	<font>FontSize_22</font>
	<textcolor>77white</textcolor>
	<focusedcolor>white</focusedcolor>
	<disabledcolor>44white</disabledcolor>
	<shadowcolor>99000000</shadowcolor>
	<align>left</align>
	<aligny>top</aligny>
	<textwidth>390</textwidth>
	<textoffsetx>25</textoffsetx>
	<textoffsety>4</textoffsety>		
	<textureradioonfocus>-</textureradioonfocus>
	<textureradioonnofocus>-</textureradioonnofocus>
	<textureradioofffocus>-</textureradioofffocus>
	<textureradiooffnofocus>-</textureradiooffnofocus>
	<pulseonselect>false</pulseonselect>
</include>

<!-- ================== -->
<!-- Covers Now Playing -->
<!-- ================== --> 
<include name="CoversNowPlaying">
	<control type="group">	
		<visible>Player.HasMedia + !Window.IsActive(busydialog) + !SubString(Window(Videos).Property(TvTunesIsAlive),True) + !Window.IsActive(ProgressDialog) + !SubString(Player.Filenameandpath,extras/intro/intro.mp4) + !SubString(Player.Filenameandpath,extras\intro\intro.mp4)</visible>		
		<!-- Music Cover -->
		<control type="group" id="2555">
			<visible>Player.HasAudio</visible>
			<left>45</left>
			<top>525</top>
			<include>HomeNowPlayingCoversSlideAnimations</include>
			<include name="HomeNowPlayingCoversHideAnimations">
				<param name="slide">-175</param>
			</include>			
			<control type="image">
				<left>-110</left>
				<top>-100</top>
				<width>370</width>
				<height>400</height>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<texture background="true">views/list/shine.png</texture>
				<animation effect="fade" end="40" reversible="false" condition="true" time="0">Conditional</animation>
			</control>
			<control type="group">
				<visible>Player.HasAudio + !Player.IsInternetStream + IntegerGreaterThan(MusicPlayer.Time,0)</visible>
				<animation type="Hidden" reversible="false">
					<effect type="slide" start="0,0" end="0,60" tween="sine" easing="out" time="600" delay="0" />
					<effect type="fade" start="100" end="0" time="500" delay="0"/>
				</animation>
				<animation type="Visible" reversible="false">
					<effect type="fade" start="0" end="100" time="500" delay="500"/>
					<effect type="slide" start="0,60" end="0,0" tween="sine" easing="out" time="700" delay="300" />
				</animation>
				<control type="image">
					<left>3</left>
					<top>-50</top>
					<width>155</width>
					<height>155</height>
					<texture diffuse="osd/cd_diffuse.png" background="true" fallback="osd/cd.png">$INFO[Player.FolderPath,,cdart.png]</texture>
					<aspectratio>keep</aspectratio>
					<include>CDImageAnim</include>
					<visible>Skin.HasSetting(HideHandwrittenDiscArt) + !Player.IsInternetStream</visible>
				</control>
				<control type="group">
					<visible>!Skin.HasSetting(HideHandwrittenDiscArt) + !Player.IsInternetStream</visible>
					<animation effect="zoom" start="69" end="69" center="auto" time="0" delay="0" condition="true">Conditional</animation>
					<left>-224</left>
					<top>-95</top>
					<include>CDImageAnim2Home</include>
					<control type="group">						
						<width>225</width>
						<height>225</height>											
						<animation effect="rotate" end="-3600" center="auto" time="100000" loop="true" reversible="false" condition="true">Conditional</animation>
						<control type="image">						
							<width>225</width>
							<height>225</height>
							<texture background="true" diffuse="osd/cd_diffuse.png">osd/cdr.png</texture>
							<aspectratio>keep</aspectratio>		
						</control>
						<control type="textbox">
							<left>48</left>
							<top>30</top>
							<width>130</width>
							<height>40</height>
							<align>center</align>
							<aligny>top</aligny>
							<font>Hand_16</font>
							<textcolor>ccblack</textcolor>
							<label>$INFO[MusicPlayer.Artist]</label>	
							<animation effect="fade" start="75" end="75" time="0" delay="0" condition="true">Conditional</animation>
						</control>
						<control type="textbox">
							<left>63</left>
							<top>148</top>
							<width>100</width>
							<height>58</height>
							<align>center</align>
							<aligny>center</aligny>
							<font>Hand_16</font>
							<textcolor>ccblack</textcolor>
							<label>$INFO[MusicPlayer.Album]</label>	
							<animation effect="fade" start="75" end="75" time="0" delay="0" condition="true">Conditional</animation>
						</control>
					</control>					
					<control type="image">						
						<width>225</width>
						<height>225</height>
						<texture background="true" diffuse="osd/cd_diffuse.png">osd/cdr_shadow_top.png</texture>
						<aspectratio>keep</aspectratio>						
					</control>	
				</control>
			</control>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>160</width>
				<height>160</height>
				<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
				<texture background="true" fallback="thumbs/fallback_square.png" diffuse="thumbs/music_diffuse.png">thumbs/thumb_back.png</texture>
			</control>				
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>160</width>
				<height>160</height>
				<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
				<texture background="true" fallback="thumbs/fallback_square.png" diffuse="thumbs/music_diffuse.png">$INFO[Player.Art(thumb)]</texture>
				<fadetime>800</fadetime>
			</control>
			<control type="image">
				<left>-7</left>
				<top>-7</top>
				<width>174</width>
				<height>174</height>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<texture background="true">thumbs/music_overlay.png</texture>
			</control>
			<control type="image">
				<left>0</left>
				<top>162</top>
				<width>160</width>
				<height>160</height>
				<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
				<texture background="true" fallback="thumbs/fallback_square.png" flipy="true" diffuse="thumbs/music_reflection_diffuse.png">thumbs/thumb_back.png</texture>
				<fadetime>800</fadetime>
				<colordiffuse>a0ffffff</colordiffuse>
			</control>
			<control type="image">
				<left>0</left>
				<top>162</top>
				<width>160</width>
				<height>160</height>
				<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
				<texture background="true" fallback="thumbs/fallback_square.png" flipy="true" diffuse="thumbs/music_reflection_diffuse.png">$INFO[Player.Art(thumb)]</texture>
				<fadetime>800</fadetime>
				<colordiffuse>a0ffffff</colordiffuse>
			</control>
			<control type="image">
				<description>paused indicator</description>
				<left>-1</left>
				<top>-1</top>
				<width>162</width>
				<height>162</height>
				<texture background="true" diffuse="thumbs/music_diffuse.png">osd/paused-overlay.png</texture>
				<aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
				<animation type="conditional" condition="!Player.Paused" reversible="false">
					<effect type="fade" start="50" end="0" time="300" />
				</animation>	
				<animation type="conditional" condition="Player.Paused" reversible="false">
					<effect type="fade" start="0" end="50" time="300" />
				</animation>				
			</control>
		</control>
		<!-- Movies & Episodes Cover -->
		<control type="group" id="26">
			<left>45</left>
			<top>502</top>
			<include>HomeNowPlayingCoversSlideAnimations</include>
			<include condition="!StringCompare(Skin.String(MainMenuStyle),vertical)" name="HomeNowPlayingCoversHideAnimations">
				<param name="slide">-145</param>
			</include>
			<visible>Player.HasVideo + [!IsEmpty(Player.Art(poster)) | !IsEmpty(Player.Art(tvshow.poster)) | SubString(Player.Folderpath,/lovefilm/)] + !VideoPlayer.Content(LiveTV)</visible>
			<control type="image">
				<left>-110</left>
				<top>-100</top>
				<width>350</width>
				<height>400</height>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<texture background="true">views/list/shine.png</texture>
				<animation effect="fade" end="40" reversible="false" condition="true" time="0">Conditional</animation>
			</control>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>130</width>
				<height>185</height>
				<aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
				<texture background="true" diffuse="thumbs/poster_diffuse.png">thumbs/thumb_back.png</texture>
				<fadetime>800</fadetime>
			</control>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>130</width>
				<height>185</height>
				<texture background="true" fallback="thumbs/fallback_poster.png" diffuse="thumbs/poster_diffuse.png">$VAR[VideoPlayerThumb]</texture>
				<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
				<fadetime>800</fadetime>
			</control>
			<control type="image">
				<left>-7</left>
				<top>-7</top>
				<width>145</width>
				<height>199</height>
				<texture background="true">thumbs/poster_overlay.png</texture>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<fadetime>800</fadetime>
			</control>
			<control type="image">
				<left>0</left>
				<top>187</top>
				<width>130</width>
				<height>185</height>
				<texture background="true" fallback="thumbs/fallback_poster.png" flipy="true" diffuse="thumbs/poster_reflection_diffuse.png">$VAR[VideoPlayerThumb]</texture>
				<aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
				<fadetime>800</fadetime>
				<colordiffuse>A0FFFFFF</colordiffuse>
			</control>
			<control type="image">
				<description>paused indicator</description>
				<left>0</left>
				<top>0</top>
				<width>130</width>
				<height>185</height>
				<texture background="true" diffuse="thumbs/poster_diffuse.png">osd/paused-overlay.png</texture>
				<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>				
				<animation type="conditional" condition="!Player.Paused" reversible="false">
					<effect type="fade" start="50" end="0" time="300" />
				</animation>	
				<animation type="conditional" condition="Player.Paused" reversible="false">
					<effect type="fade" start="0" end="50" time="300" />
				</animation>				
			</control>
		</control>
		<!-- LiveTV Cover -->
		<control type="group" id="28">
			<left>45</left>
			<top>527</top>
			<include>HomeNowPlayingCoversSlideAnimations</include>
			<include name="HomeNowPlayingCoversHideAnimations">
				<param name="slide">-175</param>
			</include>
			<visible>Player.HasVideo + IsEmpty(Player.Art(poster)) + IsEmpty(Player.Art(tvshow.poster)) + !SubString(Player.Folderpath,/lovefilm/)</visible>	
			<control type="image">
				<left>-110</left>
				<top>-100</top>
				<width>370</width>
				<height>400</height>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<texture background="true">views/list/shine.png</texture>
				<animation effect="fade" end="40" reversible="false" condition="true" time="0">Conditional</animation>
			</control>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>160</width>
				<height>160</height>
				<aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
				<texture background="true" diffuse="thumbs/music_diffuse.png">thumbs/thumb_back.png</texture>
				<fadetime>800</fadetime>
			</control>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>160</width>
				<height>160</height>
				<aspectratio align="center" aligny="center" scalediffuse="false">keep</aspectratio>
				<texture background="true" fallback="thumbs/fallback_square.png" diffuse="thumbs/music_diffuse.png">$VAR[VideoPlayerThumb]</texture>
				<fadetime>800</fadetime>
				<visible>VideoPlayer.Content(LiveTV)</visible>
			</control>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>160</width>
				<height>160</height>
				<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
				<texture background="true" fallback="thumbs/fallback_square.png" diffuse="thumbs/music_diffuse.png">$VAR[VideoPlayerThumb]</texture>
				<fadetime>800</fadetime>
				<visible>!VideoPlayer.Content(LiveTV)</visible>
			</control>
			<control type="image">
				<left>-7</left>
				<top>-7</top>
				<width>174</width>
				<height>174</height>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<texture background="true">thumbs/music_overlay.png</texture>
				<fadetime>800</fadetime>
			</control>
			<control type="image">
				<left>0</left>
				<top>162</top>
				<width>160</width>
				<height>160</height>
				<aspectratio align="center" aligny="center" scalediffuse="false">keep</aspectratio>
				<texture background="true" fallback="thumbs/fallback_square.png" flipy="true" diffuse="thumbs/music_reflection_diffuse.png">thumbs/thumb_back.png</texture>
				<fadetime>800</fadetime>
				<colordiffuse>a0ffffff</colordiffuse>
				<visible>VideoPlayer.Content(LiveTV)</visible>
			</control>
			<control type="image">
				<left>0</left>
				<top>162</top>
				<width>160</width>
				<height>160</height>
				<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
				<texture background="true" fallback="thumbs/fallback_square.png" flipy="true" diffuse="thumbs/music_reflection_diffuse.png">$VAR[VideoPlayerThumb]</texture>
				<fadetime>800</fadetime>
				<colordiffuse>a0ffffff</colordiffuse>
				<visible>!VideoPlayer.Content(LiveTV)</visible>
			</control>
			<control type="image">
				<left>0</left>
				<top>162</top>
				<width>160</width>
				<height>160</height>
				<aspectratio align="center" aligny="center" scalediffuse="false">keep</aspectratio>
				<texture background="true" fallback="thumbs/fallback_square.png" flipy="true" diffuse="thumbs/music_reflection_diffuse.png">$VAR[VideoPlayerThumb]</texture>
				<fadetime>800</fadetime>
				<colordiffuse>a0ffffff</colordiffuse>
			</control>
			<control type="image">
				<description>paused indicator</description>
				<left>-1</left>
				<top>-1</top>
				<width>162</width>
				<height>162</height>
				<texture background="true" diffuse="thumbs/music_diffuse.png">osd/paused-overlay.png</texture>
				<aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
				<animation type="conditional" condition="!Player.Paused" reversible="false">
					<effect type="fade" start="50" end="0" time="300" />
				</animation>	
				<animation type="conditional" condition="Player.Paused" reversible="false">
					<effect type="fade" start="0" end="50" time="300" />
				</animation>				
			</control>
		</control>	
		<!-- labels -->
		<control type="group" id="30">
			<left>45</left>
			<top>640</top>
			<!-- Movies and episodes -->			
			<control type="grouplist">
				<include>HomeNowPlayingCoversSlideAnimations</include>
				<include name="HomeNowPlayingCoversSlideTextAnimations">
					<param name="slide">-145</param>
				</include>
				<visible>Player.HasVideo + [!IsEmpty(Player.Art(poster)) | !IsEmpty(Player.Art(tvshow.poster)) | SubString(Player.Folderpath,/lovefilm/)] + !VideoPlayer.Content(LiveTV)</visible>	
				<left>145</left>
				<top>0</top>
				<width>1000</width>
				<height>60</height>
				<align>left</align>
				<itemgap>5</itemgap>
				<orientation>horizontal</orientation>
				<control type="label">
					<height>53</height>
					<width min="10" max="1000">auto</width>
					<label>$INFO[Player.Time]</label>
					<align>left</align>
					<aligny>center</aligny>
					<font>FontSize_50</font>
					<textcolor>white</textcolor>
					<shadowcolor>77000000</shadowcolor>
				</control>				
				<control type="group">
					<left>500</left>
					<include>KaiToastSlideAnimations</include>
					<include>ScanSlideAnimations</include>					
					<control type="label">
						<left>0</left>
						<top>0</top>
						<width>300</width>
						<height>33</height>
						<label>$VAR[NowPlayingLabel]...</label>
						<align>left</align>
						<aligny>center</aligny>
						<font>NotificationsFont</font>
						<textcolor>blue</textcolor>
						<shadowcolor>77000000</shadowcolor>
					</control>
					<control type="label">
						<left>0</left>
						<top>20</top>
						<width>480</width>
						<height>35</height>
						<label>$VAR[NowPlayingInfoLabels]</label>
						<align>left</align>
						<aligny>center</aligny>
						<font>NotificationsFont</font>
						<textcolor>99white</textcolor>
						<shadowcolor>77000000</shadowcolor>
					</control>
				</control>
			</control>
			<!-- Music -->	
			<control type="grouplist">
				<include>HomeNowPlayingCoversSlideAnimations</include>
				<include name="HomeNowPlayingCoversSlideTextAnimations">
					<param name="slide">-175</param>
				</include>
				<visible>Player.HasAudio</visible>	
				<left>175</left>
				<top>0</top>
				<width>1000</width>
				<height>60</height>
				<align>left</align>
				<itemgap>5</itemgap>
				<orientation>horizontal</orientation>
				<control type="label">
					<height>53</height>
					<width min="10" max="1000">auto</width>
					<label>$INFO[Player.Time]</label>
					<align>left</align>
					<aligny>center</aligny>
					<font>FontSize_50</font>
					<textcolor>white</textcolor>
					<shadowcolor>77000000</shadowcolor>
				</control>				
				<control type="group">
					<left>500</left>					
					<include>KaiToastSlideAnimations</include>
					<include>ScanSlideAnimations</include>				
					<control type="group">
						<animation type="Conditional" reversible="false" condition="MusicPlayer.HasNext" loop="true">
							<effect type="fade" start="0" end="100" time="500" delay="0" />
							<effect type="fade" start="100" end="0" time="500" delay="10000" />
							<effect type="fade" start="100" end="0" time="500" delay="20000" />
						</animation>
						<control type="label">
							<left>0</left>
							<top>0</top>
							<width>300</width>
							<height>33</height>
							<label>$VAR[NowPlayingLabel]...</label>
							<align>left</align>
							<aligny>center</aligny>
							<font>NotificationsFont</font>
							<textcolor>blue</textcolor>
							<shadowcolor>77000000</shadowcolor>
						</control>
						<control type="label">
							<left>0</left>
							<top>20</top>
							<width>540</width>
							<height>35</height>
							<label>$VAR[NowPlayingInfoLabels]</label>
							<align>left</align>
							<aligny>center</aligny>
							<font>NotificationsFont</font>
							<textcolor>99white</textcolor>
							<shadowcolor>77000000</shadowcolor>
						</control>
					</control>
					<control type="group">
						<visible>MusicPlayer.HasNext</visible>
						<animation type="Conditional" reversible="false" condition="MusicPlayer.HasNext" loop="true">
							<effect type="fade" start="0" end="100" time="500" delay="10500" />
							<effect type="fade" start="100" end="0" time="500" delay="20000" />
						</animation>
						<control type="label">
							<left>0</left>
							<top>0</top>
							<width>300</width>
							<height>33</height>
							<label>$LOCALIZE[209]...</label>
							<align>left</align>
							<aligny>center</aligny>
							<font>NotificationsFont</font>
							<textcolor>blue</textcolor>
							<shadowcolor>77000000</shadowcolor>
						</control>
						<control type="label">
							<left>0</left>
							<top>20</top>
							<width>540</width>
							<height>35</height>
							<label>$INFO[MusicPlayer.offset(1).Artist]$INFO[MusicPlayer.offset(1).Title, · ] $INFO[MusicPlayer.offset(1).Album, (,) ]</label>
							<align>left</align>
							<aligny>center</aligny>
							<font>NotificationsFont</font>
							<textcolor>99white</textcolor>
							<shadowcolor>77000000</shadowcolor>
						</control>
					</control>
				</control>
			</control>
			<!-- videos -->			
			<control type="grouplist">
				<include>HomeNowPlayingCoversSlideAnimations</include>
				<include name="HomeNowPlayingCoversSlideTextAnimations">
					<param name="slide">-175</param>
				</include>
				<visible>Player.HasVideo + IsEmpty(Player.Art(poster)) + IsEmpty(Player.Art(tvshow.poster)) + !SubString(Player.Folderpath,/lovefilm/) + !VideoPlayer.Content(LiveTV)</visible>
				<left>175</left>
				<top>0</top>
				<width>1000</width>
				<height>60</height>
				<align>left</align>
				<itemgap>5</itemgap>
				<orientation>horizontal</orientation>
				<control type="label">
					<height>53</height>
					<width min="10" max="1000">auto</width>
					<label>$INFO[Player.Time]</label>
					<align>left</align>
					<aligny>center</aligny>
					<font>FontSize_50</font>
					<textcolor>white</textcolor>
					<shadowcolor>77000000</shadowcolor>
				</control>				
				<control type="group">
					<left>500</left>
					<include>KaiToastSlideAnimations</include>
					<include>ScanSlideAnimations</include>
					<control type="label">
						<left>0</left>
						<top>0</top>
						<width>300</width>
						<height>33</height>
						<label>$VAR[NowPlayingLabel]...</label>
						<align>left</align>
						<aligny>center</aligny>
						<font>NotificationsFont</font>
						<textcolor>blue</textcolor>
						<shadowcolor>77000000</shadowcolor>
					</control>
					<control type="label">
						<left>0</left>
						<top>20</top>
						<width>480</width>
						<height>35</height>
						<label>$VAR[NowPlayingInfoLabels]</label>
						<align>left</align>
						<aligny>center</aligny>
						<font>NotificationsFont</font>
						<textcolor>99white</textcolor>
						<shadowcolor>77000000</shadowcolor>
					</control>
				</control>
			</control>
			<!-- live tv -->			
			<control type="grouplist">
				<include>HomeNowPlayingCoversSlideAnimations</include>
				<include name="HomeNowPlayingCoversSlideTextAnimations">
					<param name="slide">-175</param>
				</include>
				<visible>VideoPlayer.Content(LiveTV)</visible>
				<left>175</left>
				<top>0</top>
				<width>1000</width>
				<height>60</height>
				<align>left</align>
				<itemgap>5</itemgap>
				<orientation>horizontal</orientation>
				<control type="label">
					<height>53</height>
					<width min="10" max="1000">auto</width>
					<label>$INFO[Player.Time]</label>
					<align>left</align>
					<aligny>center</aligny>
					<font>FontSize_50</font>
					<textcolor>white</textcolor>
					<shadowcolor>77000000</shadowcolor>
				</control>				
				<control type="group">
					<left>500</left>
					<include>KaiToastSlideAnimations</include>
					<include>ScanSlideAnimations</include>				
					<control type="group">
						<animation type="Conditional" reversible="false" condition="Pvr.IsPlayingTv" loop="true">
							<effect type="fade" start="0" end="100" time="500" delay="0" />
							<effect type="fade" start="100" end="0" time="500" delay="10000" />
							<effect type="fade" start="100" end="0" time="500" delay="20000" />
						</animation>
						<control type="label">
							<left>0</left>
							<top>0</top>
							<width>300</width>
							<height>33</height>
							<label>$VAR[NowPlayingLabel]...</label>
							<align>left</align>
							<aligny>center</aligny>
							<font>NotificationsFont</font>
							<textcolor>blue</textcolor>
							<shadowcolor>77000000</shadowcolor>
						</control>
						<control type="label">
							<left>0</left>
							<top>20</top>
							<width>480</width>
							<height>35</height>
							<label>$INFO[VideoPlayer.ChannelNumber,,. ]$INFO[VideoPlayer.ChannelName]$INFO[VideoPlayer.Title,: ]</label>
							<align>left</align>
							<aligny>center</aligny>
							<font>NotificationsFont</font>
							<textcolor>99white</textcolor>
							<shadowcolor>77000000</shadowcolor>
						</control>
					</control>
					<control type="group">
						<visible>Pvr.IsPlayingTv</visible>
						<animation type="Conditional" reversible="false" condition="Pvr.IsPlayingTv" loop="true">
							<effect type="fade" start="0" end="100" time="500" delay="10500" />
							<effect type="fade" start="100" end="0" time="500" delay="20000" />
						</animation>
						<control type="label">
							<left>0</left>
							<top>0</top>
							<width>300</width>
							<height>33</height>
							<label>$LOCALIZE[209]...</label>
							<align>left</align>
							<aligny>center</aligny>
							<font>NotificationsFont</font>
							<textcolor>blue</textcolor>
							<shadowcolor>77000000</shadowcolor>
						</control>
						<control type="label">
							<left>0</left>
							<top>20</top>
							<width>480</width>
							<height>35</height>
							<label>$INFO[VideoPlayer.ChannelNumber,,. ]$INFO[VideoPlayer.ChannelName]$INFO[VideoPlayer.NextTitle,: ]</label>
							<align>left</align>
							<aligny>center</aligny>
							<font>NotificationsFont</font>
							<textcolor>99white</textcolor>
							<shadowcolor>77000000</shadowcolor>
						</control>
					</control>
				</control>
			</control>
		</control>
	</control>
</include>

<!-- ================== -->
<!-- Common Now Playing -->
<!-- ================== --> 
<include name="CommonNowPlaying">
	<control type="group">
		<visible>!SubString(Player.Filenameandpath,extras/intro/intro.mp4) + !SubString(Player.Filenameandpath,extras\intro\intro.mp4)</visible>
		<left>44</left>
		<top>640</top>
		<include>HomeNowPlayingSlideAnimations</include>
		<control type="grouplist">
			<animation effect="slide" start="0,0" end="0,150" time="260" tween="sine" easing="inout" condition="[Window.IsActive(Favourites) + Window.IsActive(ContextMenu)]">Conditional</animation>
			<visible>Player.HasMedia + !Window.IsActive(busydialog) + !SubString(Window(Videos).Property(TvTunesIsAlive),True) + !Window.IsActive(ProgressDialog)</visible>
			<left>0</left>
			<top>0</top>
			<width>1000</width>
			<height>60</height>
			<align>left</align>
			<itemgap>5</itemgap>
			<orientation>horizontal</orientation>
			<control type="label">
				<height>53</height>
				<width min="10" max="1000">auto</width>
				<label>$INFO[Player.Time]</label>
				<align>left</align>
				<aligny>center</aligny>
				<font>FontSize_50</font>
				<textcolor>white</textcolor>
				<shadowcolor>77000000</shadowcolor>
			</control>
			<!-- Music -->				
			<control type="group">
				<include>KaiToastSlideAnimations</include>
				<include>ScanSlideAnimations</include>
				<visible>Player.HasAudio</visible>
				<control type="group">
					<animation type="Conditional" reversible="false" condition="MusicPlayer.HasNext" loop="true">
						<effect type="fade" start="0" end="100" time="500" delay="0" />
						<effect type="fade" start="100" end="0" time="500" delay="10000" />
						<effect type="fade" start="100" end="0" time="500" delay="20000" />
					</animation>
					<control type="label">
						<left>0</left>
						<top>0</top>
						<width>300</width>
						<height>33</height>
						<label>$VAR[NowPlayingLabel]...</label>
						<align>left</align>
						<aligny>center</aligny>
						<font>NotificationsFont</font>
						<textcolor>blue</textcolor>
						<shadowcolor>77000000</shadowcolor>
					</control>
					<control type="label">
						<left>0</left>
						<top>20</top>
						<width>540</width>
						<height>35</height>
						<label>$VAR[NowPlayingInfoLabels]</label>
						<align>left</align>
						<aligny>center</aligny>
						<font>NotificationsFont</font>
						<textcolor>99white</textcolor>
						<shadowcolor>77000000</shadowcolor>
					</control>
				</control>
				<control type="group">
					<visible>MusicPlayer.HasNext</visible>
					<animation type="Conditional" reversible="false" condition="MusicPlayer.HasNext" loop="true">
						<effect type="fade" start="0" end="100" time="500" delay="10500" />
						<effect type="fade" start="100" end="0" time="500" delay="20000" />
					</animation>
					<control type="label">
						<left>0</left>
						<top>0</top>
						<width>300</width>
						<height>33</height>
						<label>$LOCALIZE[209]...</label>
						<align>left</align>
						<aligny>center</aligny>
						<font>NotificationsFont</font>
						<textcolor>blue</textcolor>
						<shadowcolor>77000000</shadowcolor>
					</control>
					<control type="label">
						<left>0</left>
						<top>20</top>
						<width>540</width>
						<height>35</height>
						<label>$INFO[MusicPlayer.offset(1).Artist]$INFO[MusicPlayer.offset(1).Title, · ] $INFO[MusicPlayer.offset(1).Album, (,) ]</label>
						<align>left</align>
						<aligny>center</aligny>
						<font>NotificationsFont</font>
						<textcolor>99white</textcolor>
						<shadowcolor>77000000</shadowcolor>
					</control>
				</control>
			</control>
			<!-- Movies -->
			<control type="group">
				<include>KaiToastSlideAnimations</include>
				<include>ScanSlideAnimations</include>
				<visible>Player.HasVideo + VideoPlayer.Content(Movies)</visible>
				<control type="label">
					<left>0</left>
					<top>0</top>
					<width>300</width>
					<height>33</height>
					<label>$VAR[NowPlayingLabel]...</label>
					<align>left</align>
					<aligny>center</aligny>
					<font>NotificationsFont</font>
					<textcolor>blue</textcolor>
					<shadowcolor>77000000</shadowcolor>
				</control>
				<control type="label">
					<left>0</left>
					<top>20</top>
					<width>480</width>
					<height>35</height>
					<label>$VAR[NowPlayingInfoLabels]</label>
					<align>left</align>
					<aligny>center</aligny>
					<font>NotificationsFont</font>
					<textcolor>99white</textcolor>
					<shadowcolor>77000000</shadowcolor>
				</control>
			</control>
			<!-- Episodes -->
			<control type="group">
				<include>KaiToastSlideAnimations</include>
				<include>ScanSlideAnimations</include>
				<visible>Player.HasVideo + VideoPlayer.Content(Episodes)</visible>
				<control type="label">
					<left>0</left>
					<top>0</top>
					<width>300</width>
					<height>33</height>
					<label>$VAR[NowPlayingLabel]...</label>
					<align>left</align>
					<aligny>center</aligny>
					<font>NotificationsFont</font>
					<textcolor>blue</textcolor>
					<shadowcolor>77000000</shadowcolor>
				</control>
				<control type="label">
					<left>0</left>
					<top>20</top>
					<width>480</width>
					<height>35</height>
					<label>$VAR[NowPlayingInfoLabels]</label>
					<align>left</align>
					<aligny>center</aligny>
					<font>NotificationsFont</font>
					<textcolor>99white</textcolor>
					<shadowcolor>77000000</shadowcolor>
				</control>
			</control>
			<!-- Videos -->
			<control type="group">
				<include>KaiToastSlideAnimations</include>
				<include>ScanSlideAnimations</include>
				<visible>Player.HasVideo + ![VideoPlayer.Content(Movies) | VideoPlayer.Content(Episodes) | VideoPlayer.Content(LiveTV)]</visible>
				<control type="label">
					<left>0</left>
					<top>0</top>
					<width>300</width>
					<height>33</height>
					<label>$VAR[NowPlayingLabel]...</label>
					<align>left</align>
					<aligny>center</aligny>
					<font>NotificationsFont</font>
					<textcolor>blue</textcolor>
					<shadowcolor>77000000</shadowcolor>
				</control>
				<control type="label">
					<left>0</left>
					<top>20</top>
					<width>480</width>
					<height>35</height>
					<label>$VAR[NowPlayingInfoLabels]</label>
					<align>left</align>
					<aligny>center</aligny>
					<font>NotificationsFont</font>
					<textcolor>99white</textcolor>
					<shadowcolor>77000000</shadowcolor>
				</control>
			</control>
			<!-- LiveTV -->
			<control type="group">
				<include>KaiToastSlideAnimations</include>
				<include>ScanSlideAnimations</include>
				<visible>Player.HasVideo + VideoPlayer.Content(LiveTV)</visible>
				<control type="group">
					<animation type="Conditional" reversible="false" condition="Pvr.IsPlayingTv" loop="true">
						<effect type="fade" start="0" end="100" time="500" delay="0" />
						<effect type="fade" start="100" end="0" time="500" delay="10000" />
						<effect type="fade" start="100" end="0" time="500" delay="20000" />
					</animation>
					<control type="label">
						<left>0</left>
						<top>0</top>
						<width>300</width>
						<height>33</height>
						<label>$VAR[NowPlayingLabel]...</label>
						<align>left</align>
						<aligny>center</aligny>
						<font>NotificationsFont</font>
						<textcolor>blue</textcolor>
						<shadowcolor>77000000</shadowcolor>
					</control>
					<control type="label">
						<left>0</left>
						<top>20</top>
						<width>480</width>
						<height>35</height>
						<label>$INFO[VideoPlayer.ChannelNumber,,. ]$INFO[VideoPlayer.ChannelName]$INFO[VideoPlayer.Title,: ]</label>
						<align>left</align>
						<aligny>center</aligny>
						<font>NotificationsFont</font>
						<textcolor>99white</textcolor>
						<shadowcolor>77000000</shadowcolor>
					</control>
				</control>
				<control type="group">
					<visible>Pvr.IsPlayingTv</visible>
					<animation type="Conditional" reversible="false" condition="Pvr.IsPlayingTv" loop="true">
						<effect type="fade" start="0" end="100" time="500" delay="10500" />
						<effect type="fade" start="100" end="0" time="500" delay="20000" />
					</animation>
					<control type="label">
						<left>0</left>
						<top>0</top>
						<width>300</width>
						<height>33</height>
						<label>$LOCALIZE[209]...</label>
						<align>left</align>
						<aligny>center</aligny>
						<font>NotificationsFont</font>
						<textcolor>blue</textcolor>
						<shadowcolor>77000000</shadowcolor>
					</control>
					<control type="label">
						<left>0</left>
						<top>20</top>
						<width>480</width>
						<height>35</height>
						<label>$INFO[VideoPlayer.ChannelNumber,,. ]$INFO[VideoPlayer.ChannelName]$INFO[VideoPlayer.NextTitle,: ]</label>
						<align>left</align>
						<aligny>center</aligny>
						<font>NotificationsFont</font>
						<textcolor>99white</textcolor>
						<shadowcolor>77000000</shadowcolor>
					</control>
				</control>
			</control>
		</control>
	</control>
</include>

<include name="CommonPageCount">
	<control type="grouplist">		
		<include>CommonSlideAnimations</include>
		<visible>!ControlGroup(9000).HasFocus + !Window.IsActive(favourites) + !Window.IsActive(ContextMenu) + !Window.IsActive(ShutdownMenu) + !Window.IsActive(filestackingdialog) + !Window.IsActive(MovieInformation) + !Window.IsActive(MusicInformation) + !Window.IsActive(SongInformation) + !Window.IsActive(AddonInformation) + !Window.IsActive(musicplaylisteditor) + !Window.IsActive(script-globalsearch-main.xml)</visible>
		<left>45</left>
		<top>70</top>
		<height>20</height>
		<width>640</width>
		<orientation>horizontal</orientation>		
		<itemgap>0</itemgap>
		<control type="label">
			<description>Page Count Label</description>
			<width max="640">auto</width>
			<height>20</height>
			<font>FontSize_18</font>
			<textcolor>blue</textcolor>
			<shadowcolor>77000000</shadowcolor>
			<scroll>false</scroll>
			<align>left</align>
			<aligny>center</aligny>
			<label>$INFO[Container.NumItems,, $LOCALIZE[31025]]$INFO[Control.GetLabel(3), • ]</label>
		</control>
		<control type="label">
			<description>Page Count Label</description>
			<width max="640">auto</width>
			<height>20</height>
			<font>FontSize_18</font>
			<textcolor>blue</textcolor>
			<shadowcolor>77000000</shadowcolor>
			<scroll>false</scroll>
			<align>left</align>
			<aligny>center</aligny>
			<label>$INFO[Window(AddonBrowser).Property(Updated), • $LOCALIZE[31182]:]</label>
			<visible>Window.IsActive(AddonBrowser)</visible>
		</control>
	</control>
</include>	

<include name="CommonScrollingLetters">
	<control type="group">
		<left>875</left>
		<top>25</top>
		<visible>Container.Scrolling</visible>
		<include>TopRightSlideAnimations</include>
		<control type="grouplist">
			<right>45</right>
			<top>0</top>
			<height>70</height>
			<width>360</width>
			<align>right</align>
			<aligny>center</aligny>
			<itemgap>12</itemgap>
			<orientation>horizontal</orientation>
			<control type="label">
				<include>TopZoomedSmallLabel</include>
				<label>$LOCALIZE[31026]</label>
			</control>
			<control type="label">
				<include>TopBigLabel</include>
				<label>$INFO[Container.ListItem.SortLetter]</label>
			</control>
		</control>
	</control>
	<control type="group">
		<left>405r</left>
		<top>25</top>
		<visible>Window.IsVisible(FileManager) + [Container(20).Scrolling | Container(21).Scrolling]</visible>
		<include>TopRightSlideAnimations</include>
		<control type="grouplist">
			<left>0</left>
			<top>0</top>
			<height>70</height>
			<width>360</width>
			<align>right</align>
			<aligny>center</aligny>
			<itemgap>12</itemgap>
			<orientation>horizontal</orientation>
			<control type="label">
				<include>TopZoomedSmallLabel</include>
				<label>31026</label>
			</control>
			<control type="label">
				<include>TopBigLabel</include>
				<label>$INFO[Container(20).ListItem.SortLetter]</label>
				<visible>Control.HasFocus(20)</visible>
			</control>
			<control type="label">
				<include>TopBigLabel</include>
				<label>$INFO[Container(21).ListItem.SortLetter]</label>
				<visible>Control.HasFocus(21)</visible>
			</control>
		</control>
	</control>		
</include>

<include name="CommonWeatherAndClock">
	<control type="group">
		<left>25</left>
		<top>45</top>
		<visible>!Window.IsActive(movieinformation) + !Window.IsActive(musicinformation) + !Window.IsActive(songinformation) + !Window.IsActive(addoninformation) + !Window.IsActive(script-globalsearch-infodialog.xml)</visible>
		<visible>![Container(112).Scrolling | Container(120).Scrolling | Container(129).Scrolling]</visible>
		<visible>!Container.Scrolling + ![Window.IsVisible(FileManager) + [Container(20).Scrolling | Container(21).Scrolling]] + ![Window.IsVisible(musicplaylisteditor) + [Container(50).Scrolling | Container(100).Scrolling]]</visible>
		<include>CommonSlideAnimations</include>
		<include>WeatherAndClock</include>
	</control>
</include>	

<include name="HomeWeatherAndClock">
	<control type="group">
		<left>25</left>
		<top>45</top>
		<visible>Window.IsActive(Home) + ![Window.IsActive(1113) | Window.IsActive(1114) | Window.IsActive(1115) | Window.IsActive(script-globalsearch-main.xml)]</visible>
		<include>HomeSlideAnimations</include>
		<include>WeatherAndClock</include>
	</control>
</include>	

<include name="SettingsWeatherAndClock">
	<control type="group">
		<left>25</left>
		<top>45</top>
		<include>SettingsSlideAnimations</include>
		<include>WeatherAndClock</include>
	</control>
</include>	

<include name="WeatherAndClock">
	<control type="grouplist" id="1">
		<animation type="Conditional" reversible="false" condition="!Window.IsActive(VolumeBar)">
			<effect type="fade" start="0" end="100" time="300" tween="sine" easing="in"  />
			<effect type="slide" start="0,35" end="0,0" time="350" tween="cubic" easing="out" />
		</animation>
		<animation type="Conditional" reversible="false" condition="Window.IsActive(VolumeBar)">
			<effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
			<effect type="slide" start="0,0" end="0,35" time="350" tween="sine" easing="out" />
		</animation>
		<left>0</left>
		<top>0</top>
		<width>1210</width>
		<itemgap>0</itemgap>
		<align>right</align>
		<orientation>horizontal</orientation>
		<!-- Weather -->
		<control type="group"  id="1">
			<left>-45</left>
			<top>0</top>
			<visible>!SubString(Window(Weather).Property(Current.ConditionIcon),na)</visible>
			<control type="image" id="1">
				<left>0</left>
				<top>0</top>
				<height>26</height>
				<width>26</width>
				<align>right</align>
				<aligny>center</aligny>
				<texture>$INFO[Window(Weather).Property(Current.FanartCode),weather/icons/,.png]</texture>
				<visible>Weather.IsFetched</visible>		
			</control>
			<control type="label" id="1">
				<left>-100</left>
				<top>0</top>
				<width>100</width>
				<height>25</height>
				<font>FontSize_20</font>
				<textcolor>white</textcolor>
				<shadowcolor>77000000</shadowcolor>
				<align>right</align>
				<aligny>center</aligny>
				<scroll>false</scroll>
				<label>$INFO[Window(Weather).Property(Current.Temperature),,°]</label>
				<visible>Weather.IsFetched</visible>
			</control>
		</control>
		<!-- Time -->
		<control type="label" id="1">
			<width min="10" max="200">auto</width>
			<height>25</height>
			<font>FontSize_20</font>
			<textcolor>blue</textcolor>
			<shadowcolor>77000000</shadowcolor>
			<align>left</align>
			<aligny>center</aligny>
			<scroll>false</scroll>
			<label>$INFO[System.Time(hh:mm)]</label>
		</control>
		<control type="group" id="1">
			<visible>substring(system.time,AM,right) | substring(system.time,PM,right)</visible>
			<width>20</width>
			<height>20</height>
			<control type="label" id="1">
				<visible>substring(system.time,AM,right)</visible>
				<left>2</left>
				<top>0</top>
				<width>20</width>
				<height>18</height>
				<font>ClockFont</font>
				<textcolor>blue</textcolor>
				<shadowcolor>77000000</shadowcolor>
				<label>31030</label>
			</control>
			<control type="label" id="1">
				<visible>substring(system.time,PM,right)</visible>
				<left>2</left>
				<top>0</top>
				<width>20</width>
				<height>18</height>
				<textcolor>blue</textcolor>
				<shadowcolor>77000000</shadowcolor>
				<font>ClockFont</font>
				<label>31031</label>
			</control>
		</control>
		<!-- NowPlaying Finish Time -->
		<control type="label" id="1">
			<width min="10" max="200">auto</width>
			<height>25</height>
			<font>FontSize_20</font>
			<textcolor>blue</textcolor>
			<shadowcolor>77000000</shadowcolor>
			<align>left</align>
			<aligny>center</aligny>
			<scroll>false</scroll>
			<label>$INFO[Player.FinishTime(hh:mm), / ]</label>
			<visible>Player.HasVideo</visible>
		</control>
		<control type="group" id="1">
			<visible>Player.HasVideo</visible>
			<visible>substring(system.time,AM,right) | substring(system.time,PM,right)</visible>
			<width>20</width>
			<height>20</height>
			<control type="label" id="1">
				<visible>substring(system.time,AM,right)</visible>
				<left>2</left>
				<top>0</top>
				<width>20</width>
				<height>18</height>
				<font>ClockFont</font>
				<textcolor>blue</textcolor>
				<shadowcolor>77000000</shadowcolor>
				<label>31030</label>
			</control>
			<control type="label" id="1">
				<visible>substring(system.time,PM,right)</visible>
				<left>2</left>
				<top>0</top>
				<width>20</width>
				<height>18</height>
				<textcolor>blue</textcolor>
				<shadowcolor>77000000</shadowcolor>
				<font>ClockFont</font>
				<label>31031</label>
			</control>
		</control>
	</control>
	<!-- small recording info -->
	<control type="group">
		<left>1187</left>
		<visible>[PVR.IsRecording | PVR.HasNonRecordingTimer]</visible>
		<animation type="Conditional" reversible="false" condition="!Window.IsActive(VolumeBar)">
			<effect type="fade" start="0" end="100" time="300" tween="sine" easing="in"  />
			<effect type="slide" start="0,35" end="0,0" time="350" tween="cubic" easing="out" />
		</animation>
		<animation type="Conditional" reversible="false" condition="Window.IsActive(VolumeBar)">
			<effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
			<effect type="slide" start="0,0" end="0,35" time="350" tween="sine" easing="out" />
		</animation>
		<control type="group">
			<animation effect="fade" start="0" end="100" delay="500" time="1000" tween="sine" easing="inout" pulse="true" condition="PVR.IsRecording">Conditional</animation>			
			<control type="label">
				<left>-195</left>
				<top>25</top>
				<width>200</width>
				<height>23</height>
				<font>FontSize_14B</font>
				<textcolor>white</textcolor>
				<shadowcolor>AA000000</shadowcolor>
				<align>right</align>
				<aligny>center</aligny>
				<label>$VAR[ClockRecLabel]</label>
			</control>
			<control type="image">
				<left>0</left>
				<top>20</top>
				<width>32</width>
				<height>32</height>
				<aspectratio align="right" aligny="center">keep</aspectratio>
				<texture>windows/pvr/rec.png</texture>
			</control>
		</control>
		<control type="grouplist">
			<visible>Window.IsActive(home) + !Skin.HasSetting(HideSmallRecInfo)</visible>
			<orientation>vertical</orientation>
			<itemgap>0</itemgap>
			<left>-378</left>
			<top>46</top>
			<width>400</width>
			<control type="label">
				<height>20</height>
				<font>FontSize_14</font>
				<textcolor>white</textcolor>
				<shadowcolor>AA000000</shadowcolor>
				<align>right</align>
				<aligny>center</aligny>
				<label>[B]$LOCALIZE[19030]:[/B] $INFO[PVR.NowRecordingChannel]$INFO[PVR.NowRecordingTitle, • ]</label>
				<visible>PVR.IsRecording</visible>
			</control>
			<control type="label">
				<height>20</height>
				<font>FontSize_14</font>
				<textcolor>white</textcolor>
				<shadowcolor>AA000000</shadowcolor>
				<align>right</align>
				<aligny>center</aligny>
				<label>[B]$LOCALIZE[31363]:[/B] $INFO[PVR.NextRecordingChannel]$INFO[PVR.NextRecordingTitle, • ]</label>
				<visible>PVR.HasNonRecordingTimer</visible>
			</control>
		</control>
	</control>
</include>

<include name="MainMenuFocusPosition">
	<focusposition>$PARAM[position]</focusposition>
</include>


<variable name="ClockRecLabel">
	<value condition="PVR.IsRecording">$LOCALIZE[31035]</value>
	<value condition="PVR.HasNonRecordingTimer">$LOCALIZE[31335]</value>
</variable>

<variable name="WatchedStateOverlay">	
	<value condition="StringCompare(Container.FolderName,PinSentry) + stringcompare(ListItem.Overlay,OverlayWatched.png)">watched</value>
	<value condition="StringCompare(Container.FolderName,PinSentry) + !stringcompare(ListItem.Overlay,OverlayWatched.png)">blank</value>
	<value condition="StringCompare(Skin.String(WatchedFlag),unwatched) + stringcompare(ListItem.Overlay,OverlayUnWatched.png)">unwatched</value>
	<value condition="StringCompare(Skin.String(WatchedFlag),unwatched) + !stringcompare(ListItem.Overlay,OverlayUnWatched.png)">blank</value>
	<value condition="StringCompare(Skin.String(WatchedFlag),watched) + stringcompare(ListItem.Overlay,OverlayWatched.png)">watched</value>
	<value condition="StringCompare(Skin.String(WatchedFlag),watched) + !stringcompare(ListItem.Overlay,OverlayWatched.png)">blank</value>
</variable>

<variable name="NextUpStyleLabel">
	<value condition="Skin.HasSetting(NextUpTop)">$LOCALIZE[31398]</value>
	<value>$LOCALIZE[31399]</value>
</variable>

<variable name="TopMenuStyleLabel">
	<value condition="Skin.HasSetting(IconTopMenuStyle)">$LOCALIZE[536]</value>
	<value>$LOCALIZE[31360]</value>
</variable>

<variable name="MenuStyleLabel">
	<value condition="StringCompare(Skin.String(MainMenuStyle),5icons)">$LOCALIZE[31348]</value>
	<value condition="StringCompare(Skin.String(MainMenuStyle),3icons)">$LOCALIZE[31349]</value>
	<value condition="StringCompare(Skin.String(MainMenuStyle),textbottom)">$LOCALIZE[31382]</value>	
	<value condition="StringCompare(Skin.String(MainMenuStyle),vertical)">$LOCALIZE[31474]</value>	
	<value>$LOCALIZE[31354]</value>
</variable>

<variable name="MenuGroupHeader">
	<value condition="!StringCompare(Window.Property(groupname),mainmenu) + !IsEmpty(Window.Property(groupDisplayName))">$LOCALIZE[31050] $INFO[Window.Property(groupDisplayName),","]</value>			
	<value condition="StringCompare(Window.Property(groupname),widgetgroup1)">$LOCALIZE[31049] $INFO[Skin.String(widgetgroup.1.Label),","]</value>		
	<value condition="StringCompare(Window.Property(groupname),widgetgroup2)">$LOCALIZE[31049] $INFO[Skin.String(widgetgroup.2.Label),","]</value>		
	<value condition="StringCompare(Window.Property(groupname),widgetgroup3)">$LOCALIZE[31049] $INFO[Skin.String(widgetgroup.3.Label),","]</value>		
	<value condition="StringCompare(Window.Property(groupname),widgetgroup4)">$LOCALIZE[31049] $INFO[Skin.String(widgetgroup.4.Label),","]</value>	
	<value>$LOCALIZE[31048]</value>
</variable>

<variable name="CustomWidgetNumber">
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1)">1</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2)">2</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3)">3</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4)">4</value>
</variable>

<variable name="CustomWidgetLabel">
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1) + !IsEmpty(Skin.String(widgetgroup.1.Label))">$INFO[Skin.String(widgetgroup.1.Label)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2) + !IsEmpty(Skin.String(widgetgroup.2.Label))">$INFO[Skin.String(widgetgroup.2.Label)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3) + !IsEmpty(Skin.String(widgetgroup.3.Label))">$INFO[Skin.String(widgetgroup.3.Label)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4) + !IsEmpty(Skin.String(widgetgroup.4.Label))">$INFO[Skin.String(widgetgroup.4.Label)]</value>
	<value>$LOCALIZE[31172]</value>
</variable>

<variable name="CustomWidgetLabel2">
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1) + !IsEmpty(Skin.String(widgetgroup.1.Label2))">$INFO[Skin.String(widgetgroup.1.Label2)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2) + !IsEmpty(Skin.String(widgetgroup.2.Label2))">$INFO[Skin.String(widgetgroup.2.Label2)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3) + !IsEmpty(Skin.String(widgetgroup.3.Label2))">$INFO[Skin.String(widgetgroup.3.Label2)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4) + !IsEmpty(Skin.String(widgetgroup.4.Label2))">$INFO[Skin.String(widgetgroup.4.Label2)]</value>	
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1) + IsEmpty(Skin.String(widgetgroup.1.Label2))">$LOCALIZE[31173]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2) + IsEmpty(Skin.String(widgetgroup.2.Label2))">$LOCALIZE[31174]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3) + IsEmpty(Skin.String(widgetgroup.3.Label2))">$LOCALIZE[31175]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4) + IsEmpty(Skin.String(widgetgroup.4.Label2))">$LOCALIZE[31176]</value>	
</variable>

<variable name="VarGenreSource">
	<value condition="StringCompare(Skin.String(GenreSource),own)">$INFO[Skin.String(OwnGenreIconSource)]</value>
	<value condition="StringCompare(Skin.String(GenreSource),disabled)">-</value>	
	<value>special://profile/addon_data/skin.bellofredo.extrapack/genreicons/</value>	
</variable>
<variable name="VarGenreSourceLabel">
	<value condition="StringCompare(Skin.String(GenreSource),own)">$INFO[Skin.String(OwnGenreIconSource)]</value>
	<value condition="StringCompare(Skin.String(GenreSource),disabled)">$LOCALIZE[31066]</value>	
	<value>$LOCALIZE[31294]</value>	
</variable>

<variable name="CustomWidgetSettingsLabel1">
	<value condition="!IsEmpty(Skin.String(widgetgroup.1.Label))">$INFO[Skin.String(widgetgroup.1.Label)]</value>
	<value>$LOCALIZE[31172]</value>
</variable>

<variable name="CustomWidgetSettingsLabel2">
	<value condition="!IsEmpty(Skin.String(widgetgroup.2.Label))">$INFO[Skin.String(widgetgroup.2.Label)]</value>
	<value>$LOCALIZE[31172]</value>
</variable>

<variable name="CustomWidgetSettingsLabel3">
	<value condition="!IsEmpty(Skin.String(widgetgroup.3.Label))">$INFO[Skin.String(widgetgroup.3.Label)]</value>
	<value>$LOCALIZE[31172]</value>
</variable>

<variable name="CustomWidgetSettingsLabel4">
	<value condition="!IsEmpty(Skin.String(widgetgroup.4.Label))">$INFO[Skin.String(widgetgroup.4.Label)]</value>
	<value>$LOCALIZE[31172]</value>
</variable>

<variable name="CustomWidgetLimit">
	<value condition="![[SubString(Skin.String(widgetgroup.1.Source),path) + StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1) + !IsEmpty(Skin.String(CustomWidgetPath1.List))] | [SubString(Skin.String(widgetgroup.2.Source),path) + StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2) + !IsEmpty(Skin.String(CustomWidgetPath2.List))] | [SubString(Skin.String(widgetgroup.3.Source),path) + StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3) + !IsEmpty(Skin.String(CustomWidgetPath3.List))] | [SubString(Skin.String(widgetgroup.4.Source),path) + StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4) + !IsEmpty(Skin.String(CustomWidgetPath4.List))]]">$LOCALIZE[31334]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1) + !IsEmpty(Skin.String(widgetgroup.1.Limit))">$INFO[Skin.String(widgetgroup.1.Limit)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2) + !IsEmpty(Skin.String(widgetgroup.2.Limit))">$INFO[Skin.String(widgetgroup.2.Limit)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3) + !IsEmpty(Skin.String(widgetgroup.3.Limit))">$INFO[Skin.String(widgetgroup.3.Limit)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4) + !IsEmpty(Skin.String(widgetgroup.4.Limit))">$INFO[Skin.String(widgetgroup.4.Limit)]</value>
	<value>$LOCALIZE[31172]</value>
</variable>

<variable name="CustomWidgetTarget">
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1)">$INFO[Skin.String(widgetgroup.1.Target)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2)">$INFO[Skin.String(widgetgroup.2.Target)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3)">$INFO[Skin.String(widgetgroup.3.Target)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4)">$INFO[Skin.String(widgetgroup.4.Target)]</value>
	<value>$LOCALIZE[31172]</value>
</variable>

<variable name="CustomWidgetSource">
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1)">$INFO[Skin.String(widgetgroup.1.Source)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2)">$INFO[Skin.String(widgetgroup.2.Source)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3)">$INFO[Skin.String(widgetgroup.3.Source)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4)">$INFO[Skin.String(widgetgroup.4.Source)]</value>
	<value>$LOCALIZE[31172]</value>
</variable>

<variable name="CustomWidgetSourceLabels">
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1) + StringCompare(Skin.String(widgetgroup.1.Source),mixed)">$LOCALIZE[31323]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1) + SubString(Skin.String(widgetgroup.1.Source),path) + !IsEmpty(Skin.String(CustomWidgetPath1.List)) + SubString(Skin.String(CustomWidgetPath1.List),://) + !SubString(Skin.String(CustomWidgetPath1.List),SlideShow,left)">$INFO[Skin.String(CustomWidgetPath1.List)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1) + SubString(Skin.String(widgetgroup.1.Source),path) + !IsEmpty(Skin.String(CustomWidgetPath1.List))">$LOCALIZE[31473]</value>

	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2) + StringCompare(Skin.String(widgetgroup.2.Source),mixed)">$LOCALIZE[31323]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2) + SubString(Skin.String(widgetgroup.2.Source),path) + !IsEmpty(Skin.String(CustomWidgetPath2.List)) + SubString(Skin.String(CustomWidgetPath2.List),://) + !SubString(Skin.String(CustomWidgetPath2.List),SlideShow,left)">$INFO[Skin.String(CustomWidgetPath2.List)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2) + SubString(Skin.String(widgetgroup.2.Source),path) + !IsEmpty(Skin.String(CustomWidgetPath2.List))">$LOCALIZE[31473]</value>

	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3) + StringCompare(Skin.String(widgetgroup.3.Source),mixed)">$LOCALIZE[31323]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3) + SubString(Skin.String(widgetgroup.3.Source),path) + !IsEmpty(Skin.String(CustomWidgetPath3.List)) + SubString(Skin.String(CustomWidgetPath3.List),://) + !SubString(Skin.String(CustomWidgetPath3.List),SlideShow,left)">$INFO[Skin.String(CustomWidgetPath3.List)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3) + SubString(Skin.String(widgetgroup.3.Source),path) + !IsEmpty(Skin.String(CustomWidgetPath3.List))">$LOCALIZE[31473]</value>

	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4) + StringCompare(Skin.String(widgetgroup.4.Source),mixed)">$LOCALIZE[31323]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4) + SubString(Skin.String(widgetgroup.4.Source),path) + !IsEmpty(Skin.String(CustomWidgetPath4.List)) + SubString(Skin.String(CustomWidgetPath4.List),://) + !SubString(Skin.String(CustomWidgetPath3.List),SlideShow,left)">$INFO[Skin.String(CustomWidgetPath4.List)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4) + SubString(Skin.String(widgetgroup.4.Source),path) + !IsEmpty(Skin.String(CustomWidgetPath4.List))">$LOCALIZE[31473]</value>

	<value>$LOCALIZE[31172]</value>
</variable>

<variable name="CustomWidgetLayoutLabels">
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1) + StringCompare(Skin.String(widgetgroup.1.Layout),Poster)">$LOCALIZE[31084]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1) + StringCompare(Skin.String(widgetgroup.1.Layout),Square)">$LOCALIZE[31326]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2) + StringCompare(Skin.String(widgetgroup.2.Layout),Poster)">$LOCALIZE[31084]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2) + StringCompare(Skin.String(widgetgroup.2.Layout),Square)">$LOCALIZE[31326]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3) + StringCompare(Skin.String(widgetgroup.3.Layout),Poster)">$LOCALIZE[31084]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3) + StringCompare(Skin.String(widgetgroup.3.Layout),Square)">$LOCALIZE[31326]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4) + StringCompare(Skin.String(widgetgroup.4.Layout),Poster)">$LOCALIZE[31084]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4) + StringCompare(Skin.String(widgetgroup.4.Layout),Square)">$LOCALIZE[31326]</value>
	<value>$LOCALIZE[31172]</value>
</variable>

<variable name="CustomWidgetSourceTarget">
	<value condition="![[SubString(Skin.String(widgetgroup.1.Source),path) + StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1) + !IsEmpty(Skin.String(CustomWidgetPath1.List))] | [SubString(Skin.String(widgetgroup.2.Source),path) + StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2) + !IsEmpty(Skin.String(CustomWidgetPath2.List))] | [SubString(Skin.String(widgetgroup.3.Source),path) + StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3) + !IsEmpty(Skin.String(CustomWidgetPath3.List))] | [SubString(Skin.String(widgetgroup.4.Source),path) + StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4) + !IsEmpty(Skin.String(CustomWidgetPath4.List))]]">$LOCALIZE[31334]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1) + StringCompare(Skin.String(widgetgroup.1.Target),video)">$LOCALIZE[10006]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1) + StringCompare(Skin.String(widgetgroup.1.Target),music)">$LOCALIZE[1211]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1) + StringCompare(Skin.String(widgetgroup.1.Target),pictures)">$LOCALIZE[1213]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1) + StringCompare(Skin.String(widgetgroup.1.Target),programs)">$LOCALIZE[10001]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1) + StringCompare(Skin.String(widgetgroup.1.Target),other)">$LOCALIZE[31325]</value>

	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2) + StringCompare(Skin.String(widgetgroup.2.Target),video)">$LOCALIZE[10006]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2) + StringCompare(Skin.String(widgetgroup.2.Target),music)">$LOCALIZE[1211]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2) + StringCompare(Skin.String(widgetgroup.2.Target),pictures)">$LOCALIZE[1213]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2) + StringCompare(Skin.String(widgetgroup.2.Target),programs)">$LOCALIZE[10001]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2) + StringCompare(Skin.String(widgetgroup.2.Target),other)">$LOCALIZE[31325]</value>

	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3) + StringCompare(Skin.String(widgetgroup.3.Target),video)">$LOCALIZE[10006]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3) + StringCompare(Skin.String(widgetgroup.3.Target),music)">$LOCALIZE[1211]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3) + StringCompare(Skin.String(widgetgroup.3.Target),pictures)">$LOCALIZE[1213]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3) + StringCompare(Skin.String(widgetgroup.3.Target),programs)">$LOCALIZE[10001]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3) + StringCompare(Skin.String(widgetgroup.3.Target),other)">$LOCALIZE[31325]</value>

	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4) + StringCompare(Skin.String(widgetgroup.4.Target),video)">$LOCALIZE[10006]</value>4
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4) + StringCompare(Skin.String(widgetgroup.4.Target),music)">$LOCALIZE[1211]</value>4
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4) + StringCompare(Skin.String(widgetgroup.4.Target),pictures)">$LOCALIZE[1213]</value>4
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4) + StringCompare(Skin.String(widgetgroup.4.Target),programs)">$LOCALIZE[10001]</value>4
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4) + StringCompare(Skin.String(widgetgroup.4.Target),other)">$LOCALIZE[31325]</value>

	<value>$LOCALIZE[31172]</value>	
</variable>

<variable name="CustomWidgetLayout">
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1)">$INFO[Skin.String(widgetgroup.1.Layout)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2)">$INFO[Skin.String(widgetgroup.2.Layout)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3)">$INFO[Skin.String(widgetgroup.3.Layout)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4)">$INFO[Skin.String(widgetgroup.4.Layout)]</value>
	<value>$LOCALIZE[31172]</value>
</variable>

<variable name="CustomItemNumber">
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem1)">1</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem2)">2</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem3)">3</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem4)">4</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem5)">5</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem6)">6</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem7)">7</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem8)">8</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem9)">9</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem10)">10</value>
</variable>

<variable name="CustomItemLabel">
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem1)">$INFO[Skin.String(CustomItem.1.Label)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem2)">$INFO[Skin.String(CustomItem.2.Label)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem3)">$INFO[Skin.String(CustomItem.3.Label)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem4)">$INFO[Skin.String(CustomItem.4.Label)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem5)">$INFO[Skin.String(CustomItem.5.Label)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem6)">$INFO[Skin.String(CustomItem.6.Label)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem7)">$INFO[Skin.String(CustomItem.7.Label)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem8)">$INFO[Skin.String(CustomItem.8.Label)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem9)">$INFO[Skin.String(CustomItem.9.Label)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem10)">$INFO[Skin.String(CustomItem.10.Label)]</value>
</variable>

<variable name="CustomItemThumb">
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem1)">$INFO[Skin.String(CustomItem.1.Thumb)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem2)">$INFO[Skin.String(CustomItem.2.Thumb)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem3)">$INFO[Skin.String(CustomItem.3.Thumb)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem4)">$INFO[Skin.String(CustomItem.4.Thumb)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem5)">$INFO[Skin.String(CustomItem.5.Thumb)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem6)">$INFO[Skin.String(CustomItem.6.Thumb)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem7)">$INFO[Skin.String(CustomItem.7.Thumb)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem8)">$INFO[Skin.String(CustomItem.8.Thumb)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem9)">$INFO[Skin.String(CustomItem.9.Thumb)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem10)">$INFO[Skin.String(CustomItem.10.Thumb)]</value>
</variable>

<variable name="CustomItemPath">
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem1)">$INFO[Skin.String(CustomItem.1.Path)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem2)">$INFO[Skin.String(CustomItem.2.Path)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem3)">$INFO[Skin.String(CustomItem.3.Path)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem4)">$INFO[Skin.String(CustomItem.4.Path)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem5)">$INFO[Skin.String(CustomItem.5.Path)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem6)">$INFO[Skin.String(CustomItem.6.Path)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem7)">$INFO[Skin.String(CustomItem.7.Path)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem8)">$INFO[Skin.String(CustomItem.8.Path)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem9)">$INFO[Skin.String(CustomItem.9.Path)]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomItems),customitem10)">$INFO[Skin.String(CustomItem.10.Path)]</value>
</variable>

<variable name="ManageDialogHeader">
	<value condition="StringCompare(Window(SkinSettings).Property(ManageButtons),defualtquicknav)">$LOCALIZE[31376]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(ManageButtons),managevideoviews)">$LOCALIZE[31156]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(ManageButtons),managemusicviews)">$LOCALIZE[31157]</value>
	<value condition="StringCompare(Window(SkinSettings).Property(ManageButtons),widgetgroup1)">$LOCALIZE[31380] 1</value>
	<value condition="StringCompare(Window(SkinSettings).Property(ManageButtons),widgetgroup2)">$LOCALIZE[31380] 2</value>
	<value condition="StringCompare(Window(SkinSettings).Property(ManageButtons),widgetgroup3)">$LOCALIZE[31380] 3</value>
	<value condition="StringCompare(Window(SkinSettings).Property(ManageButtons),widgetgroup4)">$LOCALIZE[31380] 4</value>
</variable>

<variable name="ManageWidgetDialogHeader">
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup1)">$LOCALIZE[31380] 1</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup2)">$LOCALIZE[31380] 2</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup3)">$LOCALIZE[31380] 3</value>
	<value condition="StringCompare(Window(SkinSettings).Property(EditCustomWidgets),widgetgroup4)">$LOCALIZE[31380] 4</value>
</variable>

<variable name="CurrentPlayList">
	<value condition="Window.IsActive(videolibrary) + !StringCompare(Playlist.Length(video),0)">ActivateWindow(videoplaylist)</value>
	<value condition="[Window.IsActive(musiclibrary) | Window.IsActive(musicfiles)] + !StringCompare(Playlist.Length(music),0)">ActivateWindow(musicplaylist)</value>
</variable>

<variable name="QuickNav_WidgetListContentMovies">
	<value condition="[Window.IsVisible(playercontrols) | !Window.IsVisible(3050)] + stringcompare(Skin.String(QuickNavWidgetMoviesType),1)">videodb://recentlyaddedmovies/</value>
	<value condition="[Window.IsVisible(playercontrols) | !Window.IsVisible(3050)] + stringcompare(Skin.String(QuickNavWidgetMoviesType),2)">plugin://service.library.data.provider?type=recommendedmovies&amp;reload=$INFO[Window(Home).Property(recommendedmovies)]</value>
	<value condition="[Window.IsVisible(playercontrols) | !Window.IsVisible(3050)] + stringcompare(Skin.String(QuickNavWidgetMoviesType),3)">plugin://service.library.data.provider?type=randommovies&amp;reload=$INFO[Window(Home).Property(randommovies)]</value>
	<value condition="[Window.IsVisible(playercontrols) | !Window.IsVisible(3050)] + stringcompare(Skin.String(QuickNavWidgetMoviesType),4)">plugin://script.extendedinfo?info=incinemas</value>
	<value condition="[Window.IsVisible(playercontrols) | !Window.IsVisible(3050)] + stringcompare(Skin.String(QuickNavWidgetMoviesType),5)">plugin://script.extendedinfo?info=trendingmovies</value>
	<value condition="[Window.IsVisible(playercontrols) | !Window.IsVisible(3050)] + stringcompare(Skin.String(QuickNavWidgetMoviesType),6)">special://skin/extras/playlists/Top250.xsp</value>
	<value condition="[Window.IsVisible(playercontrols) | !Window.IsVisible(3050)] + stringcompare(Skin.String(QuickNavWidgetMoviesType),7)">special://skin/extras/playlists/UnseenMovies.xsp</value>
</variable>
<variable name="QuickNav_WidgetListContentTVShows">
	<value condition="[Window.IsVisible(playercontrols) | !Window.IsVisible(3050)] + stringcompare(Skin.String(QuickNavWidgetTVShowsType),1)">videodb://recentlyaddedepisodes</value>
	<value condition="[Window.IsVisible(playercontrols) | !Window.IsVisible(3050)] + stringcompare(Skin.String(QuickNavWidgetTVShowsType),2)">plugin://service.library.data.provider?type=recommendedepisodes&amp;reload=$INFO[Window(Home).Property(recommendedepisodes)]</value>
	<value condition="[Window.IsVisible(playercontrols) | !Window.IsVisible(3050)] + stringcompare(Skin.String(QuickNavWidgetTVShowsType),3)">plugin://service.library.data.provider?type=randomepisodes&amp;reload=$INFO[Window(Home).Property(randomepisodes)]</value>
	<value condition="[Window.IsVisible(playercontrols) | !Window.IsVisible(3050)] + stringcompare(Skin.String(QuickNavWidgetTVShowsType),4)">plugin://script.extendedinfo?info=trendingshows</value>
	<value condition="[Window.IsVisible(playercontrols) | !Window.IsVisible(3050)] + stringcompare(Skin.String(QuickNavWidgetTVShowsType),5)">special://skin/extras/playlists/TVShowsRecentlyPlayed.xsp</value>
</variable>
<variable name="QuickNav_WidgetListContentMusic">
	<value condition="[Window.IsVisible(playercontrols) | !Window.IsVisible(3050)] + stringcompare(Skin.String(QuickNavWidgetMusicType),1)">plugin://service.library.data.provider?type=recentalbums&amp;reload=$INFO[Window(Home).Property(recentalbums)]</value>
	<value condition="[Window.IsVisible(playercontrols) | !Window.IsVisible(3050)] + stringcompare(Skin.String(QuickNavWidgetMusicType),2)">plugin://service.library.data.provider?type=recommendedalbums&amp;reload=$INFO[Window(Home).Property(recommendedalbums)]</value>
	<value condition="[Window.IsVisible(playercontrols) | !Window.IsVisible(3050)] + stringcompare(Skin.String(QuickNavWidgetMusicType),3)">plugin://service.library.data.provider?type=randomalbums&amp;reload=$INFO[Window(Home).Property(randomalbums)]</value>
	<value condition="[Window.IsVisible(playercontrols) | !Window.IsVisible(3050)] + stringcompare(Skin.String(QuickNavWidgetMusicType),4)">plugin://script.extendedinfo?info=topartists&amp;&amp;limit=20</value>
	<value condition="[Window.IsVisible(playercontrols) | !Window.IsVisible(3050)] + stringcompare(Skin.String(QuickNavWidgetMusicType),5)">musicdb://recentlyplayedalbums/</value>
</variable>
<variable name="QuickNav_WidgetListContentTuneIn">
	<value condition="stringcompare(Skin.String(QuickNavWidgetTuneInType),1)">plugin://plugin.audio.tuneinradio/?path=recents</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetTuneInType),2)">plugin://plugin.audio.tuneinradio/?path=browse&amp;id=presets</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetTuneInType),3)">plugin://plugin.audio.tuneinradio/?path=browse&amp;c=local</value>
</variable>
<variable name="QuickNav_WidgetListContentPlaylists">
	<value condition="!Window.IsVisible(3050)">$INFO[Container(20).ListItem.Property(widgetPlaylist)]</value>
</variable>

<!--sandmann-->
<variable name="QuickNav_WidgetListContentAmazonDB">
	<!--watchlist movies-->
	<value condition="System.HasAddon(plugin.video.amazon) + StringCompare(Skin.String(QuickNavWidgetAmazonDBType),1)">plugin://plugin.video.amazon/?url=&lt;%2Fgp%2Faw%2Fwl%2F%3Ffilter%3Dmovie&gt;&amp;mode=&lt;appfeed&gt;&amp;sitemode=&lt;ListCont&gt;&amp;name=&lt;Filme&gt;&amp;page=&lt;1&gt;&amp;opt=&lt;&gt;</value>
	<!--watchlist tvshows-->
	<value condition="System.HasAddon(plugin.video.amazon) + StringCompare(Skin.String(QuickNavWidgetAmazonDBType),2)">plugin://plugin.video.amazon/?url=&lt;%2Fgp%2Faw%2Fwl%2F%3Ffilter%3Dtv&gt;&amp;mode=&lt;appfeed&gt;&amp;sitemode=&lt;ListCont&gt;&amp;name=&lt;Serien&gt;&amp;page=&lt;1&gt;&amp;opt=&lt;&gt;</value>
	<!-- new movies -->
	<value condition="System.HasAddon(plugin.video.amazon) + StringCompare(Skin.String(QuickNavWidgetAmazonDBType),3)">plugin://plugin.video.amazon/?url=&lt;recent&gt;&amp;mode=&lt;listmovie&gt;&amp;sitemode=&lt;LIST_MOVIES_SORTED&gt;&amp;name=&lt;Recently+Added&gt;&amp;page=&lt;1&gt;&amp;opt=&lt;&gt;</value>
	<!-- new shows -->
	<value condition="System.HasAddon(plugin.video.amazon) + StringCompare(Skin.String(QuickNavWidgetAmazonDBType),4)">plugin://plugin.video.amazon/?url=&lt;recent&gt;&amp;mode=&lt;listtv&gt;&amp;sitemode=&lt;LIST_TVSEASON_SORTED&gt;&amp;name=&lt;Recently+Added&gt;&amp;page=&lt;1&gt;&amp;opt=&lt;&gt;</value>
	<!-- popular movies -->
	<value condition="System.HasAddon(plugin.video.amazon) + StringCompare(Skin.String(QuickNavWidgetAmazonDBType),5)">plugin://plugin.video.amazon/?url=&lt;popularity&gt;&amp;mode=&lt;listmovie&gt;&amp;sitemode=&lt;LIST_MOVIES_SORTED&gt;&amp;name=&lt;Popular&gt;&amp;page=&lt;1&gt;&amp;opt=&lt;&gt;</value>
	<!-- popular tv shows -->
	<value condition="System.HasAddon(plugin.video.amazon) + StringCompare(Skin.String(QuickNavWidgetAmazonDBType),6)">plugin://plugin.video.amazon/?url=&lt;popularity&gt;&amp;mode=&lt;listtv&gt;&amp;sitemode=&lt;LIST_TVSHOWS_SORTED&gt;&amp;name=&lt;Popular&gt;&amp;page=&lt;1&gt;&amp;opt=&lt;&gt;</value>
</variable>

<!-- addonscriptor-->
<variable name="QuickNav_WidgetListContentAmazon">
	<!--watchlist movies -->
	<value condition="System.HasAddon(plugin.video.prime_instant) + StringCompare(Skin.String(QuickNavWidgetAmazonType),1)">plugin://plugin.video.prime_instant/?url=http%3A%2F%2Fwww.amazon.de%2Fgp%2Fvideo%2Fwatchlist%2Fmovie%2F%3Fie%3DUTF8%26show%3Dall%26sort%3DDATE_ADDED_DESC&amp;mode=listWatchList&amp;thumb=&amp;videoType=</value>
	<!--watchlist shows -->
	<value condition="System.HasAddon(plugin.video.prime_instant) + StringCompare(Skin.String(QuickNavWidgetAmazonType),2)">plugin://plugin.video.prime_instant/?url=http%3A%2F%2Fwww.amazon.de%2Fgp%2Fvideo%2Fwatchlist%2Ftv%2F%3Fie%3DUTF8%26show%3Dall%26sort%3DDATE_ADDED_DESC&amp;mode=listWatchList&amp;thumb=&amp;videoType=</value>
	<!-- new movies -->
	<value condition="System.HasAddon(plugin.video.prime_instant) + StringCompare(Skin.String(QuickNavWidgetAmazonType),3)">plugin://plugin.video.prime_instant/?url=http%3A%2F%2Fwww.amazon.de%2Fgp%2Fsearch%2Fajax%2F%3F_encoding%3DUTF8%26rh%3Dn%253A3279204031%252Cn%253A%213010076031%252Cn%253A3356018031%26sort%3Ddate-desc-rank&amp;mode=listMovies&amp;thumb=&amp;videoType=</value>
	<!-- new shows -->
	<value condition="System.HasAddon(plugin.video.prime_instant) + StringCompare(Skin.String(QuickNavWidgetAmazonType),4)">plugin://plugin.video.prime_instant/?url=http%3A%2F%2Fwww.amazon.de%2Fgp%2Fsearch%2Fajax%2F%3F_encoding%3DUTF8%26rh%3Dn%253A3279204031%252Cn%253A3010075031%252Cn%253A3015916031%26sort%3Ddate-desc-rank&amp;mode=listShows&amp;thumb=&amp;videoType=</value>
	<!-- popular movies -->
	<value condition="System.HasAddon(plugin.video.prime_instant) + StringCompare(Skin.String(QuickNavWidgetAmazonType),5)">plugin://plugin.video.prime_instant/?url=http%3A%2F%2Fwww.amazon.de%2Fgp%2Fsearch%2Fajax%2F%3F_encoding%3DUTF8%26rh%3Dn%253A3010075031%252Cn%253A3356018031%26sort%3Dpopularity-rank&amp;mode=listMovies&amp;thumb=&amp;videoType=</value>
	<!-- popular shows -->
	<value condition="System.HasAddon(plugin.video.prime_instant) + StringCompare(Skin.String(QuickNavWidgetAmazonType),6)">plugin://plugin.video.prime_instant/?url=http%3A%2F%2Fwww.amazon.de%2Fgp%2Fsearch%2Fajax%2F%3F_encoding%3DUTF8%26rh%3Dn%253A3010075031%252Cn%253A3356019031%26sort%3Dpopularity-rank&amp;mode=listShows&amp;thumb=&amp;videoType=</value>
</variable>

<variable name="QuickNav_WidgetListContentYouTube">
	<value condition="StringCompare(Skin.String(QuickNavWidgetYouTubeType),1)">plugin://plugin.video.youtube/special/popular_right_now/</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),youtube) + stringcompare(Skin.String(QuickNavWidgetYouTubeType),2)">plugin://plugin.video.youtube/special/new_uploaded_videos_tv/</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),youtube) + stringcompare(Skin.String(QuickNavWidgetYouTubeType),3)">plugin://plugin.video.youtube/channel/mine/</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),youtube) + stringcompare(Skin.String(QuickNavWidgetYouTubeType),4)">plugin://plugin.video.youtube/subscriptions/list/</value>
</variable>

<variable name="RSSVideoFeedURL">
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),Euronews)">Euronews</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),BBC News)">bbcnews</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),Vice)">vice</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),TMZ)">TMZ</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),The Ellen Show)">TheEllenShow</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),TEDx Talks)">TEDxTalks</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),VH1)">VH1</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),VEVO)">vevo</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),Comedy Central)">comedycentral</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),Funny Or Die)">FunnyorDie</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),GameTrailers)">gametrailers</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),NBA)">NBA</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),Custom)">$INFO[Skin.String(SearchStringURL)]</value>
</variable>
<variable name="RSSVideoFeedName">
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),Euronews)">Euronews</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),BBC News)">BBC News</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),Vice)">Vice</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),TMZ)">TMZ</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),The Ellen Show)">The Ellen Show</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),TEDx Talks)">TEDx Talks</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),VH1)">VH1</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),VEVO)">Vevo</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),Comedy Central)">Comedy Central</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),Funny Or Die)">Funny or Die</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),GameTrailers)">GameTrailers</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),NBA)">NBA</value>
	<value condition="stringcompare(Skin.String(RSSVideoFeedURL),Custom)">$INFO[Skin.String(SearchStringURL)]</value>
</variable>

<variable name="QuickNavSettingsMovieName">
	<value condition="stringcompare(Skin.String(QuickNavWidgetMoviesType),1)">$LOCALIZE[31241]</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetMoviesType),2)">$LOCALIZE[31260]</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetMoviesType),3)">$LOCALIZE[31247]</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetMoviesType),4)">$LOCALIZE[31256]</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetMoviesType),5)">$LOCALIZE[31257]</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetMoviesType),6)">$LOCALIZE[31269]</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetMoviesType),7)">$LOCALIZE[31263]</value>
</variable>
<variable name="QuickNavSettingsTVShowName">
	<value condition="stringcompare(Skin.String(QuickNavWidgetTVShowsType),1)">$LOCALIZE[31242]</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetTVShowsType),2)">$LOCALIZE[31261]</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetTVShowsType),3)">$LOCALIZE[31248]</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetTVShowsType),4)">$LOCALIZE[31258]</value>		
	<value condition="stringcompare(Skin.String(QuickNavWidgetTVShowsType),5)">$LOCALIZE[31270]</value>		
</variable>
<variable name="QuickNavSettingsMusicName">
	<value condition="stringcompare(Skin.String(QuickNavWidgetMusicType),1)">$LOCALIZE[31243]</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetMusicType),2)">$LOCALIZE[31262]</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetMusicType),3)">$LOCALIZE[31249]</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetMusicType),4)">$LOCALIZE[31259]</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetMusicType),5)">$LOCALIZE[517]</value>
</variable>
<variable name="QuickNavSettingsTuneInName">
	<value condition="stringcompare(Skin.String(QuickNavWidgetTuneInType),1)">$LOCALIZE[31286]</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetTuneInType),2)">$LOCALIZE[31287]</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetTuneInType),3)">$LOCALIZE[31292]</value>		
</variable>
<variable name="QuickNavSettingsYouTubeName">
	<value condition="stringcompare(Skin.String(QuickNavWidgetYouTubeType),1)">$LOCALIZE[31112]</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetYouTubeType),2)">$LOCALIZE[31113]</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetYouTubeType),3)">$LOCALIZE[31114]</value>
	<value condition="stringcompare(Skin.String(QuickNavWidgetYouTubeType),4)">$LOCALIZE[31115]</value>
</variable>
<variable name="QuickNavSettingsAmazonDBName">
	<!--watchlist movies-->
	<value condition="StringCompare(Skin.String(QuickNavWidgetAmazonDBType),1)">$LOCALIZE[31055] $LOCALIZE[36901]</value>
	<!--watchlist tvshows-->
	<value condition="StringCompare(Skin.String(QuickNavWidgetAmazonDBType),2)">$LOCALIZE[31055] $LOCALIZE[36903]</value>
	<!-- new movies -->
	<value condition="StringCompare(Skin.String(QuickNavWidgetAmazonDBType),3)">$LOCALIZE[31241]</value>
	<!-- new shows -->
	<value condition="StringCompare(Skin.String(QuickNavWidgetAmazonDBType),4)">$LOCALIZE[31242]</value>
	<!-- popular movies -->
	<value condition="StringCompare(Skin.String(QuickNavWidgetAmazonDBType),5)">$LOCALIZE[31257]</value>
	<!-- popular tv shows -->
	<value condition="StringCompare(Skin.String(QuickNavWidgetAmazonDBType),6)">$LOCALIZE[31258]</value>	
</variable>
<variable name="QuickNavSettingsAmazonName">
	<!--watchlist movies-->
	<value condition="StringCompare(Skin.String(QuickNavWidgetAmazonType),1)">$LOCALIZE[31055] $LOCALIZE[36901]</value>
	<!--watchlist tvshows-->
	<value condition="StringCompare(Skin.String(QuickNavWidgetAmazonType),2)">$LOCALIZE[31055] $LOCALIZE[36903]</value>
	<!-- new movies -->
	<value condition="StringCompare(Skin.String(QuickNavWidgetAmazonType),3)">$LOCALIZE[31241]</value>
	<!-- new shows -->
	<value condition="StringCompare(Skin.String(QuickNavWidgetAmazonType),4)">$LOCALIZE[31242]</value>
	<!-- popular movies -->
	<value condition="StringCompare(Skin.String(QuickNavWidgetAmazonType),5)">$LOCALIZE[31257]</value>
	<!-- popular tv shows -->
	<value condition="StringCompare(Skin.String(QuickNavWidgetAmazonType),6)">$LOCALIZE[31258]</value>	
</variable>


<variable name="QuickNavWidgetHeaderTitle">
	<value condition="StringCompare(Container(20).ListItem.Property(widget),movies) | Control.HasFocus(250) | Control.HasFocus(25)">$VAR[QuickNavSettingsMovieName]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),tvshows) | Control.HasFocus(350) | Control.HasFocus(35)">$VAR[QuickNavSettingsTVShowName]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),music) | Control.HasFocus(450) | Control.HasFocus(45)">$VAR[QuickNavSettingsMusicName]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),tunein) | Control.HasFocus(550) | Control.HasFocus(55)">$VAR[QuickNavSettingsTuneInName]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),amazondb)">$VAR[QuickNavSettingsAmazonDBName]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),amazon)">$VAR[QuickNavSettingsAmazonName]</value>	
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup1) + IsEmpty(Skin.String(widgetgroup.1.Label))">$LOCALIZE[31172]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup2) + IsEmpty(Skin.String(widgetgroup.2.Label))">$LOCALIZE[31172]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup3) + IsEmpty(Skin.String(widgetgroup.3.Label))">$LOCALIZE[31172]</value>		
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup4) + IsEmpty(Skin.String(widgetgroup.4.Label))">$LOCALIZE[31172]</value>	
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup1)">$INFO[Skin.String(widgetgroup.1.Label)]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup2)">$INFO[Skin.String(widgetgroup.2.Label)]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup3)">$INFO[Skin.String(widgetgroup.3.Label)]</value>		
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup4)">$INFO[Skin.String(widgetgroup.4.Label)]</value>	
	<value condition="StringCompare(Container(20).ListItem.Property(widget),tvchannels)">$LOCALIZE[19217]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),rssvideowidget)">$VAR[RSSVideoFeedName]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),youtube)">$VAR[QuickNavSettingsYouTubeName]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),weather)">$LOCALIZE[8] $INFO[Window(weather).Property(Location)]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),Playlist)">$INFO[Container(20).ListItem.Property(widgetName)]</value>	
</variable>
<variable name="QuickNavWidgetHeaderTitleNext">
	<value condition="StringCompare(Container(20).ListItem(-1).Property(widget),movies)">$VAR[QuickNavSettingsMovieName]</value>
	<value condition="StringCompare(Container(20).ListItem(-1).Property(widget),tvshows)">$VAR[QuickNavSettingsTVShowName]</value>
	<value condition="StringCompare(Container(20).ListItem(-1).Property(widget),music)">$VAR[QuickNavSettingsMusicName]</value>
	<value condition="StringCompare(Container(20).ListItem(-1).Property(widget),tunein)">$VAR[QuickNavSettingsTuneInName]</value>
	<value condition="StringCompare(Container(20).ListItem(-1).Property(widget),amazondb)">$VAR[QuickNavSettingsAmazonDBName]</value>
	<value condition="StringCompare(Container(20).ListItem(-1).Property(widget),amazon)">$VAR[QuickNavSettingsAmazonName]</value>	
	<value condition="StringCompare(Container(20).ListItem(-1).Property(widget),widgetgroup1) + IsEmpty(Skin.String(widgetgroup.1.Label))">$LOCALIZE[31172]</value>
	<value condition="StringCompare(Container(20).ListItem(-1).Property(widget),widgetgroup2) + IsEmpty(Skin.String(widgetgroup.2.Label))">$LOCALIZE[31172]</value>
	<value condition="StringCompare(Container(20).ListItem(-1).Property(widget),widgetgroup3) + IsEmpty(Skin.String(widgetgroup.3.Label))">$LOCALIZE[31172]</value>		
	<value condition="StringCompare(Container(20).ListItem(-1).Property(widget),widgetgroup4) + IsEmpty(Skin.String(widgetgroup.4.Label))">$LOCALIZE[31172]</value>	
	<value condition="StringCompare(Container(20).ListItem(-1).Property(widget),widgetgroup1)">$INFO[Skin.String(widgetgroup.1.Label)]</value>
	<value condition="StringCompare(Container(20).ListItem(-1).Property(widget),widgetgroup2)">$INFO[Skin.String(widgetgroup.2.Label)]</value>
	<value condition="StringCompare(Container(20).ListItem(-1).Property(widget),widgetgroup3)">$INFO[Skin.String(widgetgroup.3.Label)]</value>		
	<value condition="StringCompare(Container(20).ListItem(-1).Property(widget),widgetgroup4)">$INFO[Skin.String(widgetgroup.4.Label)]</value>	
	<value condition="StringCompare(Container(20).ListItem(-1).Property(widget),tvchannels)">$LOCALIZE[19217]</value>
	<value condition="StringCompare(Container(20).ListItem(-1).Property(widget),rssvideowidget)">$VAR[RSSVideoFeedName]</value>
	<value condition="StringCompare(Container(20).ListItem(-1).Property(widget),youtube)">$VAR[QuickNavSettingsYouTubeName]</value>
	<value condition="StringCompare(Container(20).ListItem(-1).Property(widget),weather)">$LOCALIZE[8] $INFO[Window(weather).Property(Location)]</value>
	<value condition="StringCompare(Container(20).ListItem(-1).Property(widget),Playlist)">$INFO[Container(20).ListItem(-1).Property(widgetName)]</value>	
</variable>
<variable name="QuickNavWidgetHeaderTitlePrevious">
	<value condition="StringCompare(Container(20).ListItem(1).Property(widget),movies)">$VAR[QuickNavSettingsMovieName]</value>
	<value condition="StringCompare(Container(20).ListItem(1).Property(widget),tvshows)">$VAR[QuickNavSettingsTVShowName]</value>
	<value condition="StringCompare(Container(20).ListItem(1).Property(widget),music)">$VAR[QuickNavSettingsMusicName]</value>
	<value condition="StringCompare(Container(20).ListItem(1).Property(widget),tunein)">$VAR[QuickNavSettingsTuneInName]</value>
	<value condition="StringCompare(Container(20).ListItem(1).Property(widget),amazondb)">$VAR[QuickNavSettingsAmazonDBName]</value>
	<value condition="StringCompare(Container(20).ListItem(1).Property(widget),amazon)">$VAR[QuickNavSettingsAmazonName]</value>	
	<value condition="StringCompare(Container(20).ListItem(1).Property(widget),widgetgroup1) + IsEmpty(Skin.String(widgetgroup.1.Label))">$LOCALIZE[31172]</value>
	<value condition="StringCompare(Container(20).ListItem(1).Property(widget),widgetgroup2) + IsEmpty(Skin.String(widgetgroup.2.Label))">$LOCALIZE[31172]</value>
	<value condition="StringCompare(Container(20).ListItem(1).Property(widget),widgetgroup3) + IsEmpty(Skin.String(widgetgroup.3.Label))">$LOCALIZE[31172]</value>		
	<value condition="StringCompare(Container(20).ListItem(1).Property(widget),widgetgroup4) + IsEmpty(Skin.String(widgetgroup.4.Label))">$LOCALIZE[31172]</value>	
	<value condition="StringCompare(Container(20).ListItem(1).Property(widget),widgetgroup1)">$INFO[Skin.String(widgetgroup.1.Label)]</value>
	<value condition="StringCompare(Container(20).ListItem(1).Property(widget),widgetgroup2)">$INFO[Skin.String(widgetgroup.2.Label)]</value>
	<value condition="StringCompare(Container(20).ListItem(1).Property(widget),widgetgroup3)">$INFO[Skin.String(widgetgroup.3.Label)]</value>		
	<value condition="StringCompare(Container(20).ListItem(1).Property(widget),widgetgroup4)">$INFO[Skin.String(widgetgroup.4.Label)]</value>	
	<value condition="StringCompare(Container(20).ListItem(1).Property(widget),tvchannels)">$LOCALIZE[19217]</value>
	<value condition="StringCompare(Container(20).ListItem(1).Property(widget),rssvideowidget)">$VAR[RSSVideoFeedName]</value>
	<value condition="StringCompare(Container(20).ListItem(1).Property(widget),youtube)">$VAR[QuickNavSettingsYouTubeName]</value>
	<value condition="StringCompare(Container(20).ListItem(1).Property(widget),weather)">$LOCALIZE[8] $INFO[Window(weather).Property(Location)]</value>
	<value condition="StringCompare(Container(20).ListItem(1).Property(widget),Playlist)">$INFO[Container(20).ListItem(1).Property(widgetName)]</value>	
</variable>

<variable name="QuickNavWidgetListItemLabel">
	<value condition="StringCompare(Container(20).ListItem.Property(widget),movies) | Control.HasFocus(25) | Control.HasFocus(250)">$INFO[Container(250).ListItem.Label]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),tvshows) | Control.HasFocus(35) | Control.HasFocus(350)] + !IsEmpty(Container(350).ListItem.TVShowTitle)">$INFO[Container(350).ListItem.TVShowTitle]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),tvshows) | Control.HasFocus(35) | Control.HasFocus(350)] + !IsEmpty(Container(350).ListItem.Label)">$INFO[Container(350).ListItem.Label]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),music) | Control.HasFocus(45) | Control.HasFocus(450)] + !IsEmpty(Container(450).ListItem.Thumb)">$INFO[Container(450).ListItem.Label]$INFO[Container(450).ListItem.Year, (,)]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),music) | Control.HasFocus(45) | Control.HasFocus(450)] + IsEmpty(Container(450).ListItem.DBID)">$LOCALIZE[31044]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),rssvideowidget) | Control.HasFocus(65) | Control.HasFocus(650)] + !IsEmpty(Container(650).ListItem.Label)">$INFO[Container(650).ListItem.Label]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),youtube) + !IsEmpty(Container(653).ListItem.Label)">$INFO[Container(653).ListItem.Label]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),tunein) | Control.HasFocus(55) | Control.HasFocus(550)] + !IsEmpty(Container(550).ListItem.Label)">$INFO[Container(550).ListItem.Label]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),amazondb) + !IsEmpty(Container(750).ListItem.Label)">$INFO[Container(750).ListItem.Label]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),amazon) + !IsEmpty(Container(751).ListItem.Label)">$INFO[Container(751).ListItem.Label]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup1) + !IsEmpty(Container(551).ListItem.Label)">$INFO[Container(551).ListItem.Label]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup2) + !IsEmpty(Container(552).ListItem.Label)">$INFO[Container(552).ListItem.Label]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup3) + !IsEmpty(Container(553).ListItem.Label)">$INFO[Container(553).ListItem.Label]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup4) + !IsEmpty(Container(554).ListItem.Label)">$INFO[Container(554).ListItem.Label]</value>	
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/music) + !IsEmpty(Container(651).ListItem.Label)">$INFO[Container(651).ListItem.Label]</value>		
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/video) + !IsEmpty(Container(652).ListItem.TVShowTitle)">$INFO[Container(652).ListItem.TVShowTitle]</value>		
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/video) + IsEmpty(Container(652).ListItem.TVShowTitle) + !IsEmpty(Container(652).ListItem.Label)">$INFO[Container(652).ListItem.Label]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),tvchannels)">$INFO[Container(654).ListItem.ChannelNumber,,. ]$INFO[Container(654).ListItem.Label]$INFO[Container(654).ListItem.Label2, • ]$INFO[Container(654).ListItem.Genre, (,)]</value>	
</variable>

<variable name="QuickNavWidgetListItemLabel2">
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),movies) | Control.HasFocus(25) | Control.HasFocus(250)] + !stringcompare(Skin.String(QuickNavWidgetMoviesType),4) + ![IsEmpty(Container(250).ListItem.Year) + IsEmpty(Container(250).ListItem.Rating) + IsEmpty(Container(250).ListItem.Duration)]">$INFO[Container(250).ListItem.Year]$INFO[Container(250).ListItem.Rating, • ]$INFO[Container(250).ListItem.Duration, • , $LOCALIZE[12391]]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),movies) | Control.HasFocus(25) | Control.HasFocus(250)] + ![IsEmpty(Container(250).ListItem.Premiered) + IsEmpty(Container(250).ListItem.Rating) + IsEmpty(Container(250).ListItem.Duration)]">$INFO[Container(250).ListItem.Premiered]$INFO[Container(250).ListItem.Rating, • ]$INFO[Container(250).ListItem.Duration, • , $LOCALIZE[12391]]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),tvshows) | Control.HasFocus(35) | Control.HasFocus(350)] + !stringcompare(Skin.String(QuickNavWidgetTVShowsType),4) + !IsEmpty(Container(350).ListItem.Title)">$INFO[Container(350).ListItem.Season]$INFO[Container(350).ListItem.Episode,x,. ]$INFO[Container(350).ListItem.Title]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),tvshows) | Control.HasFocus(35) | Control.HasFocus(350)] + !IsEmpty(Container(350).ListItem.TVShowTitle)">$INFO[Container(350).ListItem.Premiered,, • ]$INFO[Container(350).ListItem.Rating]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),music) | Control.HasFocus(45) | Control.HasFocus(450)] + !stringcompare(Skin.String(QuickNavWidgetMusicType),4) + !IsEmpty(Container(450).ListItem.Artist)">$INFO[Container(450).ListItem.Artist]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),music) | Control.HasFocus(45) | Control.HasFocus(450)] + stringcompare(Skin.String(QuickNavWidgetMusicType),5) + !IsEmpty(Container(450).ListItem.DBID)">$INFO[Container(450).ListItem.Artist]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),music) | Control.HasFocus(45) | Control.HasFocus(450)] + stringcompare(Skin.String(QuickNavWidgetMusicType),5) + IsEmpty(Container(450).ListItem.DBID)">$LOCALIZE[340]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),music) | Control.HasFocus(45) | Control.HasFocus(450)]">$INFO[Container(450).ListItem.Property(Listeners),,  $LOCALIZE[15200] $LOCALIZE[20455]]</value>		
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),tunein) | Control.HasFocus(55) | Control.HasFocus(550)]">$LOCALIZE[31138]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),amazondb)">$LOCALIZE[31052]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),amazon)">$LOCALIZE[31052]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),youtube)">YouTube</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup1) + IsEmpty(Skin.String(widgetgroup.1.Label2))">$LOCALIZE[31173]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup2) + IsEmpty(Skin.String(widgetgroup.2.Label2))">$LOCALIZE[31174]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup3) + IsEmpty(Skin.String(widgetgroup.3.Label2))">$LOCALIZE[31175]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup4) + IsEmpty(Skin.String(widgetgroup.4.Label2))">$LOCALIZE[31176]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup1)">$INFO[Skin.String(widgetgroup.1.Label2)]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup2)">$INFO[Skin.String(widgetgroup.2.Label2)]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup3)">$INFO[Skin.String(widgetgroup.3.Label2)]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup4)">$INFO[Skin.String(widgetgroup.4.Label2)]</value>
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/music) + !IsEmpty(Container(651).ListItem.Label2)">$INFO[Container(651).ListItem.Label2,,[CR]]$LOCALIZE[559]</value>		
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/music)">$LOCALIZE[559]</value>
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/video) + !IsEmpty(Container(652).ListItem.Label) + !IsEmpty(Container(652).ListItem.TVShowTitle)">$INFO[Container(652).ListItem.Label,,[CR]]$LOCALIZE[559]</value>
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/video) + !IsEmpty(Container(652).ListItem.Label2)">$INFO[Container(652).ListItem.Label2,,[CR]]$LOCALIZE[559]</value>
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/video)">$LOCALIZE[559]</value>	
	<value condition="StringCompare(Container(20).ListItem.Property(widget),tvchannels) + Container(654).ListItem.HasEpg">$INFO[Container(654).ListItem.StartTime] - $INFO[Container(654).ListItem.EndTime]</value>
</variable>


<variable name="QuickNavWidgetListItemLabel_Vertical">
	<value condition="StringCompare(Container(20).ListItem.Property(widget),movies) | Control.HasFocus(25) | Control.HasFocus(250)">$INFO[Container(250).ListItem.Label]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),tvshows) | Control.HasFocus(35) | Control.HasFocus(350)] + !IsEmpty(Container(350).ListItem.TVShowTitle)">$INFO[Container(350).ListItem.TVShowTitle] $INFO[Container(350).ListItem.Season, - ]$INFO[Container(350).ListItem.Episode,x,. ]$INFO[Container(350).ListItem.Title]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),tvshows) | Control.HasFocus(35) | Control.HasFocus(350)] + !IsEmpty(Container(350).ListItem.Label)">$INFO[Container(350).ListItem.Label] $INFO[Container(350).ListItem.Season, - ]$INFO[Container(350).ListItem.Episode,x,. ]$INFO[Container(350).ListItem.Title]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),music) | Control.HasFocus(45) | Control.HasFocus(450)] + !IsEmpty(Container(450).ListItem.Thumb)">$INFO[Container(450).ListItem.Label]$INFO[Container(450).ListItem.Year, (,)]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),music) | Control.HasFocus(45) | Control.HasFocus(450)] + IsEmpty(Container(450).ListItem.DBID)">$LOCALIZE[31044]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),rssvideowidget) | Control.HasFocus(65) | Control.HasFocus(650)] + !IsEmpty(Container(650).ListItem.Label)">$INFO[Container(650).ListItem.Label]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),youtube) + !IsEmpty(Container(653).ListItem.Label)">$INFO[Container(653).ListItem.Label]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),tunein) | Control.HasFocus(55) | Control.HasFocus(550)] + !IsEmpty(Container(550).ListItem.Label)">$INFO[Container(550).ListItem.Label]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),amazondb) + !IsEmpty(Container(750).ListItem.Label)">$INFO[Container(750).ListItem.Label]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),amazon) + !IsEmpty(Container(751).ListItem.Label)">$INFO[Container(751).ListItem.Label]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup1) + !IsEmpty(Container(551).ListItem.Label)">$INFO[Container(551).ListItem.Label]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup2) + !IsEmpty(Container(552).ListItem.Label)">$INFO[Container(552).ListItem.Label]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup3) + !IsEmpty(Container(553).ListItem.Label)">$INFO[Container(553).ListItem.Label]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup4) + !IsEmpty(Container(554).ListItem.Label)">$INFO[Container(554).ListItem.Label]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),weather) + !IsEmpty(Container(655).ListItem.Label)">$INFO[Container(655).ListItem.Label]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),tvchannels)">$INFO[Container(654).ListItem.ChannelNumber,,. ]$INFO[Container(654).ListItem.Label]</value>	
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/music) + !IsEmpty(Container(651).ListItem.Label)">$INFO[Container(651).ListItem.Label]</value>		
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/video) + !IsEmpty(Container(652).ListItem.TVShowTitle)">$INFO[Container(652).ListItem.TVShowTitle]</value>		
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/video) + IsEmpty(Container(652).ListItem.TVShowTitle) + !IsEmpty(Container(652).ListItem.Label)">$INFO[Container(652).ListItem.Label]</value>
</variable>

<variable name="QuickNavWidgetListItemLabel2_Vertical">
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),movies) | Control.HasFocus(25) | Control.HasFocus(250)] + !stringcompare(Skin.String(QuickNavWidgetMoviesType),4) + ![IsEmpty(Container(250).ListItem.Year) + IsEmpty(Container(250).ListItem.Rating) + IsEmpty(Container(250).ListItem.Duration)]">$INFO[Container(250).ListItem.Year]$INFO[Container(250).ListItem.Duration, • , $LOCALIZE[12391]]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),movies) | Control.HasFocus(25) | Control.HasFocus(250)] + ![IsEmpty(Container(250).ListItem.Premiered) + IsEmpty(Container(250).ListItem.Rating) + IsEmpty(Container(250).ListItem.Duration)]">$INFO[Container(250).ListItem.Premiered]$INFO[Container(250).ListItem.Duration, • , $LOCALIZE[12391]]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),tvshows) | Control.HasFocus(35) | Control.HasFocus(350)] + !stringcompare(Skin.String(QuickNavWidgetTVShowsType),4) + !IsEmpty(Container(350).ListItem.Title)">$INFO[Container(350).ListItem.Premiered]$INFO[Container(350).ListItem.Duration, • , $LOCALIZE[12391]]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),tvshows) | Control.HasFocus(35) | Control.HasFocus(350)] + !IsEmpty(Container(350).ListItem.TVShowTitle)">$INFO[Container(350).ListItem.Premiered,, • ]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),music) | Control.HasFocus(45) | Control.HasFocus(450)] + !stringcompare(Skin.String(QuickNavWidgetMusicType),4) + !IsEmpty(Container(450).ListItem.Artist)">$INFO[Container(450).ListItem.Artist]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),music) | Control.HasFocus(45) | Control.HasFocus(450)] + stringcompare(Skin.String(QuickNavWidgetMusicType),5) + !IsEmpty(Container(450).ListItem.DBID)">$INFO[Container(450).ListItem.Artist]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),music) | Control.HasFocus(45) | Control.HasFocus(450)] + stringcompare(Skin.String(QuickNavWidgetMusicType),5) + IsEmpty(Container(450).ListItem.DBID)">$LOCALIZE[340]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),music) | Control.HasFocus(45) | Control.HasFocus(450)]">$INFO[Container(450).ListItem.Property(Listeners),,  $LOCALIZE[15200] $LOCALIZE[20455]]</value>		
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),tunein) | Control.HasFocus(55) | Control.HasFocus(550)]">$LOCALIZE[31138]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),amazondb)">$LOCALIZE[31052]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),amazon)">$LOCALIZE[31052]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),youtube)">YouTube</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup1) + IsEmpty(Skin.String(widgetgroup.1.Label2))">$LOCALIZE[31173]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup2) + IsEmpty(Skin.String(widgetgroup.2.Label2))">$LOCALIZE[31174]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup3) + IsEmpty(Skin.String(widgetgroup.3.Label2))">$LOCALIZE[31175]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup4) + IsEmpty(Skin.String(widgetgroup.4.Label2))">$LOCALIZE[31176]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup1)">$INFO[Skin.String(widgetgroup.1.Label2)]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup2)">$INFO[Skin.String(widgetgroup.2.Label2)]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup3)">$INFO[Skin.String(widgetgroup.3.Label2)]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup4)">$INFO[Skin.String(widgetgroup.4.Label2)]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),tvchannels) + Container(654).ListItem.HasEpg">$INFO[Container(654).ListItem.StartTime] - $INFO[Container(654).ListItem.EndTime]</value>
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/music) + !IsEmpty(Container(651).ListItem.Label2)">$INFO[Container(651).ListItem.Label2,,[CR]]$LOCALIZE[559]</value>		
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/music)">$LOCALIZE[559]</value>
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/video) + !IsEmpty(Container(652).ListItem.Label) + !IsEmpty(Container(652).ListItem.TVShowTitle)">$INFO[Container(652).ListItem.Label,,[CR]]$LOCALIZE[559]</value>
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/video) + !IsEmpty(Container(652).ListItem.Label2)">$INFO[Container(652).ListItem.Label2,,[CR]]$LOCALIZE[559]</value>
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/video)">$LOCALIZE[559]</value>	
</variable>

<variable name="ViewsDef3DFlags_Widgets">
	<!--movies -->
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),movies) | Control.HasFocus(25) | Control.HasFocus(250)] + Container(250).ListItem.IsStereoscopic">flags/def/3d.png</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),movies) | Control.HasFocus(25) | Control.HasFocus(250)] + IntegerGreaterThan(Container(250).ListItem.VideoResolution,719)">flags/def/hd.png</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),movies) | Control.HasFocus(25) | Control.HasFocus(250)] + !IsEmpty(Container(250).ListItem.VideoResolution)">flags/def/sd.png</value>
	<!--tvshows -->
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),tvshows) | Control.HasFocus(35) | Control.HasFocus(350)] + Container(350).ListItem.IsStereoscopic">flags/def/3d.png</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),tvshows) | Control.HasFocus(35) | Control.HasFocus(350)] + IntegerGreaterThan(Container(350).ListItem.VideoResolution,719)">flags/def/hd.png</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),tvshows) | Control.HasFocus(35) | Control.HasFocus(350)] + !IsEmpty(Container(350).ListItem.VideoResolution)">flags/def/sd.png</value>
	<!--playlist -->
	<value condition="[SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/video) | Control.HasFocus(652)] + Container(652).ListItem.IsStereoscopic">flags/def/3d.png</value>
	<value condition="[SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/video) | Control.HasFocus(652)] + IntegerGreaterThan(Container(652).ListItem.VideoResolution,719)">flags/def/hd.png</value>
	<value condition="[SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/video) | Control.HasFocus(652)] + !IsEmpty(Container(652).ListItem.VideoResolution)">flags/def/sd.png</value>
	<!--custom 1 -->
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),widgetgroup1) | Control.HasFocus(551)] + Container(551).ListItem.IsStereoscopic">flags/def/3d.png</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),widgetgroup1) | Control.HasFocus(551)] + IntegerGreaterThan(Container(551).ListItem.VideoResolution,719)">flags/def/hd.png</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),widgetgroup1) | Control.HasFocus(551)] + !IsEmpty(Container(551).ListItem.VideoResolution)">flags/def/sd.png</value>
	<!--custom 2 -->
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),widgetgroup2) | Control.HasFocus(552)] + Container(552).ListItem.IsStereoscopic">flags/def/3d.png</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),widgetgroup2) | Control.HasFocus(552)] + IntegerGreaterThan(Container(552).ListItem.VideoResolution,719)">flags/def/hd.png</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),widgetgroup2) | Control.HasFocus(552)] + !IsEmpty(Container(552).ListItem.VideoResolution)">flags/def/sd.png</value>
	<!--custom 3 -->
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),widgetgroup3) | Control.HasFocus(553)] + Container(553).ListItem.IsStereoscopic">flags/def/3d.png</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),widgetgroup3) | Control.HasFocus(553)] + IntegerGreaterThan(Container(553).ListItem.VideoResolution,719)">flags/def/hd.png</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),widgetgroup3) | Control.HasFocus(553)] + !IsEmpty(Container(553).ListItem.VideoResolution)">flags/def/sd.png</value>
	<!--custom 4 -->
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),widgetgroup4) | Control.HasFocus(554)] + Container(554).ListItem.IsStereoscopic">flags/def/3d.png</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),widgetgroup4) | Control.HasFocus(554)] + IntegerGreaterThan(Container(554).ListItem.VideoResolution,719)">flags/def/hd.png</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),widgetgroup4) | Control.HasFocus(554)] + !IsEmpty(Container(554).ListItem.VideoResolution)">flags/def/sd.png</value>
</variable>

<variable name="QuickNavVerticalWidgetListItemLabel2">
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),movies) | Control.HasFocus(25) | Control.HasFocus(250)] + !stringcompare(Skin.String(QuickNavWidgetMoviesType),4) + ![IsEmpty(Container(250).ListItem.Year) + IsEmpty(Container(250).ListItem.Rating) + IsEmpty(Container(250).ListItem.Duration)]">$INFO[Container(250).ListItem.Year]$INFO[Container(250).ListItem.Rating, • ]$INFO[Container(250).ListItem.Duration, • , $LOCALIZE[12391]]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),movies) | Control.HasFocus(25) | Control.HasFocus(250)] + ![IsEmpty(Container(250).ListItem.Premiered) + IsEmpty(Container(250).ListItem.Rating) + IsEmpty(Container(250).ListItem.Duration)]">$INFO[Container(250).ListItem.Premiered]$INFO[Container(250).ListItem.Rating, • ]$INFO[Container(250).ListItem.Duration, • , $LOCALIZE[12391]]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),tvshows) | Control.HasFocus(35) | Control.HasFocus(350)] + !stringcompare(Skin.String(QuickNavWidgetTVShowsType),4) + !IsEmpty(Container(350).ListItem.Title)">$INFO[Container(350).ListItem.Season]$INFO[Container(350).ListItem.Episode,x,. ]$INFO[Container(350).ListItem.Title]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),tvshows) | Control.HasFocus(35) | Control.HasFocus(350)] + !IsEmpty(Container(350).ListItem.TVShowTitle)">$INFO[Container(350).ListItem.Premiered,, • ]$INFO[Container(350).ListItem.Rating]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),music) | Control.HasFocus(45) | Control.HasFocus(450)] + !stringcompare(Skin.String(QuickNavWidgetMusicType),4) + !IsEmpty(Container(450).ListItem.Artist)">$INFO[Container(450).ListItem.Artist]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),music) | Control.HasFocus(45) | Control.HasFocus(450)] + stringcompare(Skin.String(QuickNavWidgetMusicType),5) + !IsEmpty(Container(450).ListItem.DBID)">$INFO[Container(450).ListItem.Artist]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),music) | Control.HasFocus(45) | Control.HasFocus(450)] + stringcompare(Skin.String(QuickNavWidgetMusicType),5) + IsEmpty(Container(450).ListItem.DBID)">$LOCALIZE[340]</value>
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),music) | Control.HasFocus(45) | Control.HasFocus(450)]">$INFO[Container(450).ListItem.Property(Listeners),,  $LOCALIZE[15200] $LOCALIZE[20455]]</value>		
	<value condition="[StringCompare(Container(20).ListItem.Property(widget),tunein) | Control.HasFocus(55) | Control.HasFocus(550)]">$LOCALIZE[31138]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),amazondb)">$LOCALIZE[31052]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),amazon)">$LOCALIZE[31052]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),youtube)">YouTube</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup1) + IsEmpty(Skin.String(widgetgroup.1.Label2))">$LOCALIZE[31173]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup2) + IsEmpty(Skin.String(widgetgroup.2.Label2))">$LOCALIZE[31174]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup3) + IsEmpty(Skin.String(widgetgroup.3.Label2))">$LOCALIZE[31175]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup4) + IsEmpty(Skin.String(widgetgroup.4.Label2))">$LOCALIZE[31176]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup1)">$INFO[Skin.String(widgetgroup.1.Label2)]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup2)">$INFO[Skin.String(widgetgroup.2.Label2)]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup3)">$INFO[Skin.String(widgetgroup.3.Label2)]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(widget),widgetgroup4)">$INFO[Skin.String(widgetgroup.4.Label2)]</value>
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/music) + !IsEmpty(Container(651).ListItem.Label2)">$INFO[Container(651).ListItem.Label2,,[CR]]$LOCALIZE[559]</value>		
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/music)">$LOCALIZE[559]</value>
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/video) + !IsEmpty(Container(652).ListItem.Label) + !IsEmpty(Container(652).ListItem.TVShowTitle)">$INFO[Container(652).ListItem.Label,,[CR]]$LOCALIZE[559]</value>
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/video) + !IsEmpty(Container(652).ListItem.Label2)">$INFO[Container(652).ListItem.Label2,,[CR]]$LOCALIZE[559]</value>
	<value condition="SubString(Container(20).ListItem.Property(widgetPlaylist),playlists/video)">$LOCALIZE[559]</value>	
</variable>

<variable name="QuickNavWidgetThumb">
	<value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
	<value condition="!IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
	<value condition="IsEmpty(ListItem.Art(season.poster)) + !IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
	<value>$INFO[ListItem.Icon]</value>
</variable>

<variable name="QuickNavWidgetFanart">	
	<!--movies-->
	<value condition="[ControlGroup(9050).HasFocus | Control.HasFocus(25) | Control.HasFocus(250)]+ !IsEmpty(Container(250).ListItem.Art(fanart))">$INFO[Container(250).ListItem.Art(fanart)]</value>
	<value condition="[ControlGroup(9050).HasFocus | Control.HasFocus(25) | Control.HasFocus(250)] + !IsEmpty(Container(250).ListItem.Property(FanartImage))">$INFO[Container(250).ListItem.Property(FanartImage)]</value>
	<value condition="[ControlGroup(9050).HasFocus | Control.HasFocus(25) | Control.HasFocus(250)] + IsEmpty(Container(250).ListItem.Art(fanart)) + IsEmpty(Container(250).ListItem.Property(FanartImage))">SKINDEFAULT.jpg</value>
	<!--tvshows-->
	<value condition="[ControlGroup(9060).HasFocus | Control.HasFocus(35) | Control.HasFocus(350)] + !IsEmpty(Container(350).ListItem.Art(fanart))">$INFO[Container(350).ListItem.Art(fanart)]</value>
	<value condition="[ControlGroup(9060).HasFocus | Control.HasFocus(35) | Control.HasFocus(350)] + !IsEmpty(Container(350).ListItem.Property(FanartImage))">$INFO[Container(350).ListItem.Property(FanartImage)]</value>
	<value condition="[ControlGroup(9060).HasFocus | Control.HasFocus(35) | Control.HasFocus(350)] + IsEmpty(Container(350).ListItem.Art(fanart)) + IsEmpty(Container(350).ListItem.Property(FanartImage))">SKINDEFAULT.jpg</value>
	<!--music-->
	<value condition="[ControlGroup(9070).HasFocus | Control.HasFocus(45) | Control.HasFocus(450)] + !IsEmpty(Container(450).ListItem.Art(fanart))">$INFO[Container(450).ListItem.Art(fanart)]</value>
	<value condition="[ControlGroup(9070).HasFocus | Control.HasFocus(45) | Control.HasFocus(450)] + !IsEmpty(Container(450).ListItem.Property(FanartImage))">$INFO[Container(450).ListItem.Property(FanartImage)]</value>
	<value condition="[ControlGroup(9070).HasFocus | Control.HasFocus(45) | Control.HasFocus(450)] + IsEmpty(Container(450).ListItem.Art(fanart)) + IsEmpty(Container(450).ListItem.Property(FanartImage))">SKINDEFAULT.jpg</value>
	<!--rss video feed-->
	<value condition="[ControlGroup(9099).HasFocus | Control.HasFocus(65) | Control.HasFocus(650)]+ !IsEmpty(Container(650).ListItem.Art(fanart))">$INFO[Container(650).ListItem.Art(fanart)]</value>
	<value condition="[ControlGroup(9099).HasFocus | Control.HasFocus(65) | Control.HasFocus(650)] + !IsEmpty(Container(650).ListItem.Property(FanartImage))">$INFO[Container(650).ListItem.Property(FanartImage)]</value> 
	<!--playlists-->
	<value condition="ControlGroup(9071).HasFocus + !IsEmpty(Container(651).ListItem.Art(fanart))">$INFO[Container(651).ListItem.Art(fanart)]</value>
	<value condition="ControlGroup(9071).HasFocus + IsEmpty(Container(651).ListItem.Art(fanart))">SKINDEFAULT.jpg</value>		
	<value condition="ControlGroup(9072).HasFocus + !IsEmpty(Container(652).ListItem.Art(fanart))">$INFO[Container(652).ListItem.Art(fanart)]</value>
	<value condition="ControlGroup(9072).HasFocus + IsEmpty(Container(652).ListItem.Art(fanart))">SKINDEFAULT.jpg</value>	
	<!--YouTube -->
	<value condition="ControlGroup(9098).HasFocus + !IsEmpty(Container(653).ListItem.Art(fanart))">$INFO[Container(653).ListItem.Art(fanart)]</value>	
	<value condition="ControlGroup(9098).HasFocus + IsEmpty(Container(653).ListItem.Art(fanart))">SKINDEFAULT.jpg</value>
	<!--Amazon Sandmann -->
	<value condition="ControlGroup(9073).HasFocus + !IsEmpty(Container(750).ListItem.Art(fanart))">$INFO[Container(750).ListItem.Art(fanart)]</value>	
	<value condition="ControlGroup(9073).HasFocus + IsEmpty(Container(750).ListItem.Art(fanart))">SKINDEFAULT.jpg</value>
	<!--Amazon AddonScriptor-->
	<value condition="ControlGroup(9074).HasFocus + !IsEmpty(Container(751).ListItem.Art(fanart))">$INFO[Container(751).ListItem.Art(fanart)]</value>
	<value condition="ControlGroup(9074).HasFocus + IsEmpty(Container(751).ListItem.Art(fanart))">SKINDEFAULT.jpg</value>-->
	<!--custom widgets-->	
	<value condition="SubString(Skin.String(widgetgroup.1.Source),path) + ControlGroup(9090).HasFocus + !IsEmpty(Container(551).ListItem.Art(fanart))">$INFO[Container(551).ListItem.Art(fanart)]</value>
	<value condition="SubString(Skin.String(widgetgroup.2.Source),path) + ControlGroup(9091).HasFocus + !IsEmpty(Container(552).ListItem.Art(fanart))">$INFO[Container(552).ListItem.Art(fanart)]</value>
	<value condition="SubString(Skin.String(widgetgroup.3.Source),path) + ControlGroup(9093).HasFocus + !IsEmpty(Container(553).ListItem.Art(fanart))">$INFO[Container(553).ListItem.Art(fanart)]</value>
	<value condition="SubString(Skin.String(widgetgroup.4.Source),path) + ControlGroup(9094).HasFocus + !IsEmpty(Container(554).ListItem.Art(fanart))">$INFO[Container(554).ListItem.Art(fanart)]</value>
	<value condition="ControlGroup(9090).HasFocus + !IsEmpty(Container(551).ListItem.Property(background)) + !StringCompare(Container(551).ListItem.Property(background),DefaultAddon)">$INFO[Container(551).ListItem.Property(background)]</value>		
	<value condition="ControlGroup(9091).HasFocus + !IsEmpty(Container(552).ListItem.Property(background)) + StringCompare(Container(552).ListItem.Property(background),DefaultAddon)">$INFO[Container(552).ListItem.Property(background)]</value>		
	<value condition="ControlGroup(9093).HasFocus + !IsEmpty(Container(553).ListItem.Property(background)) + StringCompare(Container(553).ListItem.Property(background),DefaultAddon)">$INFO[Container(553).ListItem.Property(background)]</value>		
	<value condition="ControlGroup(9094).HasFocus + !IsEmpty(Container(554).ListItem.Property(background)) + StringCompare(Container(554).ListItem.Property(background),DefaultAddon)">$INFO[Container(554).ListItem.Property(background)]</value>	
	<value condition="ControlGroup(9090).HasFocus + StringCompare(Container(551).ListItem.Property(background),DefaultAddon)">$INFO[Container(551).ListItem.Property(defaultID),special://home/addons/,/fanart.jpg]</value>
	<value condition="ControlGroup(9091).HasFocus + StringCompare(Container(552).ListItem.Property(background),DefaultAddon)">$INFO[Container(552).ListItem.Property(defaultID),special://home/addons/,/fanart.jpg]</value>
	<value condition="ControlGroup(9093).HasFocus + StringCompare(Container(553).ListItem.Property(background),DefaultAddon)">$INFO[Container(553).ListItem.Property(defaultID),special://home/addons/,/fanart.jpg]</value>
	<value condition="ControlGroup(9094).HasFocus + StringCompare(Container(554).ListItem.Property(background),DefaultAddon)">$INFO[Container(554).ListItem.Property(defaultID),special://home/addons/,/fanart.jpg]</value>
	<!--main menu background duplicate as fallback-->	
	<value condition="!Window.IsVisible(playercontrols) + !IsEmpty(Control.GetLabel(99999))">$INFO[Control.GetLabel(99999)]</value>
	<value condition="!Window.IsVisible(playercontrols)">$INFO[Container(20).ListItem.Property(Background)]</value>
</variable>

<variable name="backgroundMainmenu">
	<!--home menu-->	
	<value condition="StringCompare(Container(20).ListItem.Property(background),playlistBackground)">$INFO[Container(30).ListItem.Art(fanart)]</value>
	<value condition="StringCompare(Container(20).ListItem.Property(background),DefaultAddon)">$INFO[Container(20).ListItem.Property(defaultID),special://home/addons/,/fanart.jpg]</value>
	<value condition="!StringCompare(Container(20).ListItem.Property(background),DefaultAddon)">$INFO[Container(20).ListItem.Property(Background)]</value>
</variable>

<variable name="RecordingBoxLabel">
	<value condition="StringCompare(Skin.String(RecordingBox),global)">$LOCALIZE[34122]</value>
	<value condition="StringCompare(Skin.String(RecordingBox),disabled)">$LOCALIZE[13113]</value>	
	<value>$LOCALIZE[31298]</value>
</variable>

<variable name="BGColorDiffuseLabel">
	<value condition="!IsEmpty(Skin.String(BGColorDiffuse))">$INFO[Skin.String(BGColorDiffuse)]</value>
	<value condition="IsEmpty(Skin.String(BGColorDiffuse))">75</value>
</variable>

<variable name="NowPlayingLabel">
	<value condition="Player.Paused">$LOCALIZE[112]...</value>
	<value>$LOCALIZE[31316]...</value>
</variable>

<variable name="ArtistLogoLabel">
	<value condition="StringCompare(Skin.String(ArtistLogo),AlbumDir)">$LOCALIZE[31346]</value>
	<value condition="StringCompare(Skin.String(ArtistLogo),disabled)">$LOCALIZE[13113]</value>	
	<value>$LOCALIZE[31345]</value>
</variable>

<variable name="CustomDialogOKHeadLabel">
	<value condition="Window.IsVisible(SkinSettings)">$LOCALIZE[31169]</value>
	<value condition="Window.IsVisible(SubtitleSearch)">KODI $LOCALIZE[24012]</value>
	<value>$LOCALIZE[10043]</value>
</variable>

<variable name="CustomDialogOKMessage">
	<value condition="Window.IsVisible(favourites)">$LOCALIZE[31431]</value>
	<value condition="Window.Previous(Startup)">$LOCALIZE[31432]</value>
	<value condition="Window.IsVisible(SkinSettings)">$LOCALIZE[31170]</value>
	<value condition="Window.IsActive(Weather)">$LOCALIZE[412][CR]$LOCALIZE[31204]</value>
	<value condition="Window.IsVisible(SubtitleSearch)">$LOCALIZE[24109]</value>
</variable>

<variable name="SettingsCategoryHeadLabels">
	<value condition="Window.IsVisible(AppearanceSettings)">$LOCALIZE[31411]</value>
	<value condition="Window.IsVisible(VideosSettings)">$LOCALIZE[31412]</value>
	<value condition="Window.IsVisible(PVRSettings)">$LOCALIZE[31413]</value>
	<value condition="Window.IsVisible(MusicSettings)">$LOCALIZE[31414]</value>
	<value condition="Window.IsVisible(PicturesSettings)">$LOCALIZE[31415]</value>
	<value condition="Window.IsVisible(WeatherSettings)">$LOCALIZE[31416]</value>
	<value condition="Window.IsVisible(NetworkSettings)">$LOCALIZE[31417]</value>
	<value condition="Window.IsVisible(SystemSettings)">$LOCALIZE[31418]</value>
</variable>

<variable name="SettingsConditionalWeatherLabels">
	<value condition="StringCompare(Skin.String(ConditionalWeatherArt),Extrapack)">$LOCALIZE[31294]</value>
	<value condition="StringCompare(Skin.String(ConditionalWeatherArt),MultiImage)">$LOCALIZE[31136]</value>
	<value>$LOCALIZE[1223]</value>
</variable>

<variable name="GlobalSearchFanart">
	<value condition="Control.HasFocus(111) | Container(9000).HasFocus(1)">$INFO[Container(111).ListItem.Property(Fanart)]</value>
	<value condition="Control.HasFocus(121) | Container(9000).HasFocus(2)">$INFO[Container(121).ListItem.Property(Fanart)]</value>
	<value condition="Control.HasFocus(131) | Container(9000).HasFocus(3)">$INFO[Container(131).ListItem.Property(Fanart)]</value>
	<value condition="Control.HasFocus(141) | Container(9000).HasFocus(4)">$INFO[Container(141).ListItem.Property(Fanart)]</value>
	<value condition="Control.HasFocus(151) | Container(9000).HasFocus(5)">$INFO[Container(151).ListItem.Property(Fanart)]</value>
	<value condition="Control.HasFocus(161) | Container(9000).HasFocus(6)">$INFO[Container(161).ListItem.Property(Fanart)]</value>
	<value condition="Control.HasFocus(171) | Container(9000).HasFocus(7)">$INFO[Container(171).ListItem.Property(Fanart)]</value>
	<value condition="Control.HasFocus(181) | Container(9000).HasFocus(8)">$INFO[Container(181).ListItem.Property(Fanart)]</value>
</variable>

<variable name="DialogsInfo">
	<value condition="Container.Content(Movies)">$INFO[ListItem.Genre]$INFO[Listitem.Year, (,) ]</value>
	<value condition="Container.Content(TVShows) | Container.Content(Artists)">$INFO[ListItem.Genre]</value>
	<value condition="Container.Content(Episodes) + ![IsEmpty(ListItem.Season) + IsEmpty(ListItem.Episode)]">$INFO[ListItem.TVShowTitle] $INFO[ListItem.Season,,x]$INFO[ListItem.Episode,,  •  ]$INFO[ListItem.Premiered,$LOCALIZE[31003] ]</value>
	<value condition="Container.Content(Albums)">$INFO[ListItem.Artist]</value>
	<value condition="Container.Content(Songs)">$INFO[ListItem.Album]$INFO[ListItem.Artist, - ]</value>
	<value condition="Container.Content(Addons) + !IsEmpty(ListItem.Property(Addon.Summary))">$INFO[ListItem.Property(Addon.Summary)]</value>
</variable>	

<variable name="ViewsDef3DFlags">
	<value condition="ListItem.IsStereoscopic">flags/def/3d.png</value>
	<value condition="IntegerGreaterThan(ListItem.VideoResolution,719)">flags/def/hd.png</value>
	<value condition="!IsEmpty(ListItem.VideoResolution)">flags/def/sd.png</value>
</variable>

<variable name="VideoInfoThumbs">
	<value condition="Container.Content(Episodes) + !IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
	<value condition="IsEmpty(ListItem.Art(season.poster)) + !IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
	<value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
	<value>$INFO[ListItem.Icon]</value>
</variable>

<variable name="VideoInfoContentInfoLabels">
	<value condition="[Container.Content(TVShows) + [[StringCompare(Container.FolderPath,videodb://tvshows/titles/) | !SubString(Container.FolderPath,videodb://tvshows/titles/,left)]] + !Window.IsActive(script-ExtendedInfo Script-DialogVideoInfo.xml) + !Control.HasFocus(50)]">$LOCALIZE[31002]</value>
	<value condition="[[Container.Content(TVShows) + SubString(Container.FolderPath,videodb://tvshows/titles/,left) + [!StringCompare(Container.FolderPath,videodb://tvshows/titles/)]] + !Window.IsActive(script-ExtendedInfo Script-DialogVideoInfo.xml) + !Control.HasFocus(50)]">$LOCALIZE[33054]</value>
	<value condition="Container.Content(Episodes) + !Window.IsActive(script-ExtendedInfo Script-DialogVideoInfo.xml) + !Control.HasFocus(50) + !Control.HasFocus(61)">$LOCALIZE[20360]</value>
	<value condition="[Control.HasFocus(50) | Control.HasFocus(150) | Control.HasFocus(61)] + System.HasAddon(script.metadata.actors)">$LOCALIZE[31164]</value>
	<value condition="Container.Content(Movies)">$LOCALIZE[20342]</value>
	<value condition="Container.Content(TVShows) + [[StringCompare(Container.FolderPath,videodb://tvshows/titles/) | !SubString(Container.FolderPath,videodb://tvshows/titles/,left)]]">$LOCALIZE[31002]</value>
	<value condition="[Container.Content(TVShows) + SubString(Container.FolderPath,videodb://tvshows/titles/,left) + [!StringCompare(Container.FolderPath,videodb://tvshows/titles/)]]">$LOCALIZE[33054]</value>
	<value condition="Container.Content(Episodes)">$LOCALIZE[20360]</value>
</variable>

<variable name="VideoInfoStarRating">
	<value condition="!IsEmpty(ListItem.Rating) | !Substring(Container(100).ListItem.Property(Rating),0.0)">rating/star_big_full.png</value>
	<value condition="IsEmpty(ListItem.Rating) | Substring(Container(100).ListItem.Property(Rating),0.0)">rating/star_big_empty.png</value>
</variable>

<variable name="VideoPlayerThumb">
	<value condition="VideoPlayer.Content(LiveTV)">$INFO[VideoPlayer.Cover]</value>	
	<value condition="VideoPlayer.Content(Episodes) + !IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
	<value condition="[VideoPlayer.Content(Movies) | VideoPlayer.Content(Episodes)] + !IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
	<value condition="!IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
	<value condition="!IsEmpty(Player.Art(fanart))">$INFO[Player.Art(fanart)]</value>
	<value>$INFO[VideoPlayer.Cover]</value>
</variable>

<include name="OSDFadeLabelWidth">
	<width>420</width>
</include>
<include name="OSDFadeLabelWidthSmall">
	<width>365</width>
</include>
<include name="OSDProgressWidth">
	<width>600</width>
</include>
<include name="OSDProgressWidthSmall">
	<width>545</width>
</include>

<variable name="VideoOSDSettingsHeader">
	<value condition="Window.IsVisible(123)">$LOCALIZE[157] - $LOCALIZE[5]</value>
	<value condition="Window.IsVisible(124)">$LOCALIZE[292] - $LOCALIZE[5]</value>
</variable>

<variable name="OSDInfoTitleLabel">
	<value condition="VideoPlayer.Content(Movies)">$INFO[VideoPlayer.Title,, ]$INFO[VideoPlayer.Year, (,) ]</value>
	<value>$INFO[VideoPlayer.Title]</value>
</variable>

<variable name="NowPlayingInfoLabels">	
	<value condition="Player.HasAudio + Player.IsInternetStream">$INFO[MusicPlayer.Title]</value>
	<value condition="Player.HasAudio + !Player.IsInternetStream">$INFO[MusicPlayer.Artist]$INFO[MusicPlayer.Title, · ] $INFO[MusicPlayer.Album, (,) ]</value>
	<value condition="Player.IsInternetStream + !IsEmpty(VideoPlayer.TVShowTitle)">$INFO[VideoPlayer.TVShowTitle,, · ]$INFO[VideoPlayer.Season,S,]$INFO[VideoPlayer.Episode,E, · ]$INFO[VideoPlayer.Title]</value>
	<value condition="Player.HasVideo + Player.IsInternetStream">$INFO[VideoPlayer.Title]$INFO[VideoPlayer.Genre, (,) ]</value>	
	<value condition="VideoPlayer.Content(Movies)">$INFO[VideoPlayer.Title]$INFO[VideoPlayer.Year, (,) ]</value>
	<value condition="VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.TVShowTitle,, · ]$INFO[VideoPlayer.Season,S,]$INFO[VideoPlayer.Episode,E, · ]$INFO[VideoPlayer.Title]</value>
</variable>

<variable name="OSDInfoUnderTitleLabel">
	<value condition="VideoPlayer.Content(Movies)">$INFO[VideoPlayer.Genre]</value>
	<value condition="VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.TVShowTitle,, · ]$INFO[VideoPlayer.Season,$LOCALIZE[20373] , · ]$INFO[VideoPlayer.Episode,$LOCALIZE[20359] ,]</value>
	<value condition="![VideoPlayer.Content(Movies) | VideoPlayer.Content(Episodes)] + !IsEmpty(VideoPlayer.Genre)">$INFO[VideoPlayer.Genre]</value>
	<value>$INFO[Player.FolderPath]</value>
</variable>

<variable name="OSDInfoPremieredFadeLabel">
	<value condition="VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.Premiered,[COLOR=white]$LOCALIZE[20416]:[/COLOR] ]</value>
</variable>

<variable name="OSDInfoChapterFadeLabel">
	<value condition="Player.ChapterCount">$LOCALIZE[21396]: [COLOR=white]$INFO[Player.Chapter]$INFO[Player.ChapterCount, / ][/COLOR]</value>
</variable>

<variable name="DialogSeekBarLabel">
	<value condition="!IsEmpty(Player.SeekStepSize) + ![player.forwarding | player.rewinding]">$LOCALIZE[773][COLOR=osdinfo] $INFO[Player.SeekStepSize][/COLOR]</value>
	<value condition="Player.DisplayAfterSeek + ![player.forwarding | player.rewinding]">$LOCALIZE[773][COLOR=osdinfo] $INFO[Player.SeekOffset][/COLOR]</value>
	<value condition="!Player.DisplayAfterSeek + Player.Seeking">$LOCALIZE[773]</value>
	<value condition="Player.Playing + !Player.Seeking + !Player.DisplayAfterSeek">[COLOR=blue]$LOCALIZE[31301][/COLOR]</value>
	<value condition="[Player.Paused + !Player.Caching] + !Player.Seeking + !Player.DisplayAfterSeek">[COLOR=blue]$LOCALIZE[31302][/COLOR]</value>
	<value condition="[Player.Paused + Player.Caching] + !Player.Seeking + !Player.DisplayAfterSeek">[COLOR=osdinfo]$LOCALIZE[15107] $INFO[Player.CacheLevel]%[/COLOR]</value>
	<value condition="Player.Seeking">$LOCALIZE[773]  [COLOR=osdinfo]$INFO[Player.SeekOffset][/COLOR]</value>
	<value condition="Player.Rewinding2x + !Player.Seeking">$LOCALIZE[31303] [COLOR=osdinfo]x2[/COLOR]</value>
	<value condition="Player.Rewinding4x + !Player.Seeking">$LOCALIZE[31303] [COLOR=osdinfo]x4[/COLOR]</value>
	<value condition="Player.Rewinding8x + !Player.Seeking">$LOCALIZE[31303] [COLOR=osdinfo]x8[/COLOR]</value>
	<value condition="Player.Rewinding16x + !Player.Seeking">$LOCALIZE[31303] [COLOR=osdinfo]x16[/COLOR]</value>
	<value condition="Player.Rewinding32x + !Player.Seeking">$LOCALIZE[31303] [COLOR=osdinfo]x32[/COLOR]</value>
	<value condition="Player.Forwarding2x + !Player.Seeking">$LOCALIZE[31304] [COLOR=osdinfo]x2[/COLOR]</value>
	<value condition="Player.Forwarding4x + !Player.Seeking">$LOCALIZE[31304] [COLOR=osdinfo]x4[/COLOR]</value>
	<value condition="Player.Forwarding8x + !Player.Seeking">$LOCALIZE[31304] [COLOR=osdinfo]x8[/COLOR]</value>
	<value condition="Player.Forwarding16x + !Player.Seeking">$LOCALIZE[31304] [COLOR=osdinfo]x16[/COLOR]</value>
	<value condition="Player.Forwarding32x + !Player.Seeking">$LOCALIZE[31304] [COLOR=osdinfo]x32[/COLOR]</value>		
	<value condition="Player.DisplayAfterSeek + !Player.Seeking">$LOCALIZE[773]  [COLOR=osdinfo]$INFO[Player.SeekOffset][/COLOR]</value>
</variable>

<variable name="Vis-Background">
	<value condition="Skin.HasSetting(Vis-Fanart)">$INFO[Player.Art(fanart)]</value>
	<value condition="Skin.HasSetting(Vis-ArtistSlideshow) + IsEmpty(Window(Visualisation).Property(ArtistSlideshowRefresh))">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</value>
	<value condition="Skin.HasSetting(Vis-MusicSlideshow)">$INFO[Window(Home).Property(script.grab.fanart.Music.FanArt)]</value>
	<value>empty_icon.png</value>
</variable>

<variable name="WeatherAlerts">
	<value condition="StringCompare(Weather.Plugin,weather.openweathermap.extended)">$LOCALIZE[33050]</value>
	<value condition="StringCompare(Weather.Plugin,weather.weatherplus)">$INFO[Window.Property(Alerts.Label)]</value>
</variable>

<variable name="WeatherViewsLabels">
	<value condition="Stringcompare(Skin.String(WeatherExtended),1)">$LOCALIZE[31235]</value>
	<value condition="Stringcompare(Skin.String(WeatherExtended),2)">$LOCALIZE[31223]</value>
	<value condition="Stringcompare(Skin.String(WeatherExtended),3)">$LOCALIZE[31224]</value>
	<value condition="Stringcompare(Skin.String(WeatherExtended),4)">$LOCALIZE[31226]</value>
</variable>

<variable name="BackgroundAnimationLabels">
	<value condition="Stringcompare(Skin.String(BG-Animation),home)">$LOCALIZE[31185]</value>
	<value condition="Stringcompare(Skin.String(BG-Animation),windows)">$LOCALIZE[31186]</value>
	<value condition="Stringcompare(Skin.String(BG-Animation),global)">$LOCALIZE[31184]</value>
	<value>$LOCALIZE[31066]</value>
</variable>

<variable name="IMDbUpdateLabels">
	<value condition="Stringcompare(Skin.String(AutoUpdateRatings),all)">$LOCALIZE[31187] / $LOCALIZE[31188] / $LOCALIZE[31189]</value>
	<value condition="Stringcompare(Skin.String(AutoUpdateRatings),onlymovies)">$LOCALIZE[31187] / $LOCALIZE[31188]</value>
	<value condition="Stringcompare(Skin.String(AutoUpdateRatings),top250)">$LOCALIZE[31187]</value>
	<value condition="Stringcompare(Skin.String(AutoUpdateRatings),movies)">$LOCALIZE[31188]</value>
	<value condition="Stringcompare(Skin.String(AutoUpdateRatings),mpaa)">$LOCALIZE[31189]</value>
	<value>$LOCALIZE[31066]</value>
</variable>

<variable name="ViewIDText">
	<value>$LOCALIZE[31465][CR][CR]Slide [COLOR=blue]51[/COLOR] / Gallery [COLOR=blue]52[/COLOR] / 3D Wall [COLOR=blue]53[/COLOR] / Wall [COLOR=blue]54[/COLOR] / List Wall [COLOR=blue]58[/COLOR] / Video Wall [COLOR=blue]580[/COLOR] / LoveFilm [COLOR=blue]581[/COLOR] / NetFilx [COLOR=blue]59[/COLOR] / Poster [COLOR=blue]55[/COLOR] / Thumbnails Video [COLOR=blue]560[/COLOR] / Thumbnails Poster [COLOR=blue]561[/COLOR] / Banners [COLOR=blue]57[/COLOR] / ThumbList [COLOR=blue]582[/COLOR] / Classic Slide [COLOR=blue]583[/COLOR] / Shelf [COLOR=blue]579[/COLOR] / $LOCALIZE[31472] [COLOR=blue]584[/COLOR][CR][CR]$LOCALIZE[31466]</value>
</variable>

<include name="OnLoadDialogsClose">
	<onload condition="Window.IsActive(subtitlesearch)">Dialog.Close(subtitlesearch)</onload>
	<onload condition="Window.IsActive(contextmenu)">Dialog.Close(contextmenu)</onload>
	<onload condition="Window.IsActive(movieinformation)">Dialog.Close(movieinformation)</onload>
	<onload condition="Window.IsActive(musicinformation)">Dialog.Close(musicinformation)</onload>
	<onload condition="Window.IsActive(songinformation)">Dialog.Close(songinformation)</onload>
	<onload condition="Window.IsActive(addoninformation)">Dialog.Close(addoninformation)</onload>
	<onload condition="Window.IsActive(locksettings)">Dialog.Close(locksettings)</onload>
	<onload condition="Window.IsActive(profilesettings)">Dialog.Close(profilesettings)</onload>
	<onload condition="Window.IsActive(yesnodialog)">Dialog.Close(yesnodialog)</onload>
	<onload condition="Window.IsActive(visualisationpresetlist)">Dialog.Close(visualisationpresetlist)</onload>
	<onload condition="Window.IsActive(osdvideosettings)">Dialog.Close(osdvideosettings)</onload>
	<onload condition="Window.IsActive(osdaudiosettings)">Dialog.Close(osdaudiosettings)</onload>
	<onload condition="Window.IsActive(videobookmarks)">Dialog.Close(videobookmarks)</onload>
	<onload condition="Window.IsActive(filebrowser)">Dialog.Close(filebrowser)</onload>
	<onload condition="Window.IsActive(networksetup)">Dialog.Close(networksetup)</onload>
	<onload condition="Window.IsActive(mediasource)">Dialog.Close(mediasource)</onload>
	<onload condition="Window.IsActive(contentsettings)">Dialog.Close(contentsettings)</onload>
	<onload condition="Window.IsActive(peripheralsettings)">Dialog.Close(peripheralsettings)</onload>
	<onload condition="Window.IsActive(peripherals)">Dialog.Close(peripherals)</onload>
	<onload condition="Window.IsActive(smartplaylisteditor)">Dialog.Close(smartplaylisteditor)</onload>
	<onload condition="Window.IsActive(smartplaylistrule)">Dialog.Close(smartplaylistrule)</onload>
	<onload condition="Window.IsActive(busydialog)">Dialog.Close(busydialog)</onload>
	<onload condition="Window.IsActive(pictureinfo)">Dialog.Close(pictureinfo)</onload>
	<onload condition="Window.IsActive(addonsettings)">Dialog.Close(addonsettings)</onload>
	<onload condition="Window.IsActive(accesspoints)">Dialog.Close(accesspoints)</onload>
	<onload condition="Window.IsActive(fullscreeninfo)">Dialog.Close(fullscreeninfo)</onload>
	<onload condition="Window.IsActive(karaokeselector)">Dialog.Close(karaokeselector)</onload>
	<onload condition="Window.IsActive(karaokelargeselector)">Dialog.Close(karaokelargeselector)</onload>
	<onload condition="Window.IsActive(karaoke)">Dialog.Close(karaoke)</onload>
	<onload condition="Window.IsActive(sliderdialog)">Dialog.Close(sliderdialog)</onload>
	<onload condition="Window.IsActive(selectdialog)">Dialog.Close(selectdialog)</onload>
	<onload condition="Window.IsActive(okdialog)">Dialog.Close(okdialog)</onload>
	<onload condition="Window.IsActive(filestackingdialog)">Dialog.Close(filestackingdialog)</onload>
	<onload condition="Window.IsActive(textviewer)">Dialog.Close(textviewer)</onload>
	<onload condition="Window.IsActive(mediafilter)">Dialog.Close(mediafilter)</onload>
	<onload condition="Window.IsActive(PVROSDChannels)">Dialog.Close(PVROSDChannels)</onload>
	<onload condition="Window.IsActive(PVROSDGuide)">Dialog.Close(PVROSDGuide)</onload>
	<onload condition="Window.IsActive(PVRGuideInfo)">Dialog.Close(PVRGuideInfo)</onload>
	<onload condition="Window.IsActive(PVRRecordingInfo)">Dialog.Close(PVRRecordingInfo)</onload>
	<onload condition="Window.IsActive(PVRTimerSetting)">Dialog.Close(PVRTimerSetting)</onload>
	<onload condition="Window.IsActive(PVRGroupManager)">Dialog.Close(PVRGroupManager)</onload>
	<onload condition="Window.IsActive(PVRChannelManager)">Dialog.Close(PVRChannelManager)</onload>
	<onload condition="Window.IsActive(PVRGuideSearch)">Dialog.Close(PVRGuideSearch)</onload>
	<onload condition="Window.IsActive(1112)">Dialog.Close(1112)</onload>
	<onload condition="Window.IsActive(1110)">Dialog.Close(1110)</onload>
	<onload condition="Window.IsActive(1117)">Dialog.Close(1117)</onload>
	<onload condition="Window.IsActive(1118)">Dialog.Close(1118)</onload>
	<onload condition="Window.IsActive(1119)">Dialog.Close(1119)</onload>
	<onload condition="Window.IsActive(1113)">Dialog.Close(1120)</onload>
	<onload condition="Window.IsActive(1114)">Dialog.Close(1121)</onload>
	<onload condition="Window.IsActive(1115)">Dialog.Close(1122)</onload>
	<onload condition="Window.IsActive(3000) + !Window.IsVisible(script-cu-lrclyrics-main.xml)">Dialog.Close(3000)</onload>
	<onload condition="Window.IsActive(3001)">Dialog.Close(3001)</onload>
	<onload condition="Window.IsActive(3002)">Dialog.Close(3002)</onload>
	<onload condition="Window.IsActive(3003)">Dialog.Close(3003)</onload>
	<onload condition="Window.IsActive(3004)">Dialog.Close(3004)</onload>
	<onload condition="Window.IsActive(3005)">Dialog.Close(3005)</onload>
	<onload>Dialog.Close(DialogSelect.xml)</onload>
</include>

<include name="OnClickDialogsClose">
	<onclick condition="Window.IsActive(subtitlesearch)">Dialog.Close(subtitlesearch)</onclick>
	<onclick condition="Window.IsActive(playercontrols)">Dialog.Close(playercontrols)</onclick>
	<onclick condition="Window.IsActive(yesnodialog)">Dialog.Close(yesnodialog)</onclick>
	<onclick condition="Window.IsActive(okdialog)">Dialog.Close(okdialog)</onclick>
	<onclick condition="Window.IsActive(progressdialog)">Dialog.Close(progressdialog)</onclick>
	<onclick condition="Window.IsActive(extendedprogressdialog)">Dialog.Close(extendedprogressdialog)</onclick>
	<onclick condition="Window.IsActive(virtualkeyboard)">Dialog.Close(virtualkeyboard)</onclick>
	<onclick condition="Window.IsActive(numericinput)">Dialog.Close(numericinput)</onclick>
	<onclick condition="Window.IsActive(volumebar)">Dialog.Close(volumebar)</onclick>
	<onclick condition="Window.IsActive(mutebug)">Dialog.Close(mutebug)</onclick>
	<onclick condition="Window.IsActive(contextmenu)">Dialog.Close(contextmenu)</onclick>
	<onclick condition="Window.IsActive(infodialog)">Dialog.Close(infodialog)</onclick>
	<onclick condition="Window.IsActive(shutdownmenu)">Dialog.Close(shutdownmenu)</onclick>
	<onclick condition="Window.IsActive(seekbar)">Dialog.Close(seekbar)</onclick>
	<onclick condition="Window.IsActive(musicosd)">Dialog.Close(musicosd)</onclick>
	<onclick condition="Window.IsActive(visualisationpresetlist)">Dialog.Close(visualisationpresetlist)</onclick>
	<onclick condition="Window.IsActive(osdvideosettings)">Dialog.Close(osdvideosettings)</onclick>
	<onclick condition="Window.IsActive(osdaudiosettings)">Dialog.Close(osdaudiosettings)</onclick>
	<onclick condition="Window.IsActive(videobookmarks)">Dialog.Close(videobookmarks)</onclick>
	<onclick condition="Window.IsActive(filebrowser)">Dialog.Close(filebrowser)</onclick>
	<onclick condition="Window.IsActive(networksetup)">Dialog.Close(networksetup)</onclick>
	<onclick condition="Window.IsActive(mediasource)">Dialog.Close(mediasource)</onclick>
	<onclick condition="Window.IsActive(contentsettings)">Dialog.Close(contentsettings)</onclick>
	<onclick condition="Window.IsActive(favourites)">Dialog.Close(favourites)</onclick>
	<onclick condition="Window.IsActive(songinformation)">Dialog.Close(songinformation)</onclick>
	<onclick condition="Window.IsActive(smartplaylisteditor)">Dialog.Close(smartplaylisteditor)</onclick>
	<onclick condition="Window.IsActive(smartplaylistrule)">Dialog.Close(smartplaylistrule)</onclick>
	<onclick condition="Window.IsActive(busydialog)">Dialog.Close(busydialog)</onclick>
	<onclick condition="Window.IsActive(pictureinfo)">Dialog.Close(pictureinfo)</onclick>
	<onclick condition="Window.IsActive(addonsettings)">Dialog.Close(addonsettings)</onclick>
	<onclick condition="Window.IsActive(accesspoints)">Dialog.Close(accesspoints)</onclick>
	<onclick condition="Window.IsActive(fullscreeninfo)">Dialog.Close(fullscreeninfo)</onclick>
	<onclick condition="Window.IsActive(karaokeselector)">Dialog.Close(karaokeselector)</onclick>
	<onclick condition="Window.IsActive(karaokelargeselector)">Dialog.Close(karaokelargeselector)</onclick>
	<onclick condition="Window.IsActive(sliderdialog)">Dialog.Close(sliderdialog)</onclick>
	<onclick condition="Window.IsActive(addoninformation)">Dialog.Close(addoninformation)</onclick>
	<onclick condition="Window.IsActive(musicinformation)">Dialog.Close(musicinformation)</onclick>
	<onclick condition="Window.IsActive(movieinformation)">Dialog.Close(movieinformation)</onclick>
	<onclick condition="Window.IsActive(selectdialog)">Dialog.Close(selectdialog)</onclick>
	<onclick condition="Window.IsActive(filestackingdialog)">Dialog.Close(filestackingdialog)</onclick>
	<onclick condition="Window.IsActive(textviewer)">Dialog.Close(textviewer)</onclick>
	<onclick condition="Window.IsActive(peripheralsettings)">Dialog.Close(peripheralsettings)</onclick>
	<onclick condition="Window.IsActive(peripherals)">Dialog.Close(peripherals)</onclick>
	<onclick condition="Window.IsActive(mediafilter)">Dialog.Close(mediafilter)</onclick>
	<onclick condition="Window.IsActive(PVRGuideInfo)">Dialog.Close(PVRGuideInfo)</onclick>
	<onclick condition="Window.IsActive(PVRRecordingInfo)">Dialog.Close(PVRRecordingInfo)</onclick>
	<onclick condition="Window.IsActive(PVRTimerSetting)">Dialog.Close(PVRTimerSetting)</onclick>
	<onclick condition="Window.IsActive(PVRGroupManager)">Dialog.Close(PVRGroupManager)</onclick>
	<onclick condition="Window.IsActive(PVRChannelManager)">Dialog.Close(PVRChannelManager)</onclick>
	<onclick condition="Window.IsActive(PVRGuideSearch)">Dialog.Close(PVRGuideSearch)</onclick>
	<onclick condition="Window.IsActive(1110)">Dialog.Close(1110)</onclick>
	<onclick condition="Window.IsActive(1117)">Dialog.Close(1117)</onclick>
	<onclick condition="Window.IsActive(1118)">Dialog.Close(1118)</onclick>
	<onclick condition="Window.IsActive(1119)">Dialog.Close(1119)</onclick>
	<onclick condition="Window.IsActive(1113)">Dialog.Close(1120)</onclick>
	<onclick condition="Window.IsActive(1114)">Dialog.Close(1121)</onclick>
	<onclick condition="Window.IsActive(1115)">Dialog.Close(1122)</onclick>
	<onclick condition="Window.IsActive(3000)">Dialog.Close(3000)</onclick>
	<onclick condition="Window.IsActive(3001)">Dialog.Close(3001)</onclick>
	<onclick condition="Window.IsActive(3002)">Dialog.Close(3002)</onclick>
	<onclick condition="Window.IsActive(3003)">Dialog.Close(3003)</onclick>
	<onclick condition="Window.IsActive(3004)">Dialog.Close(3004)</onclick>
	<onclick condition="Window.IsActive(3005)">Dialog.Close(3005)</onclick>
	<onclick condition="Window.IsActive(3006)">Dialog.Close(3006)</onclick>
	<onclick condition="Window.IsActive(3007)">Dialog.Close(3007)</onclick>
	<onclick condition="Window.IsActive(3008)">Dialog.Close(3008)</onclick>
	<onclick condition="Window.IsActive(3009)">Dialog.Close(3009)</onclick>
	<onclick condition="Window.IsActive(3010)">Dialog.Close(3010)</onclick>
	<onclick condition="Window.IsActive(3011)">Dialog.Close(3011)</onclick>
	<onclick condition="Window.IsActive(3012)">Dialog.Close(3012)</onclick>
	<onclick condition="Window.IsActive(3013)">Dialog.Close(3013)</onclick>
	<onclick condition="Window.IsActive(3014)">Dialog.Close(3014)</onclick>
	<onclick condition="Window.IsActive(3015)">Dialog.Close(3015)</onclick>
	<onclick condition="Window.IsActive(3016)">Dialog.Close(3016)</onclick>
	<onclick condition="Window.IsActive(3017)">Dialog.Close(3017)</onclick>
	<onclick condition="Window.IsActive(3018)">Dialog.Close(3018)</onclick>
	<onclick condition="Window.IsActive(3019)">Dialog.Close(3019)</onclick>
	<onclick condition="Window.IsActive(3020)">Dialog.Close(3020)</onclick>
	<onclick condition="Window.IsActive(3021)">Dialog.Close(3021)</onclick>
	<onclick condition="Window.IsActive(3022)">Dialog.Close(3022)</onclick>
	<onclick condition="Window.IsActive(3023)">Dialog.Close(3023)</onclick>
	<onclick condition="Window.IsActive(3024)">Dialog.Close(3024)</onclick>
	<onclick condition="Window.IsActive(3025)">Dialog.Close(3025)</onclick>
	<onclick condition="Window.IsActive(3026)">Dialog.Close(3026)</onclick>
	<onclick condition="Window.IsActive(3027)">Dialog.Close(3027)</onclick>
	<onclick condition="Window.IsActive(3028)">Dialog.Close(3028)</onclick>
	<onclick condition="Window.IsActive(3029)">Dialog.Close(3029)</onclick>
	<onclick condition="Window.IsActive(3030)">Dialog.Close(3030)</onclick>
	<onclick condition="Window.IsActive(3031)">Dialog.Close(3031)</onclick>
	<onclick condition="Window.IsActive(3032)">Dialog.Close(3032)</onclick>
	<onclick condition="Window.IsActive(3033)">Dialog.Close(3033)</onclick>
	<onclick condition="Window.IsActive(3034)">Dialog.Close(3034)</onclick>
	<onclick condition="Window.IsActive(3035)">Dialog.Close(3035)</onclick>
	<onclick condition="Window.IsActive(3036)">Dialog.Close(3036)</onclick>
	<onclick condition="Window.IsActive(3037)">Dialog.Close(3037)</onclick>
	<onclick condition="Window.IsActive(3038)">Dialog.Close(3038)</onclick>
	<onclick condition="Window.IsActive(3039)">Dialog.Close(3039)</onclick>
	<onclick condition="Window.IsActive(3040)">Dialog.Close(3040)</onclick>
	<onclick condition="Window.IsActive(3041)">Dialog.Close(3041)</onclick>
	<onclick condition="Window.IsActive(3042)">Dialog.Close(3042)</onclick>
	<onclick condition="Window.IsActive(3043)">Dialog.Close(3043)</onclick>
	<onclick condition="Window.IsActive(3044)">Dialog.Close(3044)</onclick>
	<onclick condition="Window.IsActive(3045)">Dialog.Close(3045)</onclick>
	<onclick condition="Window.IsActive(3046)">Dialog.Close(3046)</onclick>
	<onclick condition="Window.IsActive(3047)">Dialog.Close(3047)</onclick>
	<onclick condition="Window.IsActive(3048)">Dialog.Close(3048)</onclick>
	<onclick condition="Window.IsActive(3049)">Dialog.Close(3049)</onclick>
	<onclick condition="Window.IsActive(3050)">Dialog.Close(3050)</onclick>
	<onclick condition="Window.IsActive(3051)">Dialog.Close(3051)</onclick>
	<onclick condition="Window.IsActive(3052)">Dialog.Close(3052)</onclick>
	<onclick condition="Window.IsActive(3053)">Dialog.Close(3053)</onclick>
	<onclick condition="Window.IsActive(3054)">Dialog.Close(3054)</onclick>
	<onclick condition="Window.IsActive(3055)">Dialog.Close(3055)</onclick>
	<onclick condition="Window.IsActive(3056)">Dialog.Close(3056)</onclick>
	<onclick condition="Window.IsActive(3057)">Dialog.Close(3057)</onclick>
	<onclick condition="Window.IsActive(3058)">Dialog.Close(3058)</onclick>
	<onclick condition="Window.IsActive(3059)">Dialog.Close(3059)</onclick>
	<onclick condition="Window.IsActive(3060)">Dialog.Close(3060)</onclick>
	<onclick condition="Window.IsActive(3061)">Dialog.Close(3061)</onclick>
	<onclick condition="Window.IsActive(3062)">Dialog.Close(3062)</onclick>
	<onclick condition="Window.IsActive(3063)">Dialog.Close(3063)</onclick>
	<onclick condition="Window.IsActive(3064)">Dialog.Close(3064)</onclick>
	<onclick condition="Window.IsActive(3065)">Dialog.Close(3065)</onclick>
	<onclick condition="Window.IsActive(3066)">Dialog.Close(3066)</onclick>
	<onclick condition="Window.IsActive(3067)">Dialog.Close(3067)</onclick>
	<onclick condition="Window.IsActive(3068)">Dialog.Close(3068)</onclick>
	<onclick condition="Window.IsActive(3069)">Dialog.Close(3069)</onclick>
	<onclick condition="Window.IsActive(3070)">Dialog.Close(3070)</onclick>
	<onclick condition="Window.IsActive(3071)">Dialog.Close(3071)</onclick>
	<onclick condition="Window.IsActive(3072)">Dialog.Close(3072)</onclick>
	<onclick condition="Window.IsActive(3073)">Dialog.Close(3073)</onclick>
	<onclick condition="Window.IsActive(3074)">Dialog.Close(3074)</onclick>
	<onclick condition="Window.IsActive(3075)">Dialog.Close(3075)</onclick>
	<onclick condition="Window.IsActive(3076)">Dialog.Close(3076)</onclick>
	<onclick condition="Window.IsActive(3077)">Dialog.Close(3077)</onclick>
	<onclick condition="Window.IsActive(3078)">Dialog.Close(3078)</onclick>
	<onclick condition="Window.IsActive(3079)">Dialog.Close(3079)</onclick>
	<onclick condition="Window.IsActive(3080)">Dialog.Close(3080)</onclick>
	<onclick condition="Window.IsActive(3081)">Dialog.Close(3081)</onclick>
	<onclick condition="Window.IsActive(3082)">Dialog.Close(3082)</onclick>
	<onclick condition="Window.IsActive(3083)">Dialog.Close(3083)</onclick>
	<onclick condition="Window.IsActive(3084)">Dialog.Close(3084)</onclick>
	<onclick condition="Window.IsActive(3085)">Dialog.Close(3085)</onclick>
	<onclick condition="Window.IsActive(3086)">Dialog.Close(3086)</onclick>
	<onclick condition="Window.IsActive(3087)">Dialog.Close(3087)</onclick>
	<onclick condition="Window.IsActive(3088)">Dialog.Close(3088)</onclick>
	<onclick condition="Window.IsActive(3089)">Dialog.Close(3089)</onclick>
	<onclick condition="Window.IsActive(3090)">Dialog.Close(3090)</onclick>
	<onclick condition="Window.IsActive(3091)">Dialog.Close(3091)</onclick>
	<onclick condition="Window.IsActive(3092)">Dialog.Close(3092)</onclick>
	<onclick condition="Window.IsActive(3093)">Dialog.Close(3093)</onclick>
	<onclick condition="Window.IsActive(3094)">Dialog.Close(3094)</onclick>
	<onclick condition="Window.IsActive(3095)">Dialog.Close(3095)</onclick>
	<onclick condition="Window.IsActive(3096)">Dialog.Close(3096)</onclick>
	<onclick condition="Window.IsActive(3097)">Dialog.Close(3097)</onclick>
	<onclick condition="Window.IsActive(3098)">Dialog.Close(3098)</onclick>
	<onclick condition="Window.IsActive(3099)">Dialog.Close(3099)</onclick>		
</include>



<include name="hiddenlist">
	<description>container</description>
	<posx>0</posx>
	<posy>0</posy>
	<width>1</width>
	<height>1</height>
	<onleft>9000</onleft>
	<onright>9000</onright>
	<onup>9000</onup>
	<ondown>9000</ondown>
	<viewtype label="Actor">list</viewtype>
	<pagecontrol>-</pagecontrol>
	<itemlayout height="1" width="1" />
	<focusedlayout height="1" width="1" />
</include>
<include name="ExtendedPosterLayout-nf">
	<control type="image">
		<posx>10</posx>
		<posy>10</posy>
		<width>128</width>
		<height>185</height>
		<aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
		<texture background="true" diffuse="thumbs/poster_diffuse.png">thumbs/thumb_back.png</texture>
	</control>
	<control type="image">
		<posx>10</posx>
		<posy>10</posy>
		<width>128</width>
		<height>185</height>
		<aspectratio align="center" aligny="top" scalediffuse="false">stretch</aspectratio>
		<texture background="true" fallback="thumbs/fallback_poster.png" diffuse="thumbs/poster_diffuse.png">$INFO[ListItem.Icon]</texture>
	</control>
	<control type="image">
		<posx>10</posx>
		<posy>10</posy>
		<width>128</width>
		<height>185</height>
		<aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
		<texture background="true" diffuse="thumbs/poster_diffuse.png">overlays/in_library.png</texture>
		<visible>!IsEmpty(ListItem.Property(LibraryHasMovie))</visible>
	</control>
	<control type="image">
		<posx>3</posx>
		<posy>3</posy>
		<width>142</width>
		<height>199</height>
		<aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
		<texture background="true" diffuse="thumbs/poster_diffuse.png">thumbs/poster_overlay_noglass.png</texture>
	</control>
</include>
<include name="ExtendedPosterLayout-fo">
	<control type="image">
		<posx>10</posx>
		<posy>10</posy>
		<width>128</width>
		<height>185</height>
		<aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
		<texture background="true" diffuse="thumbs/poster_diffuse.png">thumbs/thumb_back.png</texture>
	</control>
	<control type="image">
		<posx>10</posx>
		<posy>10</posy>
		<width>128</width>
		<height>185</height>
		<aspectratio align="center" aligny="top" scalediffuse="false">stretch</aspectratio>
		<texture background="true" fallback="thumbs/fallback_poster.png" diffuse="thumbs/poster_diffuse.png">$INFO[ListItem.Icon]</texture>
	</control>
	<control type="image">
		<posx>10</posx>
		<posy>10</posy>
		<width>128</width>
		<height>185</height>
		<aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
		<texture background="true" diffuse="thumbs/poster_diffuse.png">overlays/in_library.png</texture>
		<visible>!IsEmpty(ListItem.Property(LibraryHasMovie))</visible>
	</control>
	<control type="image">
		<posx>3</posx>
		<posy>3</posy>
		<width>142</width>
		<height>199</height>
		<aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
		<texture background="true" diffuse="thumbs/poster_diffuse.png">thumbs/poster_overlay_noglass.png</texture>
	</control>
</include>
<include name="ExtendedLandscapeLayout-nf">
	<control type="image">
		<left>7</left>
		<top>7</top>
		<width>276</width>
		<height>168</height>
		<aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
		<texture background="true" diffuse="thumbs/video_diffuse.png">thumbs/thumb_back.png</texture>
	</control>
	<control type="image">
		<left>7</left>
		<top>7</top>
		<width>276</width>
		<height>168</height>
		<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
		<texture background="true" fallback="thumbs/fallback_poster.png" diffuse="thumbs/music_diffuse.png">$INFO[ListItem.Icon]</texture>
	</control>
	<control type="image">
		<left>0</left>
		<top>0</top>
		<width>290</width>
		<height>182</height>
		<aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
		<texture background="true" diffuse="thumbs/video_diffuse.png">thumbs/video_overlay_noglass.png</texture>
	</control>
</include>
<include name="ExtendedLandscapeLayout-fo">
	<control type="image">
		<left>7</left>
		<top>7</top>
		<width>276</width>
		<height>168</height>
		<aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
		<texture background="true" diffuse="thumbs/video_diffuse.png">thumbs/thumb_back.png</texture>
	</control>
	<control type="image">
		<left>7</left>
		<top>7</top>
		<width>276</width>
		<height>168</height>
		<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
		<texture background="true" fallback="thumbs/fallback_poster.png" diffuse="thumbs/video_diffuse.png">$INFO[ListItem.Icon]</texture>
	</control>
	<control type="image">
		<left>0</left>
		<top>0</top>
		<width>290</width>
		<height>182</height>
		<aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
		<texture background="true" diffuse="thumbs/video_diffuse.png">thumbs/video_overlay_noglass.png</texture>
	</control>
</include>


<!-- hidden library stat labels -->
<include name="HiddenLibraryStats">
	<control type="group" id="16">
		<visible>!Skin.HasSetting(HideLibraryStats) + [StringCompare(Container(20).ListItem.Property(defaultID),movies) | StringCompare(Container(20).ListItem.Property(defaultID),music) | StringCompare(Container(20).ListItem.Property(defaultID),tvshows)]</visible>
		<control type="label" id="17">
			<label>$VAR[LibraryInfoLabel]</label>			
			<include>TopButton</include>
		</control>
		<control type="label" id="18">
			<label>$VAR[LibraryInfoLabel2]</label>
			<include>TopButton</include>
		</control>
		<control type="label" id="19">
			<label>$VAR[LibraryInfoLabel3]</label>
			<include>TopButton</include>
		</control>
	</control>
</include>

<include name="WidgetItemCounter">
	<value condition="SubString(Container(20).ListItem.Property(widget),weather)">blaaaa</value>
	<value>$INFO[Container($PARAM[Container]).CurrentItem] / $INFO[Container($PARAM[Container]).NumItems]</value>
</include>

<!-- custom widget path -->
<include name="widgetgroup-custompath">
	<content limit="$PARAM[Limit]" target="$PARAM[Target]">$INFO[Skin.String(CustomWidgetPath$PARAM[GroupNo].List)]</content>
</include>

<!-- custom widget group -->
<include name="widgetgroup-customgroup">
	<content>
		<include>skinshortcuts-group-widgetgroup$PARAM[GroupNo]</include>
	</content>
</include>

<!-- item counter -->
<include name="widgetItemCounter">
	<control type="label">
		<left>$PARAM[left]</left>
		<top>216</top>
		<width>1280</width>
		<height>70</height>
		<aligny>top</aligny>
		<align>$PARAM[align]</align>			
		<textcolor>77white</textcolor>
		<shadowcolor>55000000</shadowcolor>
		<font>FontSize_16</font>							
		<include>VisibleFadeEffect4</include>			
	</control>
</include>

<!-- arrows -->
<include name="ArrowDimension">
	<left>150</left>
	<top>337</top>
	<width>828</width>
	<height>25</height>
</include>
<include name="ArrowWidth">
	<left>956</left>
</include>
</includes>