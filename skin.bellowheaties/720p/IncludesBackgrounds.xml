<?xml version="1.0" encoding="UTF-8"?>
<includes> 

	<include name="BackgroundWeather">
		<control type="multiimage">
			<include>BackgroundAnimation</include>
			<include>FullscreenDimensions</include>
			<include>FanartFade</include>
			<imagepath background="true">$INFO[Skin.String(WeatherFanartDir)]$INFO[Window(Weather).Property(Current.FanartCode)]</imagepath>
			<timeperimage>30000</timeperimage>
			<fadetime>500</fadetime>
			<randomize>true</randomize>
			<loop>yes</loop>				
			<visible>![Player.HasVideo + !Skin.HasSetting(HideBGVideo)]</visible>
			<visible>![Skin.HasSetting(CustomBackground) + !IsEmpty(Skin.String(CustomImageBackgroundPath))]</visible>
			<visible>!IsEmpty(Skin.String(WeatherFanartDir)) + Window.IsVisible(weather) | StringCompare(Container(20).ListItem.Property(backgroundName),Conditional Weather) | StringCompare(Container(20).ListItem.Property(defaultID),weather)</visible>
			<animation effect="fade" start="100" end="40" time="300" condition="Window.IsActive(PlayerControls)">Conditional</animation>
		</control>
	</include>

	<include name="BackgroundContent">
		<control type="list" id="30">			
			<description>hidden container for playlist background</description>
			<posx>-20</posx>
			<posy>-20</posy>
			<width>1</width>
			<height>1</height>
			<visible>true</visible>
			<onup>50</onup>
			<ondown>50</ondown>
			<onleft>50</onleft>
			<onright>50</onright>
			<autoscroll>true</autoscroll>
			<scrolltime tween="sine" easing="inout">30000</scrolltime>
			<fadetime>500</fadetime>
			<itemlayout width="1" height="1">
			</itemlayout>
			<focusedlayout height="1" width="1">
			</focusedlayout>
			<content>$INFO[Container(20).ListItem.Property(backgroundPlaylist)]</content>
		</control>
		<control type="image">
			<left>-10</left>
			<top>-10</top>
			<width>1300</width>
			<height>740</height>
			<aspectratio>stretch</aspectratio>
			<texture background="true">windows/bg/black.jpg</texture>
		</control>
		<control type="group">
			<animation effect="fade" start="0" end="100" time="1000">Visible</animation>
			<animation effect="fade" start="100" end="0" time="1000">Hidden</animation>			
			<visible>![Player.HasVideo + !Skin.HasSetting(HideBGVideo)]</visible>
			<visible>![Player.HasAudio + [[Skin.HasSetting(Vis-Fanart) + !IsEmpty(Player.Art(fanart))] | Skin.HasSetting(Vis-MusicSlideshow) | Skin.HasSetting(Vis-ArtistSlideshow)]]</visible>
			<control type="image">
				<description>Default Background</description>
				<include>FullscreenDimensions</include>
				<include>BackgroundFade</include>
				<include>BackgroundAnimation</include>
				<texture background="true">SKINDEFAULT.jpg</texture>
				<visible>![Skin.HasSetting(CustomBackground) + !IsEmpty(Skin.String(CustomImageBackgroundPath))]</visible>
				<visible>![Skin.HasSetting(CustomBackground) + ![IsEmpty(Skin.String(CustomFolderBackgroundPath)) | Skin.HasSetting(ShowCustomBackgroundOnHomeOnly)]]</visible>
				<fadetime>FanartCrossfadeTime</fadetime>
			</control>
			<control type="group">
				<include>BackgroundAnimation</include>
				<animation type="WindowOpen" reversible="false">
					<effect type="fade" start="0" end="100" time="10350" />
				</animation>
				<animation type="WindowClose" reversible="false">
					<effect type="fade" start="100" end="0" time="350" />
				</animation>
				<visible>Skin.HasSetting(HomeMenuAnimation)</visible>
				<visible>Window.IsVisible(Home) + ![Skin.HasSetting(CustomBackground) + !IsEmpty(Skin.String(CustomImageBackgroundPath))]</visible>
				<visible>Window.IsVisible(Home) + ![Skin.HasSetting(CustomBackground) + ![IsEmpty(Skin.String(CustomFolderBackgroundPath)) | Skin.HasSetting(ShowCustomBackgroundOnHomeOnly)]]</visible>
				<control type="image">
					<include>FullscreenDimensions</include>
					<include>BackgroundFade</include>
					<texture>windows/bg/bokeh1.png</texture>
					<animation type="Conditional" condition="true" pulse="true" reversible="false">
						<effect type="fade" start="0" end="70" time="10350" />
					</animation>
				</control>
				<control type="image">
					<include>FullscreenDimensions</include>
					<include>BackgroundFade</include>
					<texture>windows/bg/bokeh2.png</texture>
					<animation type="Conditional" condition="true" pulse="true" reversible="false">
						<effect type="fade" start="0" end="70" time="10350" delay="10350"/>
					</animation>
				</control>
				<control type="image">
					<include>FullscreenDimensions</include>
					<include>BackgroundFade</include>
					<texture>windows/bg/bokeh3.png</texture>
					<animation type="Conditional" condition="true" pulse="true" reversible="false">
						<effect type="fade" start="0" end="70" time="10350" delay="20700"/>
					</animation>
				</control>
			</control>
			<control type="image">
				<description>Global Single-Background</description>
				<include>FullscreenDimensions</include>
				<include>BackgroundFade</include>
				<include>BackgroundAnimation</include>
				<texture background="true">$INFO[Skin.String(CustomImageBackgroundPath)]</texture>
				<fadetime>500</fadetime>
				<visible>Skin.HasSetting(CustomBackground) + !IsEmpty(Skin.String(CustomImageBackgroundPath))</visible>
				<animation effect="fade" start="100" end="40" time="300" condition="Window.IsActive(PlayerControls)">Conditional</animation>
			</control>
			<control type="multiimage">
				<description>Global Multi-Background</description>
				<include>FullscreenDimensions</include>
				<include>FanartFade</include>
				<include>BackgroundAnimation</include>
				<imagepath background="true">$INFO[Skin.String(CustomFolderBackgroundPath)]</imagepath>
				<timeperimage>10000</timeperimage>
				<randomize>true</randomize>
				<loop>yes</loop>
				<fadetime>500</fadetime>
				<visible>Skin.HasSetting(CustomBackground) + !IsEmpty(Skin.String(CustomFolderBackgroundPath)) + ![Skin.HasSetting(ShowCustomBackgroundOnHomeOnly) + !Window.IsVisible(Home)]</visible>
				<animation effect="fade" start="100" end="40" time="300" condition="Window.IsActive(PlayerControls)">Conditional</animation>
			</control>
			<control type="group">
				<visible>![Skin.HasSetting(CustomBackground) + !IsEmpty(Skin.String(CustomImageBackgroundPath))]</visible>
				<visible>![[StringCompare(Container(20).ListItem.Property(defaultID),weather) | Window.IsVisible(weather)] + [Skin.HasSetting(ShowWeatherFanart) + !IsEmpty(Skin.String(WeatherFanartDir))]]</visible>
				<animation effect="fade" start="100" end="40" time="300" condition="Window.IsActive(PlayerControls)">Conditional</animation>
				<control type="image">
					<description>HomeMenu Single-Background</description>
					<include>FullscreenDimensions</include>
					<include>FanartFade</include>
					<include>BackgroundAnimation</include>
					<texture background="true">$VAR[backgroundMainmenu]</texture>
					<fadetime>500</fadetime>
					<visible>![SubString(Container(20).ListItem.Property(background),\,Right) | SubString(Container(20).ListItem.Property(background),/,Right)]</visible>
				</control>
				<control type="multiimage" id="99999">
					<description>HomeMenu Multi-Background</description>
					<include>FullscreenDimensions</include>
					<include>FanartFade</include>
					<imagepath background="true">$INFO[Container(20).ListItem.Property(Background)]</imagepath>
					<timeperimage>10000</timeperimage>
					<randomize>true</randomize>
					<loop>yes</loop>
					<fadetime>600</fadetime>	
					<include>BackgroundAnimation</include>				
					<visible>SubString(Container(20).ListItem.Property(background),\,Right) | SubString(Container(20).ListItem.Property(background),/,Right)</visible>
				</control>
				<control type="group">
					<include>FanartFade</include>
					<include>3DWallBG_Movies_Posters</include>
					<include>BackgroundAnimation</include>
					<visible>StringCompare(Container(20).ListItem.Property(background),3DWallBG_Movies_Posters)</visible>
				</control>
				<control type="group">
					<include>FanartFade</include>
					<include>3DWallBG_Movies_Logo</include>
					<include>BackgroundAnimation</include>
					<visible>StringCompare(Container(20).ListItem.Property(background),3DWallBG_Movies_Logo)</visible>
				</control>
				<control type="group">
					<include>FanartFade</include>
					<include>3DWallBG_Movies_DiscArt</include>
					<include>BackgroundAnimation</include>
					<visible>StringCompare(Container(20).ListItem.Property(background),3DWallBG_Movies_DiscArt)</visible>
				</control>
				<control type="group">
					<include>FanartFade</include>
					<include>3DWallBG_TVShows_Posters</include>
					<include>BackgroundAnimation</include>
					<visible>StringCompare(Container(20).ListItem.Property(background),3DWallBG_TVShows_Posters)</visible>
				</control> 		
				<control type="group">
					<include>FanartFade</include>
					<include>3DWallBG_TVShows_Logo</include>
					<include>BackgroundAnimation</include>
					<visible>StringCompare(Container(20).ListItem.Property(background),3DWallBG_TVShows_Logo)</visible>
				</control>
				<control type="group">
					<include>FanartFade</include>
					<include>3DWallBG_TVShows_Landscape</include>
					<include>BackgroundAnimation</include>
					<visible>StringCompare(Container(20).ListItem.Property(background),3DWallBG_TVShows_Landscape)</visible>
				</control>
				<control type="group">
					<include>FanartFade</include>
					<include>3DWallBG_Albums</include>
					<include>BackgroundAnimation</include>
					<visible>StringCompare(Container(20).ListItem.Property(background),3DWallBG_Albums)</visible>
				</control>
				<control type="group">
					<include>FanartFade</include>
					<include>3DWallBG_Artists</include>
					<include>BackgroundAnimation</include>
					<visible>StringCompare(Container(20).ListItem.Property(background),3DWallBG_Artists)</visible>
				</control>
				<control type="group">	
					<description>Widget Backgrounds</description>
					<control type="image">
						<description>Widget Fanart Fallback Diffuse</description>
						<include>FullscreenDimensions</include>
						<texture background="true">SKINDEFAULT.jpg</texture>
						<include>BackgroundFade</include>
						<visible>!Skin.HasSetting(HideBGFanart)</visible>
						<include>BackgroundAnimation</include>
						<visible>!Window.IsActive(playercontrols)</visible>
						<visible>!IsEmpty(Window(Home).Property(WidgetHasFocus))</visible>
					</control>
					<control type="image">
						<description>Widget Fanart Fallback Diffuse</description>
						<include>FullscreenDimensions</include>
						<texture background="true">windows/bg/bg_diffuse.png</texture>
						<animation effect="fade" end="20" time="0" condition="true">Conditional</animation>
						<include>BackgroundFade</include>
						<visible>!Skin.HasSetting(HideBGFanart) + Skin.HasSetting(DiffuseWidgetFanart)</visible>
						<visible>!Window.IsActive(playercontrols)</visible>						
						<visible>!IsEmpty(Window(Home).Property(WidgetHasFocus))</visible>
					</control>
					<control type="image">
						<description>Widget Fanart</description>
						<include>FullscreenDimensions</include>
						<include>BackgroundFade</include>
						<texture diffuse="osd/quicknav/fanart_diffuse.png" background="true">$VAR[QuickNavWidgetFanart]</texture>
						<fadetime>FanartCrossfadeTime</fadetime>
						<include>BackgroundAnimation</include>
						<visible>!Skin.HasSetting(HideBGFanart) + Skin.HasSetting(DiffuseWidgetFanart)</visible>
						<visible>!Window.IsActive(playercontrols)</visible>
						<visible>!IsEmpty(Window(Home).Property(WidgetHasFocus))</visible>
					</control>
					<control type="image">
						<description>Widget Fanart</description>
						<include>FullscreenDimensions</include>
						<include>BackgroundFade</include>
						<texture background="true">$VAR[QuickNavWidgetFanart]</texture>
						<include>BackgroundAnimation</include>
						<fadetime>FanartCrossfadeTime</fadetime>					
						<visible>!Skin.HasSetting(HideBGFanart) + !Skin.HasSetting(DiffuseWidgetFanart)</visible>
						<visible>!Window.IsActive(playercontrols)</visible>
						<visible>!IsEmpty(Window(Home).Property(WidgetHasFocus))</visible>
					</control>
				</control>
			</control>
		</control>

		<include condition="[!IsEmpty(Skin.String(ConditionalWeatherArt)) + !IsEmpty(Skin.String(WeatherFanartDir))]">BackgroundWeather</include>
		<control type="videowindow">
			<description>Video</description>
			<include>FullscreenDimensions</include>
			<visible>Player.HasVideo + !Skin.HasSetting(HideBGVideo)</visible>
		</control>
		<control type="visualisation">
			<posx>0</posx>
			<posy>0</posy>
			<width>1280</width>
			<height>720</height>
			<visible>Player.HasAudio + !Skin.HasSetting(Vis-Visualization) + !SubString(Window(Videos).Property(TvTunesIsAlive),True)</visible>
			<animation effect="fade" start="100" end="40" time="300" condition="Window.IsActive(PlayerControls)">Conditional</animation>
		</control>
		<control type="multiimage">
			<include>FullscreenDimensions</include>
			<timeperimage>10000</timeperimage>
			<randomize>true</randomize>
			<loop>yes</loop>
			<fadetime>1000</fadetime>
			<imagepath background="true">$VAR[Vis-Background]</imagepath>
			<animation effect="fade" start="100" end="50" time="0" condition="true">Conditional</animation>
			<animation effect="fade" start="0" end="100" time="1000">Visible</animation>
			<animation effect="fade" start="100" end="0" time="1000">Hidden</animation>
			<include>VizBackAnimation</include>
			<visible>Player.HasAudio + !Skin.HasSetting(AmbilightMode)</visible>
			<animation effect="fade" start="100" end="40" time="300" condition="!Window.IsActive(visualisation) + Window.IsActive(PlayerControls)">Conditional</animation>
		</control>
		<control type="multiimage">
			<include>FullscreenDimensions</include>
			<timeperimage>10000</timeperimage>
			<randomize>true</randomize>
			<loop>yes</loop>
			<fadetime>1000</fadetime>
			<imagepath background="true" diffuse="osd/quicknav/fanart_diffuse2.png">$VAR[Vis-Background]</imagepath>
			<animation effect="fade" start="100" end="50" time="0" condition="true">Conditional</animation>
			<animation effect="fade" start="0" end="100" time="1000">Visible</animation>
			<animation effect="fade" start="100" end="0" time="1000">Hidden</animation>
			<include>VizBackAnimation</include>
			<visible>Player.HasAudio + Skin.HasSetting(AmbilightMode)</visible>
			<animation effect="fade" start="100" end="40" time="300" condition="Window.IsActive(PlayerControls)">Conditional</animation>
		</control>
	</include>
	<include name="GlobalFanart">
		<include>BackgroundAnimation</include>
		<control type="image">
			<description>Global Fanart</description>
			<include>FullscreenDimensions</include>
			<texture background="true">$INFO[ListItem.Art(fanart)]</texture>
			<include>FanartFade</include>			
			<fadetime>FanartCrossfadeTime</fadetime>
			<include>BackgroundAnimation</include>
			<visible>!Skin.HasSetting(HideBGFanart)</visible>
			<visible>![[Control.IsVisible(55) | Control.IsVisible(59) | Control.IsVisible(583) | Control.IsVisible(579)] + !Window.IsActive(movieinformation)] + !Control.IsVisible(580) + !Control.IsVisible(581) + [IsEmpty(Control.GetLabel(5901)) | !Skin.HasSetting(ViewsExtraFanart)]</visible>
		</control>				
		<control type="multiimage" id="5901">
			<description>Fanart extrafanart</description>
			<include>FullscreenDimensions</include>
			<aspectratio>scale</aspectratio>
			<randomize>true</randomize>
			<timeperimage>5000</timeperimage>
			<fadetime>1000</fadetime>
			<imagepath background="true">$INFO[ListItem.Path,,/extrafanart/]</imagepath>
			<include>FanartFade</include>
			<include>BackgroundAnimation</include>
			<visible>!Skin.HasSetting(HideBGFanart)</visible>
			<visible>![[Control.IsVisible(55) | Control.IsVisible(59) | Control.IsVisible(583) | Control.IsVisible(579)] + !Window.IsActive(movieinformation)] + !Control.IsVisible(580) + !Control.IsVisible(581) + Skin.HasSetting(ViewsExtraFanart) + !SubString(Container.Folderpath,plugin://,left)</visible>
		</control>	
		<control type="image">
			<description>NetFilx Fanart Transparency</description>
			<texture background="true">SKINDEFAULT.jpg</texture>
			<include>FanartFade</include>
			<visible>!Skin.HasSetting(HideBGFanart)</visible>
			<visible>[Control.IsVisible(59) | Control.IsVisible(584)] + !Window.IsActive(movieinformation)</visible>
		</control>
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">windows/bg/bg_diffuse.png</texture>
			<include>FanartFade</include>
			<visible>!Skin.HasSetting(HideBGFanart)</visible>
			<visible>[Control.IsVisible(59) | Control.IsVisible(584)] + !Window.IsActive(movieinformation)</visible>
			<visible>!stringcompare(ListItem.Label,..)</visible>
		</control>
		<control type="image">
			<description>BannerList Fanart</description>
			<left>310</left>
			<top>0</top>
			<width>970</width>
			<height>550</height>
			<aspectratio aligny="top">scale</aspectratio>
			<texture background="true" diffuse="views/netfilx/fanart_diffuse.png">$INFO[ListItem.Art(fanart)]</texture>
			<include>FanartFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
			<visible>Control.IsVisible(584) + !Window.IsActive(movieinformation) + IsEmpty(Control.GetLabel(5900))</visible>
			<include>BackgroundAnimation</include>
		</control>	
		<control type="image">
			<description>NetFilx Fanart</description>
			<left>360</left>
			<top>0</top>
			<width>920</width>
			<height>530</height>
			<aspectratio>scale</aspectratio>
			<texture background="true" diffuse="views/netfilx/fanart_diffuse.png">$INFO[ListItem.Art(fanart)]</texture>
			<include>FanartFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
			<visible>!Skin.HasSetting(HideBGFanart)</visible>
			<visible>Control.IsVisible(59) + !Window.IsActive(movieinformation) + IsEmpty(Control.GetLabel(5900))</visible>
			<include>BackgroundAnimation</include>
		</control>	
		<control type="multiimage" id="5900">
			<description>NetFilx Fanart extrafanart</description>
			<left>360</left>
			<top>0</top>
			<width>920</width>
			<height>530</height>
			<aspectratio>scale</aspectratio>
			<randomize>true</randomize>
			<timeperimage>5000</timeperimage>
			<fadetime>1000</fadetime>
			<imagepath background="true" diffuse="views/netfilx/fanart_diffuse.png">$INFO[ListItem.Path,,/extrafanart/]</imagepath>
			<include>FanartFade</include>			
			<visible>!Skin.HasSetting(HideBGFanart)</visible>
			<visible>Control.IsVisible(59) + !Window.IsActive(movieinformation) + Skin.HasSetting(ViewsExtraFanart) + !SubString(Container.Folderpath,plugin://,left)</visible>
			<include>BackgroundAnimation</include>
		</control>		
		<control type="image">
			<description>Pictures Fanart</description>
			<aspectratio align="center" aligny="top">scale</aspectratio>
			<include>FullscreenDimensions</include>
			<texture background="true">$INFO[ListItem.FileNameAndPath]</texture>
			<include>FanartFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
			<visible>Window.IsVisible(Pictures) + Container.HasFiles + !Control.IsVisible(59)</visible>
			<visible>!Skin.HasSetting(HideBGFanart)</visible>
			<include>BackgroundAnimation</include>
		</control>
		<control type="image">
			<description>Pictures Fanart NetFilx</description>
			<left>360</left>
			<top>0</top>
			<width>920</width>
			<height>530</height>
			<aspectratio>scale</aspectratio>
			<texture background="true" diffuse="views/netfilx/fanart_diffuse.png">$INFO[ListItem.FileNameAndPath]</texture>
			<include>FanartFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
			<visible>!Skin.HasSetting(HideBGFanart)</visible>
			<visible>Window.IsVisible(Pictures) + Container.HasFiles + Control.IsVisible(59)</visible>
			<include>BackgroundAnimation</include>
		</control>	
		<control type="image">
			<description>TVGuide Fanart</description>
			<include>FullscreenDimensions</include>
			<include>FanartFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
			<texture background="true">$VAR[TVGuideFanart]</texture>
			<visible>!Skin.HasSetting(HideTVGuideFanart)</visible>
			<include>BackgroundAnimation</include>
		</control>	
	</include>

	<include name="HomeWidgetsFanart">
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">$VAR[HomeWidgetsFanart]</texture>
			<include>FanartFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
			<visible>!Skin.HasSetting(HideBGFanart)</visible>
			<include>BackgroundAnimation</include>
		</control>
		<control type="image">
			<description>Vignette</description>
			<include>FullscreenDimensions</include>
			<texture background="true">windows/bg/bg_vignette.png</texture>
			<include>FanartFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
			<visible>!Skin.HasSetting(HideBGFanart)</visible>
		</control>
	</include>

	<include name="BackgroundVignette">
		<control type="image">
			<description>Vignette</description>
			<include>FullscreenDimensions</include>
			<texture background="true">windows/bg/bg_vignette.png</texture>			
			<visible>!Window.IsActive(visualisation) + !Window.IsVisible(script-nextup-notification-NextUpInfo.xml) + !Window.IsVisible(script-nextup-notification-StillWatchingInfo.xml)</visible>
			<include>BackgroundFade</include>
		</control>
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">windows/bg/bg_diffuse.png</texture>
			<include>FanartFade</include>
			<visible>[Control.IsVisible(50) + !Window.IsVisible(weather) + !Window.IsVisible(musicplaylisteditor) + !Window.IsVisible(profiles)]
				| Control.IsVisible(56)
				| Control.IsVisible(582)
				| [Control.IsVisible(57) + !Window.IsVisible(profiles)]
				| [Control.IsVisible(584) + IsEmpty(ListItem.Art(fanart))]
				| [Control.IsVisible(59) + IsEmpty(ListItem.Art(fanart))]
				| Window.IsActive(PlayerControls)
				| Window.IsActive(shutdownmenu)
				| Window.IsActive(weather)
				| Window.IsActive(movieinformation)
				| Window.IsActive(musicinformation)
				| Window.IsActive(songinformation)
				| Window.IsActive(addoninformation)
				| [Window.IsActive(script-globalsearch-main.xml) + Skin.HasSetting(HideBGFanart)]
				| [Window.IsActive(script-ExtendedInfo Script-DialogInfo.xml) + !Window.IsActive(movieinformation)]
				| [Window.IsActive(script-ExtendedInfo Script-DialogVideoInfo.xml) + !Window.IsActive(movieinformation)]
				| Window.IsActive(virtualkeyboard)
			</visible>
		</control>
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">windows/bg/bg_diffuse.png</texture>
			<include>FanartFade</include>
			<visible>Control.IsVisible(560)
				| Control.IsVisible(561)
				| Window.IsActive(favourites)
			</visible>
			<animation effect="fade" time="0" end="50" condition="true">Conditional</animation>
		</control>
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">windows/bg/bg_diffuse.png</texture>
			<include>FanartFade</include>
			<animation effect="fade" time="0" end="40" condition="Control.IsVisible(582) + ![Window.IsActive(favourites) | Window.IsActive(movieinformation) | Window.IsActive(shutdownmenu) | Window.IsActive(playercontrols)]">Conditional</animation>
			<visible>Control.IsVisible(582)</visible>
		</control>
	</include>

</includes>